// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: dota_gcmessages_common_bot_script.proto

package protocol

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMsgBotWorldState_UnitType int32

const (
	CMsgBotWorldState_INVALID      CMsgBotWorldState_UnitType = 0
	CMsgBotWorldState_HERO         CMsgBotWorldState_UnitType = 1
	CMsgBotWorldState_CREEP_HERO   CMsgBotWorldState_UnitType = 2
	CMsgBotWorldState_LANE_CREEP   CMsgBotWorldState_UnitType = 3
	CMsgBotWorldState_JUNGLE_CREEP CMsgBotWorldState_UnitType = 4
	CMsgBotWorldState_ROSHAN       CMsgBotWorldState_UnitType = 5
	CMsgBotWorldState_TOWER        CMsgBotWorldState_UnitType = 6
	CMsgBotWorldState_BARRACKS     CMsgBotWorldState_UnitType = 7
	CMsgBotWorldState_SHRINE       CMsgBotWorldState_UnitType = 8
	CMsgBotWorldState_FORT         CMsgBotWorldState_UnitType = 9
	CMsgBotWorldState_BUILDING     CMsgBotWorldState_UnitType = 10
	CMsgBotWorldState_COURIER      CMsgBotWorldState_UnitType = 11
	CMsgBotWorldState_WARD         CMsgBotWorldState_UnitType = 12
)

// Enum value maps for CMsgBotWorldState_UnitType.
var (
	CMsgBotWorldState_UnitType_name = map[int32]string{
		0:  "INVALID",
		1:  "HERO",
		2:  "CREEP_HERO",
		3:  "LANE_CREEP",
		4:  "JUNGLE_CREEP",
		5:  "ROSHAN",
		6:  "TOWER",
		7:  "BARRACKS",
		8:  "SHRINE",
		9:  "FORT",
		10: "BUILDING",
		11: "COURIER",
		12: "WARD",
	}
	CMsgBotWorldState_UnitType_value = map[string]int32{
		"INVALID":      0,
		"HERO":         1,
		"CREEP_HERO":   2,
		"LANE_CREEP":   3,
		"JUNGLE_CREEP": 4,
		"ROSHAN":       5,
		"TOWER":        6,
		"BARRACKS":     7,
		"SHRINE":       8,
		"FORT":         9,
		"BUILDING":     10,
		"COURIER":      11,
		"WARD":         12,
	}
)

func (x CMsgBotWorldState_UnitType) Enum() *CMsgBotWorldState_UnitType {
	p := new(CMsgBotWorldState_UnitType)
	*p = x
	return p
}

func (x CMsgBotWorldState_UnitType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgBotWorldState_UnitType) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_common_bot_script_proto_enumTypes[0].Descriptor()
}

func (CMsgBotWorldState_UnitType) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_common_bot_script_proto_enumTypes[0]
}

func (x CMsgBotWorldState_UnitType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgBotWorldState_UnitType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgBotWorldState_UnitType(num)
	return nil
}

// Deprecated: Use CMsgBotWorldState_UnitType.Descriptor instead.
func (CMsgBotWorldState_UnitType) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_bot_script_proto_rawDescGZIP(), []int{0, 0}
}

type CMsgBotWorldState_CourierState int32

const (
	CMsgBotWorldState_COURIER_STATE_INIT                 CMsgBotWorldState_CourierState = -1
	CMsgBotWorldState_COURIER_STATE_IDLE                 CMsgBotWorldState_CourierState = 0
	CMsgBotWorldState_COURIER_STATE_AT_BASE              CMsgBotWorldState_CourierState = 1
	CMsgBotWorldState_COURIER_STATE_MOVING               CMsgBotWorldState_CourierState = 2
	CMsgBotWorldState_COURIER_STATE_DELIVERING_ITEMS     CMsgBotWorldState_CourierState = 3
	CMsgBotWorldState_COURIER_STATE_RETURNING_TO_BASE    CMsgBotWorldState_CourierState = 4
	CMsgBotWorldState_COURIER_STATE_DEAD                 CMsgBotWorldState_CourierState = 5
	CMsgBotWorldState_COURIER_STATE_GOING_TO_SECRET_SHOP CMsgBotWorldState_CourierState = 6
	CMsgBotWorldState_COURIER_STATE_AT_SECRET_SHOP       CMsgBotWorldState_CourierState = 7
)

// Enum value maps for CMsgBotWorldState_CourierState.
var (
	CMsgBotWorldState_CourierState_name = map[int32]string{
		-1: "COURIER_STATE_INIT",
		0:  "COURIER_STATE_IDLE",
		1:  "COURIER_STATE_AT_BASE",
		2:  "COURIER_STATE_MOVING",
		3:  "COURIER_STATE_DELIVERING_ITEMS",
		4:  "COURIER_STATE_RETURNING_TO_BASE",
		5:  "COURIER_STATE_DEAD",
		6:  "COURIER_STATE_GOING_TO_SECRET_SHOP",
		7:  "COURIER_STATE_AT_SECRET_SHOP",
	}
	CMsgBotWorldState_CourierState_value = map[string]int32{
		"COURIER_STATE_INIT":                 -1,
		"COURIER_STATE_IDLE":                 0,
		"COURIER_STATE_AT_BASE":              1,
		"COURIER_STATE_MOVING":               2,
		"COURIER_STATE_DELIVERING_ITEMS":     3,
		"COURIER_STATE_RETURNING_TO_BASE":    4,
		"COURIER_STATE_DEAD":                 5,
		"COURIER_STATE_GOING_TO_SECRET_SHOP": 6,
		"COURIER_STATE_AT_SECRET_SHOP":       7,
	}
)

func (x CMsgBotWorldState_CourierState) Enum() *CMsgBotWorldState_CourierState {
	p := new(CMsgBotWorldState_CourierState)
	*p = x
	return p
}

func (x CMsgBotWorldState_CourierState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgBotWorldState_CourierState) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_common_bot_script_proto_enumTypes[1].Descriptor()
}

func (CMsgBotWorldState_CourierState) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_common_bot_script_proto_enumTypes[1]
}

func (x CMsgBotWorldState_CourierState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgBotWorldState_CourierState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgBotWorldState_CourierState(num)
	return nil
}

// Deprecated: Use CMsgBotWorldState_CourierState.Descriptor instead.
func (CMsgBotWorldState_CourierState) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_bot_script_proto_rawDescGZIP(), []int{0, 1}
}

type CMsgBotWorldState struct {
	state               protoimpl.MessageState                  `protogen:"open.v1"`
	TeamId              *uint32                                 `protobuf:"varint,1,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	GameTime            *float32                                `protobuf:"fixed32,2,opt,name=game_time,json=gameTime" json:"game_time,omitempty"`
	DotaTime            *float32                                `protobuf:"fixed32,3,opt,name=dota_time,json=dotaTime" json:"dota_time,omitempty"`
	GameState           *uint32                                 `protobuf:"varint,4,opt,name=game_state,json=gameState" json:"game_state,omitempty"`
	HeroPickState       *uint32                                 `protobuf:"varint,5,opt,name=hero_pick_state,json=heroPickState" json:"hero_pick_state,omitempty"`
	TimeOfDay           *float32                                `protobuf:"fixed32,6,opt,name=time_of_day,json=timeOfDay" json:"time_of_day,omitempty"`
	GlyphCooldown       *float32                                `protobuf:"fixed32,7,opt,name=glyph_cooldown,json=glyphCooldown" json:"glyph_cooldown,omitempty"`
	GlyphCooldownEnemy  *float32                                `protobuf:"fixed32,8,opt,name=glyph_cooldown_enemy,json=glyphCooldownEnemy" json:"glyph_cooldown_enemy,omitempty"`
	Players             []*CMsgBotWorldState_Player             `protobuf:"bytes,10,rep,name=players" json:"players,omitempty"`
	Units               []*CMsgBotWorldState_Unit               `protobuf:"bytes,11,rep,name=units" json:"units,omitempty"`
	DroppedItems        []*CMsgBotWorldState_DroppedItem        `protobuf:"bytes,12,rep,name=dropped_items,json=droppedItems" json:"dropped_items,omitempty"`
	DroppedItemsDeltas  []int32                                 `protobuf:"varint,112,rep,name=dropped_items_deltas,json=droppedItemsDeltas" json:"dropped_items_deltas,omitempty"`
	RuneInfos           []*CMsgBotWorldState_RuneInfo           `protobuf:"bytes,13,rep,name=rune_infos,json=runeInfos" json:"rune_infos,omitempty"`
	RuneInfosDeltas     []int32                                 `protobuf:"varint,113,rep,name=rune_infos_deltas,json=runeInfosDeltas" json:"rune_infos_deltas,omitempty"`
	IncomingTeleports   []*CMsgBotWorldState_TeleportInfo       `protobuf:"bytes,14,rep,name=incoming_teleports,json=incomingTeleports" json:"incoming_teleports,omitempty"`
	LinearProjectiles   []*CMsgBotWorldState_LinearProjectile   `protobuf:"bytes,15,rep,name=linear_projectiles,json=linearProjectiles" json:"linear_projectiles,omitempty"`
	AvoidanceZones      []*CMsgBotWorldState_AvoidanceZone      `protobuf:"bytes,16,rep,name=avoidance_zones,json=avoidanceZones" json:"avoidance_zones,omitempty"`
	Couriers            []*CMsgBotWorldState_Courier            `protobuf:"bytes,17,rep,name=couriers" json:"couriers,omitempty"`
	AbilityEvents       []*CMsgBotWorldState_EventAbility       `protobuf:"bytes,20,rep,name=ability_events,json=abilityEvents" json:"ability_events,omitempty"`
	DamageEvents        []*CMsgBotWorldState_EventDamage        `protobuf:"bytes,21,rep,name=damage_events,json=damageEvents" json:"damage_events,omitempty"`
	CourierKilledEvents []*CMsgBotWorldState_EventCourierKilled `protobuf:"bytes,22,rep,name=courier_killed_events,json=courierKilledEvents" json:"courier_killed_events,omitempty"`
	RoshanKilledEvents  []*CMsgBotWorldState_EventRoshanKilled  `protobuf:"bytes,23,rep,name=roshan_killed_events,json=roshanKilledEvents" json:"roshan_killed_events,omitempty"`
	TreeEvents          []*CMsgBotWorldState_EventTree          `protobuf:"bytes,24,rep,name=tree_events,json=treeEvents" json:"tree_events,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CMsgBotWorldState) Reset() {
	*x = CMsgBotWorldState{}
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBotWorldState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBotWorldState) ProtoMessage() {}

func (x *CMsgBotWorldState) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBotWorldState.ProtoReflect.Descriptor instead.
func (*CMsgBotWorldState) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_bot_script_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgBotWorldState) GetTeamId() uint32 {
	if x != nil && x.TeamId != nil {
		return *x.TeamId
	}
	return 0
}

func (x *CMsgBotWorldState) GetGameTime() float32 {
	if x != nil && x.GameTime != nil {
		return *x.GameTime
	}
	return 0
}

func (x *CMsgBotWorldState) GetDotaTime() float32 {
	if x != nil && x.DotaTime != nil {
		return *x.DotaTime
	}
	return 0
}

func (x *CMsgBotWorldState) GetGameState() uint32 {
	if x != nil && x.GameState != nil {
		return *x.GameState
	}
	return 0
}

func (x *CMsgBotWorldState) GetHeroPickState() uint32 {
	if x != nil && x.HeroPickState != nil {
		return *x.HeroPickState
	}
	return 0
}

func (x *CMsgBotWorldState) GetTimeOfDay() float32 {
	if x != nil && x.TimeOfDay != nil {
		return *x.TimeOfDay
	}
	return 0
}

func (x *CMsgBotWorldState) GetGlyphCooldown() float32 {
	if x != nil && x.GlyphCooldown != nil {
		return *x.GlyphCooldown
	}
	return 0
}

func (x *CMsgBotWorldState) GetGlyphCooldownEnemy() float32 {
	if x != nil && x.GlyphCooldownEnemy != nil {
		return *x.GlyphCooldownEnemy
	}
	return 0
}

func (x *CMsgBotWorldState) GetPlayers() []*CMsgBotWorldState_Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *CMsgBotWorldState) GetUnits() []*CMsgBotWorldState_Unit {
	if x != nil {
		return x.Units
	}
	return nil
}

func (x *CMsgBotWorldState) GetDroppedItems() []*CMsgBotWorldState_DroppedItem {
	if x != nil {
		return x.DroppedItems
	}
	return nil
}

func (x *CMsgBotWorldState) GetDroppedItemsDeltas() []int32 {
	if x != nil {
		return x.DroppedItemsDeltas
	}
	return nil
}

func (x *CMsgBotWorldState) GetRuneInfos() []*CMsgBotWorldState_RuneInfo {
	if x != nil {
		return x.RuneInfos
	}
	return nil
}

func (x *CMsgBotWorldState) GetRuneInfosDeltas() []int32 {
	if x != nil {
		return x.RuneInfosDeltas
	}
	return nil
}

func (x *CMsgBotWorldState) GetIncomingTeleports() []*CMsgBotWorldState_TeleportInfo {
	if x != nil {
		return x.IncomingTeleports
	}
	return nil
}

func (x *CMsgBotWorldState) GetLinearProjectiles() []*CMsgBotWorldState_LinearProjectile {
	if x != nil {
		return x.LinearProjectiles
	}
	return nil
}

func (x *CMsgBotWorldState) GetAvoidanceZones() []*CMsgBotWorldState_AvoidanceZone {
	if x != nil {
		return x.AvoidanceZones
	}
	return nil
}

func (x *CMsgBotWorldState) GetCouriers() []*CMsgBotWorldState_Courier {
	if x != nil {
		return x.Couriers
	}
	return nil
}

func (x *CMsgBotWorldState) GetAbilityEvents() []*CMsgBotWorldState_EventAbility {
	if x != nil {
		return x.AbilityEvents
	}
	return nil
}

func (x *CMsgBotWorldState) GetDamageEvents() []*CMsgBotWorldState_EventDamage {
	if x != nil {
		return x.DamageEvents
	}
	return nil
}

func (x *CMsgBotWorldState) GetCourierKilledEvents() []*CMsgBotWorldState_EventCourierKilled {
	if x != nil {
		return x.CourierKilledEvents
	}
	return nil
}

func (x *CMsgBotWorldState) GetRoshanKilledEvents() []*CMsgBotWorldState_EventRoshanKilled {
	if x != nil {
		return x.RoshanKilledEvents
	}
	return nil
}

func (x *CMsgBotWorldState) GetTreeEvents() []*CMsgBotWorldState_EventTree {
	if x != nil {
		return x.TreeEvents
	}
	return nil
}

type CMsgBotWorldState_Vector struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             *float32               `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y             *float32               `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
	Z             *float32               `protobuf:"fixed32,3,opt,name=z" json:"z,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBotWorldState_Vector) Reset() {
	*x = CMsgBotWorldState_Vector{}
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBotWorldState_Vector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBotWorldState_Vector) ProtoMessage() {}

func (x *CMsgBotWorldState_Vector) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBotWorldState_Vector.ProtoReflect.Descriptor instead.
func (*CMsgBotWorldState_Vector) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_bot_script_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CMsgBotWorldState_Vector) GetX() float32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgBotWorldState_Vector) GetY() float32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgBotWorldState_Vector) GetZ() float32 {
	if x != nil && x.Z != nil {
		return *x.Z
	}
	return 0
}

type CMsgBotWorldState_Player struct {
	state             protoimpl.MessageState    `protogen:"open.v1"`
	PlayerId          *int32                    `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	HeroId            *int32                    `protobuf:"varint,2,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	IsAlive           *bool                     `protobuf:"varint,3,opt,name=is_alive,json=isAlive" json:"is_alive,omitempty"`
	RespawnTime       *float32                  `protobuf:"fixed32,4,opt,name=respawn_time,json=respawnTime" json:"respawn_time,omitempty"`
	Kills             *uint32                   `protobuf:"varint,5,opt,name=kills" json:"kills,omitempty"`
	Deaths            *uint32                   `protobuf:"varint,6,opt,name=deaths" json:"deaths,omitempty"`
	Assists           *uint32                   `protobuf:"varint,7,opt,name=assists" json:"assists,omitempty"`
	TeamId            *uint32                   `protobuf:"varint,8,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	PrimaryUnitHandle *uint32                   `protobuf:"varint,9,opt,name=primary_unit_handle,json=primaryUnitHandle,def=4294967295" json:"primary_unit_handle,omitempty"`
	Mmr               *int32                    `protobuf:"varint,10,opt,name=mmr" json:"mmr,omitempty"`
	Location          *CMsgBotWorldState_Vector `protobuf:"bytes,11,opt,name=location" json:"location,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

// Default values for CMsgBotWorldState_Player fields.
const (
	Default_CMsgBotWorldState_Player_PrimaryUnitHandle = uint32(4294967295)
)

func (x *CMsgBotWorldState_Player) Reset() {
	*x = CMsgBotWorldState_Player{}
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBotWorldState_Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBotWorldState_Player) ProtoMessage() {}

func (x *CMsgBotWorldState_Player) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBotWorldState_Player.ProtoReflect.Descriptor instead.
func (*CMsgBotWorldState_Player) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_bot_script_proto_rawDescGZIP(), []int{0, 1}
}

func (x *CMsgBotWorldState_Player) GetPlayerId() int32 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *CMsgBotWorldState_Player) GetHeroId() int32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *CMsgBotWorldState_Player) GetIsAlive() bool {
	if x != nil && x.IsAlive != nil {
		return *x.IsAlive
	}
	return false
}

func (x *CMsgBotWorldState_Player) GetRespawnTime() float32 {
	if x != nil && x.RespawnTime != nil {
		return *x.RespawnTime
	}
	return 0
}

func (x *CMsgBotWorldState_Player) GetKills() uint32 {
	if x != nil && x.Kills != nil {
		return *x.Kills
	}
	return 0
}

func (x *CMsgBotWorldState_Player) GetDeaths() uint32 {
	if x != nil && x.Deaths != nil {
		return *x.Deaths
	}
	return 0
}

func (x *CMsgBotWorldState_Player) GetAssists() uint32 {
	if x != nil && x.Assists != nil {
		return *x.Assists
	}
	return 0
}

func (x *CMsgBotWorldState_Player) GetTeamId() uint32 {
	if x != nil && x.TeamId != nil {
		return *x.TeamId
	}
	return 0
}

func (x *CMsgBotWorldState_Player) GetPrimaryUnitHandle() uint32 {
	if x != nil && x.PrimaryUnitHandle != nil {
		return *x.PrimaryUnitHandle
	}
	return Default_CMsgBotWorldState_Player_PrimaryUnitHandle
}

func (x *CMsgBotWorldState_Player) GetMmr() int32 {
	if x != nil && x.Mmr != nil {
		return *x.Mmr
	}
	return 0
}

func (x *CMsgBotWorldState_Player) GetLocation() *CMsgBotWorldState_Vector {
	if x != nil {
		return x.Location
	}
	return nil
}

type CMsgBotWorldState_Ability struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Handle            *uint32                `protobuf:"varint,1,opt,name=handle" json:"handle,omitempty"`
	AbilityId         *int32                 `protobuf:"varint,2,opt,name=ability_id,json=abilityId,def=-1" json:"ability_id,omitempty"`
	Slot              *uint32                `protobuf:"varint,3,opt,name=slot" json:"slot,omitempty"`
	CasterHandle      *uint32                `protobuf:"varint,5,opt,name=caster_handle,json=casterHandle,def=4294967295" json:"caster_handle,omitempty"`
	Level             *uint32                `protobuf:"varint,6,opt,name=level" json:"level,omitempty"`
	CastRange         *uint32                `protobuf:"varint,10,opt,name=cast_range,json=castRange" json:"cast_range,omitempty"`
	ChannelTime       *float32               `protobuf:"fixed32,11,opt,name=channel_time,json=channelTime" json:"channel_time,omitempty"`
	CooldownRemaining *float32               `protobuf:"fixed32,12,opt,name=cooldown_remaining,json=cooldownRemaining,def=0" json:"cooldown_remaining,omitempty"`
	IsActivated       *bool                  `protobuf:"varint,20,opt,name=is_activated,json=isActivated" json:"is_activated,omitempty"`
	IsToggled         *bool                  `protobuf:"varint,21,opt,name=is_toggled,json=isToggled" json:"is_toggled,omitempty"`
	IsInAbilityPhase  *bool                  `protobuf:"varint,22,opt,name=is_in_ability_phase,json=isInAbilityPhase" json:"is_in_ability_phase,omitempty"`
	IsChanneling      *bool                  `protobuf:"varint,23,opt,name=is_channeling,json=isChanneling" json:"is_channeling,omitempty"`
	IsStolen          *bool                  `protobuf:"varint,24,opt,name=is_stolen,json=isStolen" json:"is_stolen,omitempty"`
	IsFullyCastable   *bool                  `protobuf:"varint,25,opt,name=is_fully_castable,json=isFullyCastable" json:"is_fully_castable,omitempty"`
	Charges           *uint32                `protobuf:"varint,30,opt,name=charges" json:"charges,omitempty"`
	SecondaryCharges  *uint32                `protobuf:"varint,31,opt,name=secondary_charges,json=secondaryCharges" json:"secondary_charges,omitempty"`
	IsCombinedLocked  *bool                  `protobuf:"varint,40,opt,name=is_combined_locked,json=isCombinedLocked" json:"is_combined_locked,omitempty"`
	PowerTreadsStat   *int32                 `protobuf:"varint,50,opt,name=power_treads_stat,json=powerTreadsStat,def=-1" json:"power_treads_stat,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

// Default values for CMsgBotWorldState_Ability fields.
const (
	Default_CMsgBotWorldState_Ability_AbilityId         = int32(-1)
	Default_CMsgBotWorldState_Ability_CasterHandle      = uint32(4294967295)
	Default_CMsgBotWorldState_Ability_CooldownRemaining = float32(0)
	Default_CMsgBotWorldState_Ability_PowerTreadsStat   = int32(-1)
)

func (x *CMsgBotWorldState_Ability) Reset() {
	*x = CMsgBotWorldState_Ability{}
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBotWorldState_Ability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBotWorldState_Ability) ProtoMessage() {}

func (x *CMsgBotWorldState_Ability) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBotWorldState_Ability.ProtoReflect.Descriptor instead.
func (*CMsgBotWorldState_Ability) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_bot_script_proto_rawDescGZIP(), []int{0, 2}
}

func (x *CMsgBotWorldState_Ability) GetHandle() uint32 {
	if x != nil && x.Handle != nil {
		return *x.Handle
	}
	return 0
}

func (x *CMsgBotWorldState_Ability) GetAbilityId() int32 {
	if x != nil && x.AbilityId != nil {
		return *x.AbilityId
	}
	return Default_CMsgBotWorldState_Ability_AbilityId
}

func (x *CMsgBotWorldState_Ability) GetSlot() uint32 {
	if x != nil && x.Slot != nil {
		return *x.Slot
	}
	return 0
}

func (x *CMsgBotWorldState_Ability) GetCasterHandle() uint32 {
	if x != nil && x.CasterHandle != nil {
		return *x.CasterHandle
	}
	return Default_CMsgBotWorldState_Ability_CasterHandle
}

func (x *CMsgBotWorldState_Ability) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *CMsgBotWorldState_Ability) GetCastRange() uint32 {
	if x != nil && x.CastRange != nil {
		return *x.CastRange
	}
	return 0
}

func (x *CMsgBotWorldState_Ability) GetChannelTime() float32 {
	if x != nil && x.ChannelTime != nil {
		return *x.ChannelTime
	}
	return 0
}

func (x *CMsgBotWorldState_Ability) GetCooldownRemaining() float32 {
	if x != nil && x.CooldownRemaining != nil {
		return *x.CooldownRemaining
	}
	return Default_CMsgBotWorldState_Ability_CooldownRemaining
}

func (x *CMsgBotWorldState_Ability) GetIsActivated() bool {
	if x != nil && x.IsActivated != nil {
		return *x.IsActivated
	}
	return false
}

func (x *CMsgBotWorldState_Ability) GetIsToggled() bool {
	if x != nil && x.IsToggled != nil {
		return *x.IsToggled
	}
	return false
}

func (x *CMsgBotWorldState_Ability) GetIsInAbilityPhase() bool {
	if x != nil && x.IsInAbilityPhase != nil {
		return *x.IsInAbilityPhase
	}
	return false
}

func (x *CMsgBotWorldState_Ability) GetIsChanneling() bool {
	if x != nil && x.IsChanneling != nil {
		return *x.IsChanneling
	}
	return false
}

func (x *CMsgBotWorldState_Ability) GetIsStolen() bool {
	if x != nil && x.IsStolen != nil {
		return *x.IsStolen
	}
	return false
}

func (x *CMsgBotWorldState_Ability) GetIsFullyCastable() bool {
	if x != nil && x.IsFullyCastable != nil {
		return *x.IsFullyCastable
	}
	return false
}

func (x *CMsgBotWorldState_Ability) GetCharges() uint32 {
	if x != nil && x.Charges != nil {
		return *x.Charges
	}
	return 0
}

func (x *CMsgBotWorldState_Ability) GetSecondaryCharges() uint32 {
	if x != nil && x.SecondaryCharges != nil {
		return *x.SecondaryCharges
	}
	return 0
}

func (x *CMsgBotWorldState_Ability) GetIsCombinedLocked() bool {
	if x != nil && x.IsCombinedLocked != nil {
		return *x.IsCombinedLocked
	}
	return false
}

func (x *CMsgBotWorldState_Ability) GetPowerTreadsStat() int32 {
	if x != nil && x.PowerTreadsStat != nil {
		return *x.PowerTreadsStat
	}
	return Default_CMsgBotWorldState_Ability_PowerTreadsStat
}

type CMsgBotWorldState_DroppedItem struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	ItemId        *int32                    `protobuf:"varint,1,opt,name=item_id,json=itemId,def=-1" json:"item_id,omitempty"`
	Location      *CMsgBotWorldState_Vector `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgBotWorldState_DroppedItem fields.
const (
	Default_CMsgBotWorldState_DroppedItem_ItemId = int32(-1)
)

func (x *CMsgBotWorldState_DroppedItem) Reset() {
	*x = CMsgBotWorldState_DroppedItem{}
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBotWorldState_DroppedItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBotWorldState_DroppedItem) ProtoMessage() {}

func (x *CMsgBotWorldState_DroppedItem) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBotWorldState_DroppedItem.ProtoReflect.Descriptor instead.
func (*CMsgBotWorldState_DroppedItem) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_bot_script_proto_rawDescGZIP(), []int{0, 3}
}

func (x *CMsgBotWorldState_DroppedItem) GetItemId() int32 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return Default_CMsgBotWorldState_DroppedItem_ItemId
}

func (x *CMsgBotWorldState_DroppedItem) GetLocation() *CMsgBotWorldState_Vector {
	if x != nil {
		return x.Location
	}
	return nil
}

type CMsgBotWorldState_RuneInfo struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Type          *int32                    `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Location      *CMsgBotWorldState_Vector `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
	Status        *uint32                   `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
	TimeSinceSeen *float32                  `protobuf:"fixed32,4,opt,name=time_since_seen,json=timeSinceSeen" json:"time_since_seen,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBotWorldState_RuneInfo) Reset() {
	*x = CMsgBotWorldState_RuneInfo{}
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBotWorldState_RuneInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBotWorldState_RuneInfo) ProtoMessage() {}

func (x *CMsgBotWorldState_RuneInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBotWorldState_RuneInfo.ProtoReflect.Descriptor instead.
func (*CMsgBotWorldState_RuneInfo) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_bot_script_proto_rawDescGZIP(), []int{0, 4}
}

func (x *CMsgBotWorldState_RuneInfo) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CMsgBotWorldState_RuneInfo) GetLocation() *CMsgBotWorldState_Vector {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *CMsgBotWorldState_RuneInfo) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *CMsgBotWorldState_RuneInfo) GetTimeSinceSeen() float32 {
	if x != nil && x.TimeSinceSeen != nil {
		return *x.TimeSinceSeen
	}
	return 0
}

type CMsgBotWorldState_TeleportInfo struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	PlayerId      *int32                    `protobuf:"varint,1,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	Location      *CMsgBotWorldState_Vector `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
	TimeRemaining *float32                  `protobuf:"fixed32,3,opt,name=time_remaining,json=timeRemaining" json:"time_remaining,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBotWorldState_TeleportInfo) Reset() {
	*x = CMsgBotWorldState_TeleportInfo{}
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBotWorldState_TeleportInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBotWorldState_TeleportInfo) ProtoMessage() {}

func (x *CMsgBotWorldState_TeleportInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBotWorldState_TeleportInfo.ProtoReflect.Descriptor instead.
func (*CMsgBotWorldState_TeleportInfo) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_bot_script_proto_rawDescGZIP(), []int{0, 5}
}

func (x *CMsgBotWorldState_TeleportInfo) GetPlayerId() int32 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *CMsgBotWorldState_TeleportInfo) GetLocation() *CMsgBotWorldState_Vector {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *CMsgBotWorldState_TeleportInfo) GetTimeRemaining() float32 {
	if x != nil && x.TimeRemaining != nil {
		return *x.TimeRemaining
	}
	return 0
}

type CMsgBotWorldState_Modifier struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Handle                *uint32                `protobuf:"varint,7,opt,name=handle" json:"handle,omitempty"`
	Name                  *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	StackCount            *uint32                `protobuf:"varint,2,opt,name=stack_count,json=stackCount" json:"stack_count,omitempty"`
	AbilityHandle         *uint32                `protobuf:"varint,3,opt,name=ability_handle,json=abilityHandle,def=4294967295" json:"ability_handle,omitempty"`
	AbilityId             *int32                 `protobuf:"varint,4,opt,name=ability_id,json=abilityId,def=-1" json:"ability_id,omitempty"`
	RemainingDuration     *float32               `protobuf:"fixed32,5,opt,name=remaining_duration,json=remainingDuration" json:"remaining_duration,omitempty"`
	AuxiliaryUnitsHandles []uint32               `protobuf:"varint,6,rep,name=auxiliary_units_handles,json=auxiliaryUnitsHandles" json:"auxiliary_units_handles,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

// Default values for CMsgBotWorldState_Modifier fields.
const (
	Default_CMsgBotWorldState_Modifier_AbilityHandle = uint32(4294967295)
	Default_CMsgBotWorldState_Modifier_AbilityId     = int32(-1)
)

func (x *CMsgBotWorldState_Modifier) Reset() {
	*x = CMsgBotWorldState_Modifier{}
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBotWorldState_Modifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBotWorldState_Modifier) ProtoMessage() {}

func (x *CMsgBotWorldState_Modifier) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBotWorldState_Modifier.ProtoReflect.Descriptor instead.
func (*CMsgBotWorldState_Modifier) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_bot_script_proto_rawDescGZIP(), []int{0, 6}
}

func (x *CMsgBotWorldState_Modifier) GetHandle() uint32 {
	if x != nil && x.Handle != nil {
		return *x.Handle
	}
	return 0
}

func (x *CMsgBotWorldState_Modifier) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgBotWorldState_Modifier) GetStackCount() uint32 {
	if x != nil && x.StackCount != nil {
		return *x.StackCount
	}
	return 0
}

func (x *CMsgBotWorldState_Modifier) GetAbilityHandle() uint32 {
	if x != nil && x.AbilityHandle != nil {
		return *x.AbilityHandle
	}
	return Default_CMsgBotWorldState_Modifier_AbilityHandle
}

func (x *CMsgBotWorldState_Modifier) GetAbilityId() int32 {
	if x != nil && x.AbilityId != nil {
		return *x.AbilityId
	}
	return Default_CMsgBotWorldState_Modifier_AbilityId
}

func (x *CMsgBotWorldState_Modifier) GetRemainingDuration() float32 {
	if x != nil && x.RemainingDuration != nil {
		return *x.RemainingDuration
	}
	return 0
}

func (x *CMsgBotWorldState_Modifier) GetAuxiliaryUnitsHandles() []uint32 {
	if x != nil {
		return x.AuxiliaryUnitsHandles
	}
	return nil
}

type CMsgBotWorldState_LinearProjectile struct {
	state          protoimpl.MessageState      `protogen:"open.v1"`
	Handle         *uint32                     `protobuf:"varint,1,opt,name=handle" json:"handle,omitempty"`
	CasterHandle   *uint32                     `protobuf:"varint,2,opt,name=caster_handle,json=casterHandle,def=4294967295" json:"caster_handle,omitempty"`
	CasterUnitType *CMsgBotWorldState_UnitType `protobuf:"varint,9,opt,name=caster_unit_type,json=casterUnitType,enum=protocol.CMsgBotWorldState_UnitType,def=0" json:"caster_unit_type,omitempty"`
	CasterPlayerId *int32                      `protobuf:"varint,3,opt,name=caster_player_id,json=casterPlayerId" json:"caster_player_id,omitempty"`
	AbilityHandle  *uint32                     `protobuf:"varint,4,opt,name=ability_handle,json=abilityHandle,def=4294967295" json:"ability_handle,omitempty"`
	AbilityId      *int32                      `protobuf:"varint,5,opt,name=ability_id,json=abilityId,def=-1" json:"ability_id,omitempty"`
	Location       *CMsgBotWorldState_Vector   `protobuf:"bytes,6,opt,name=location" json:"location,omitempty"`
	Velocity       *CMsgBotWorldState_Vector   `protobuf:"bytes,7,opt,name=velocity" json:"velocity,omitempty"`
	Radius         *uint32                     `protobuf:"varint,8,opt,name=radius" json:"radius,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

// Default values for CMsgBotWorldState_LinearProjectile fields.
const (
	Default_CMsgBotWorldState_LinearProjectile_CasterHandle   = uint32(4294967295)
	Default_CMsgBotWorldState_LinearProjectile_CasterUnitType = CMsgBotWorldState_INVALID
	Default_CMsgBotWorldState_LinearProjectile_AbilityHandle  = uint32(4294967295)
	Default_CMsgBotWorldState_LinearProjectile_AbilityId      = int32(-1)
)

func (x *CMsgBotWorldState_LinearProjectile) Reset() {
	*x = CMsgBotWorldState_LinearProjectile{}
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBotWorldState_LinearProjectile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBotWorldState_LinearProjectile) ProtoMessage() {}

func (x *CMsgBotWorldState_LinearProjectile) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBotWorldState_LinearProjectile.ProtoReflect.Descriptor instead.
func (*CMsgBotWorldState_LinearProjectile) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_bot_script_proto_rawDescGZIP(), []int{0, 7}
}

func (x *CMsgBotWorldState_LinearProjectile) GetHandle() uint32 {
	if x != nil && x.Handle != nil {
		return *x.Handle
	}
	return 0
}

func (x *CMsgBotWorldState_LinearProjectile) GetCasterHandle() uint32 {
	if x != nil && x.CasterHandle != nil {
		return *x.CasterHandle
	}
	return Default_CMsgBotWorldState_LinearProjectile_CasterHandle
}

func (x *CMsgBotWorldState_LinearProjectile) GetCasterUnitType() CMsgBotWorldState_UnitType {
	if x != nil && x.CasterUnitType != nil {
		return *x.CasterUnitType
	}
	return Default_CMsgBotWorldState_LinearProjectile_CasterUnitType
}

func (x *CMsgBotWorldState_LinearProjectile) GetCasterPlayerId() int32 {
	if x != nil && x.CasterPlayerId != nil {
		return *x.CasterPlayerId
	}
	return 0
}

func (x *CMsgBotWorldState_LinearProjectile) GetAbilityHandle() uint32 {
	if x != nil && x.AbilityHandle != nil {
		return *x.AbilityHandle
	}
	return Default_CMsgBotWorldState_LinearProjectile_AbilityHandle
}

func (x *CMsgBotWorldState_LinearProjectile) GetAbilityId() int32 {
	if x != nil && x.AbilityId != nil {
		return *x.AbilityId
	}
	return Default_CMsgBotWorldState_LinearProjectile_AbilityId
}

func (x *CMsgBotWorldState_LinearProjectile) GetLocation() *CMsgBotWorldState_Vector {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *CMsgBotWorldState_LinearProjectile) GetVelocity() *CMsgBotWorldState_Vector {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *CMsgBotWorldState_LinearProjectile) GetRadius() uint32 {
	if x != nil && x.Radius != nil {
		return *x.Radius
	}
	return 0
}

type CMsgBotWorldState_TrackingProjectile struct {
	state          protoimpl.MessageState      `protogen:"open.v1"`
	Handle         *uint32                     `protobuf:"varint,10,opt,name=handle" json:"handle,omitempty"`
	CasterHandle   *uint32                     `protobuf:"varint,1,opt,name=caster_handle,json=casterHandle,def=4294967295" json:"caster_handle,omitempty"`
	CasterUnitType *CMsgBotWorldState_UnitType `protobuf:"varint,9,opt,name=caster_unit_type,json=casterUnitType,enum=protocol.CMsgBotWorldState_UnitType,def=0" json:"caster_unit_type,omitempty"`
	CasterPlayerId *int32                      `protobuf:"varint,2,opt,name=caster_player_id,json=casterPlayerId" json:"caster_player_id,omitempty"`
	AbilityHandle  *uint32                     `protobuf:"varint,3,opt,name=ability_handle,json=abilityHandle,def=4294967295" json:"ability_handle,omitempty"`
	AbilityId      *int32                      `protobuf:"varint,4,opt,name=ability_id,json=abilityId,def=-1" json:"ability_id,omitempty"`
	Location       *CMsgBotWorldState_Vector   `protobuf:"bytes,5,opt,name=location" json:"location,omitempty"`
	Velocity       *uint32                     `protobuf:"varint,6,opt,name=velocity" json:"velocity,omitempty"`
	IsDodgeable    *bool                       `protobuf:"varint,7,opt,name=is_dodgeable,json=isDodgeable" json:"is_dodgeable,omitempty"`
	IsAttack       *bool                       `protobuf:"varint,8,opt,name=is_attack,json=isAttack" json:"is_attack,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

// Default values for CMsgBotWorldState_TrackingProjectile fields.
const (
	Default_CMsgBotWorldState_TrackingProjectile_CasterHandle   = uint32(4294967295)
	Default_CMsgBotWorldState_TrackingProjectile_CasterUnitType = CMsgBotWorldState_INVALID
	Default_CMsgBotWorldState_TrackingProjectile_AbilityHandle  = uint32(4294967295)
	Default_CMsgBotWorldState_TrackingProjectile_AbilityId      = int32(-1)
)

func (x *CMsgBotWorldState_TrackingProjectile) Reset() {
	*x = CMsgBotWorldState_TrackingProjectile{}
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBotWorldState_TrackingProjectile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBotWorldState_TrackingProjectile) ProtoMessage() {}

func (x *CMsgBotWorldState_TrackingProjectile) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBotWorldState_TrackingProjectile.ProtoReflect.Descriptor instead.
func (*CMsgBotWorldState_TrackingProjectile) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_bot_script_proto_rawDescGZIP(), []int{0, 8}
}

func (x *CMsgBotWorldState_TrackingProjectile) GetHandle() uint32 {
	if x != nil && x.Handle != nil {
		return *x.Handle
	}
	return 0
}

func (x *CMsgBotWorldState_TrackingProjectile) GetCasterHandle() uint32 {
	if x != nil && x.CasterHandle != nil {
		return *x.CasterHandle
	}
	return Default_CMsgBotWorldState_TrackingProjectile_CasterHandle
}

func (x *CMsgBotWorldState_TrackingProjectile) GetCasterUnitType() CMsgBotWorldState_UnitType {
	if x != nil && x.CasterUnitType != nil {
		return *x.CasterUnitType
	}
	return Default_CMsgBotWorldState_TrackingProjectile_CasterUnitType
}

func (x *CMsgBotWorldState_TrackingProjectile) GetCasterPlayerId() int32 {
	if x != nil && x.CasterPlayerId != nil {
		return *x.CasterPlayerId
	}
	return 0
}

func (x *CMsgBotWorldState_TrackingProjectile) GetAbilityHandle() uint32 {
	if x != nil && x.AbilityHandle != nil {
		return *x.AbilityHandle
	}
	return Default_CMsgBotWorldState_TrackingProjectile_AbilityHandle
}

func (x *CMsgBotWorldState_TrackingProjectile) GetAbilityId() int32 {
	if x != nil && x.AbilityId != nil {
		return *x.AbilityId
	}
	return Default_CMsgBotWorldState_TrackingProjectile_AbilityId
}

func (x *CMsgBotWorldState_TrackingProjectile) GetLocation() *CMsgBotWorldState_Vector {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *CMsgBotWorldState_TrackingProjectile) GetVelocity() uint32 {
	if x != nil && x.Velocity != nil {
		return *x.Velocity
	}
	return 0
}

func (x *CMsgBotWorldState_TrackingProjectile) GetIsDodgeable() bool {
	if x != nil && x.IsDodgeable != nil {
		return *x.IsDodgeable
	}
	return false
}

func (x *CMsgBotWorldState_TrackingProjectile) GetIsAttack() bool {
	if x != nil && x.IsAttack != nil {
		return *x.IsAttack
	}
	return false
}

type CMsgBotWorldState_AvoidanceZone struct {
	state          protoimpl.MessageState      `protogen:"open.v1"`
	Location       *CMsgBotWorldState_Vector   `protobuf:"bytes,1,opt,name=location" json:"location,omitempty"`
	CasterHandle   *uint32                     `protobuf:"varint,2,opt,name=caster_handle,json=casterHandle,def=4294967295" json:"caster_handle,omitempty"`
	CasterUnitType *CMsgBotWorldState_UnitType `protobuf:"varint,7,opt,name=caster_unit_type,json=casterUnitType,enum=protocol.CMsgBotWorldState_UnitType,def=0" json:"caster_unit_type,omitempty"`
	CasterPlayerId *int32                      `protobuf:"varint,3,opt,name=caster_player_id,json=casterPlayerId" json:"caster_player_id,omitempty"`
	AbilityHandle  *uint32                     `protobuf:"varint,4,opt,name=ability_handle,json=abilityHandle,def=4294967295" json:"ability_handle,omitempty"`
	AbilityId      *int32                      `protobuf:"varint,5,opt,name=ability_id,json=abilityId,def=-1" json:"ability_id,omitempty"`
	Radius         *uint32                     `protobuf:"varint,6,opt,name=radius" json:"radius,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

// Default values for CMsgBotWorldState_AvoidanceZone fields.
const (
	Default_CMsgBotWorldState_AvoidanceZone_CasterHandle   = uint32(4294967295)
	Default_CMsgBotWorldState_AvoidanceZone_CasterUnitType = CMsgBotWorldState_INVALID
	Default_CMsgBotWorldState_AvoidanceZone_AbilityHandle  = uint32(4294967295)
	Default_CMsgBotWorldState_AvoidanceZone_AbilityId      = int32(-1)
)

func (x *CMsgBotWorldState_AvoidanceZone) Reset() {
	*x = CMsgBotWorldState_AvoidanceZone{}
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBotWorldState_AvoidanceZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBotWorldState_AvoidanceZone) ProtoMessage() {}

func (x *CMsgBotWorldState_AvoidanceZone) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBotWorldState_AvoidanceZone.ProtoReflect.Descriptor instead.
func (*CMsgBotWorldState_AvoidanceZone) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_bot_script_proto_rawDescGZIP(), []int{0, 9}
}

func (x *CMsgBotWorldState_AvoidanceZone) GetLocation() *CMsgBotWorldState_Vector {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *CMsgBotWorldState_AvoidanceZone) GetCasterHandle() uint32 {
	if x != nil && x.CasterHandle != nil {
		return *x.CasterHandle
	}
	return Default_CMsgBotWorldState_AvoidanceZone_CasterHandle
}

func (x *CMsgBotWorldState_AvoidanceZone) GetCasterUnitType() CMsgBotWorldState_UnitType {
	if x != nil && x.CasterUnitType != nil {
		return *x.CasterUnitType
	}
	return Default_CMsgBotWorldState_AvoidanceZone_CasterUnitType
}

func (x *CMsgBotWorldState_AvoidanceZone) GetCasterPlayerId() int32 {
	if x != nil && x.CasterPlayerId != nil {
		return *x.CasterPlayerId
	}
	return 0
}

func (x *CMsgBotWorldState_AvoidanceZone) GetAbilityHandle() uint32 {
	if x != nil && x.AbilityHandle != nil {
		return *x.AbilityHandle
	}
	return Default_CMsgBotWorldState_AvoidanceZone_AbilityHandle
}

func (x *CMsgBotWorldState_AvoidanceZone) GetAbilityId() int32 {
	if x != nil && x.AbilityId != nil {
		return *x.AbilityId
	}
	return Default_CMsgBotWorldState_AvoidanceZone_AbilityId
}

func (x *CMsgBotWorldState_AvoidanceZone) GetRadius() uint32 {
	if x != nil && x.Radius != nil {
		return *x.Radius
	}
	return 0
}

type CMsgBotWorldState_Courier struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Handle        *uint32                         `protobuf:"varint,1,opt,name=handle" json:"handle,omitempty"`
	State         *CMsgBotWorldState_CourierState `protobuf:"varint,2,opt,name=state,enum=protocol.CMsgBotWorldState_CourierState,def=-1" json:"state,omitempty"`
	PlayerId      *int32                          `protobuf:"varint,3,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgBotWorldState_Courier fields.
const (
	Default_CMsgBotWorldState_Courier_State = CMsgBotWorldState_COURIER_STATE_INIT
)

func (x *CMsgBotWorldState_Courier) Reset() {
	*x = CMsgBotWorldState_Courier{}
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBotWorldState_Courier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBotWorldState_Courier) ProtoMessage() {}

func (x *CMsgBotWorldState_Courier) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBotWorldState_Courier.ProtoReflect.Descriptor instead.
func (*CMsgBotWorldState_Courier) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_bot_script_proto_rawDescGZIP(), []int{0, 10}
}

func (x *CMsgBotWorldState_Courier) GetHandle() uint32 {
	if x != nil && x.Handle != nil {
		return *x.Handle
	}
	return 0
}

func (x *CMsgBotWorldState_Courier) GetState() CMsgBotWorldState_CourierState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return Default_CMsgBotWorldState_Courier_State
}

func (x *CMsgBotWorldState_Courier) GetPlayerId() int32 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

type CMsgBotWorldState_EventAbility struct {
	state          protoimpl.MessageState    `protogen:"open.v1"`
	AbilityId      *int32                    `protobuf:"varint,1,opt,name=ability_id,json=abilityId,def=-1" json:"ability_id,omitempty"`
	PlayerId       *int32                    `protobuf:"varint,2,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	UnitHandle     *uint32                   `protobuf:"varint,3,opt,name=unit_handle,json=unitHandle,def=4294967295" json:"unit_handle,omitempty"`
	Location       *CMsgBotWorldState_Vector `protobuf:"bytes,4,opt,name=location" json:"location,omitempty"`
	IsChannelStart *bool                     `protobuf:"varint,5,opt,name=is_channel_start,json=isChannelStart" json:"is_channel_start,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

// Default values for CMsgBotWorldState_EventAbility fields.
const (
	Default_CMsgBotWorldState_EventAbility_AbilityId  = int32(-1)
	Default_CMsgBotWorldState_EventAbility_UnitHandle = uint32(4294967295)
)

func (x *CMsgBotWorldState_EventAbility) Reset() {
	*x = CMsgBotWorldState_EventAbility{}
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBotWorldState_EventAbility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBotWorldState_EventAbility) ProtoMessage() {}

func (x *CMsgBotWorldState_EventAbility) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBotWorldState_EventAbility.ProtoReflect.Descriptor instead.
func (*CMsgBotWorldState_EventAbility) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_bot_script_proto_rawDescGZIP(), []int{0, 11}
}

func (x *CMsgBotWorldState_EventAbility) GetAbilityId() int32 {
	if x != nil && x.AbilityId != nil {
		return *x.AbilityId
	}
	return Default_CMsgBotWorldState_EventAbility_AbilityId
}

func (x *CMsgBotWorldState_EventAbility) GetPlayerId() int32 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *CMsgBotWorldState_EventAbility) GetUnitHandle() uint32 {
	if x != nil && x.UnitHandle != nil {
		return *x.UnitHandle
	}
	return Default_CMsgBotWorldState_EventAbility_UnitHandle
}

func (x *CMsgBotWorldState_EventAbility) GetLocation() *CMsgBotWorldState_Vector {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *CMsgBotWorldState_EventAbility) GetIsChannelStart() bool {
	if x != nil && x.IsChannelStart != nil {
		return *x.IsChannelStart
	}
	return false
}

type CMsgBotWorldState_EventDamage struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Damage             *uint32                `protobuf:"varint,1,opt,name=damage" json:"damage,omitempty"`
	VictimPlayerId     *int32                 `protobuf:"varint,2,opt,name=victim_player_id,json=victimPlayerId" json:"victim_player_id,omitempty"`
	VictimUnitHandle   *uint32                `protobuf:"varint,3,opt,name=victim_unit_handle,json=victimUnitHandle,def=4294967295" json:"victim_unit_handle,omitempty"`
	AttackerPlayerId   *int32                 `protobuf:"varint,4,opt,name=attacker_player_id,json=attackerPlayerId" json:"attacker_player_id,omitempty"`
	AttackerUnitHandle *uint32                `protobuf:"varint,5,opt,name=attacker_unit_handle,json=attackerUnitHandle,def=4294967295" json:"attacker_unit_handle,omitempty"`
	AbilityId          *int32                 `protobuf:"varint,6,opt,name=ability_id,json=abilityId,def=-1" json:"ability_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

// Default values for CMsgBotWorldState_EventDamage fields.
const (
	Default_CMsgBotWorldState_EventDamage_VictimUnitHandle   = uint32(4294967295)
	Default_CMsgBotWorldState_EventDamage_AttackerUnitHandle = uint32(4294967295)
	Default_CMsgBotWorldState_EventDamage_AbilityId          = int32(-1)
)

func (x *CMsgBotWorldState_EventDamage) Reset() {
	*x = CMsgBotWorldState_EventDamage{}
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBotWorldState_EventDamage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBotWorldState_EventDamage) ProtoMessage() {}

func (x *CMsgBotWorldState_EventDamage) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBotWorldState_EventDamage.ProtoReflect.Descriptor instead.
func (*CMsgBotWorldState_EventDamage) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_bot_script_proto_rawDescGZIP(), []int{0, 12}
}

func (x *CMsgBotWorldState_EventDamage) GetDamage() uint32 {
	if x != nil && x.Damage != nil {
		return *x.Damage
	}
	return 0
}

func (x *CMsgBotWorldState_EventDamage) GetVictimPlayerId() int32 {
	if x != nil && x.VictimPlayerId != nil {
		return *x.VictimPlayerId
	}
	return 0
}

func (x *CMsgBotWorldState_EventDamage) GetVictimUnitHandle() uint32 {
	if x != nil && x.VictimUnitHandle != nil {
		return *x.VictimUnitHandle
	}
	return Default_CMsgBotWorldState_EventDamage_VictimUnitHandle
}

func (x *CMsgBotWorldState_EventDamage) GetAttackerPlayerId() int32 {
	if x != nil && x.AttackerPlayerId != nil {
		return *x.AttackerPlayerId
	}
	return 0
}

func (x *CMsgBotWorldState_EventDamage) GetAttackerUnitHandle() uint32 {
	if x != nil && x.AttackerUnitHandle != nil {
		return *x.AttackerUnitHandle
	}
	return Default_CMsgBotWorldState_EventDamage_AttackerUnitHandle
}

func (x *CMsgBotWorldState_EventDamage) GetAbilityId() int32 {
	if x != nil && x.AbilityId != nil {
		return *x.AbilityId
	}
	return Default_CMsgBotWorldState_EventDamage_AbilityId
}

type CMsgBotWorldState_EventCourierKilled struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TeamId            *uint32                `protobuf:"varint,1,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	CourierUnitHandle *uint32                `protobuf:"varint,2,opt,name=courier_unit_handle,json=courierUnitHandle,def=4294967295" json:"courier_unit_handle,omitempty"`
	KillerPlayerId    *int32                 `protobuf:"varint,3,opt,name=killer_player_id,json=killerPlayerId" json:"killer_player_id,omitempty"`
	KillerUnitHandle  *uint32                `protobuf:"varint,4,opt,name=killer_unit_handle,json=killerUnitHandle,def=4294967295" json:"killer_unit_handle,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

// Default values for CMsgBotWorldState_EventCourierKilled fields.
const (
	Default_CMsgBotWorldState_EventCourierKilled_CourierUnitHandle = uint32(4294967295)
	Default_CMsgBotWorldState_EventCourierKilled_KillerUnitHandle  = uint32(4294967295)
)

func (x *CMsgBotWorldState_EventCourierKilled) Reset() {
	*x = CMsgBotWorldState_EventCourierKilled{}
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBotWorldState_EventCourierKilled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBotWorldState_EventCourierKilled) ProtoMessage() {}

func (x *CMsgBotWorldState_EventCourierKilled) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBotWorldState_EventCourierKilled.ProtoReflect.Descriptor instead.
func (*CMsgBotWorldState_EventCourierKilled) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_bot_script_proto_rawDescGZIP(), []int{0, 13}
}

func (x *CMsgBotWorldState_EventCourierKilled) GetTeamId() uint32 {
	if x != nil && x.TeamId != nil {
		return *x.TeamId
	}
	return 0
}

func (x *CMsgBotWorldState_EventCourierKilled) GetCourierUnitHandle() uint32 {
	if x != nil && x.CourierUnitHandle != nil {
		return *x.CourierUnitHandle
	}
	return Default_CMsgBotWorldState_EventCourierKilled_CourierUnitHandle
}

func (x *CMsgBotWorldState_EventCourierKilled) GetKillerPlayerId() int32 {
	if x != nil && x.KillerPlayerId != nil {
		return *x.KillerPlayerId
	}
	return 0
}

func (x *CMsgBotWorldState_EventCourierKilled) GetKillerUnitHandle() uint32 {
	if x != nil && x.KillerUnitHandle != nil {
		return *x.KillerUnitHandle
	}
	return Default_CMsgBotWorldState_EventCourierKilled_KillerUnitHandle
}

type CMsgBotWorldState_EventRoshanKilled struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	KillerPlayerId   *int32                 `protobuf:"varint,1,opt,name=killer_player_id,json=killerPlayerId" json:"killer_player_id,omitempty"`
	KillerUnitHandle *uint32                `protobuf:"varint,2,opt,name=killer_unit_handle,json=killerUnitHandle,def=4294967295" json:"killer_unit_handle,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

// Default values for CMsgBotWorldState_EventRoshanKilled fields.
const (
	Default_CMsgBotWorldState_EventRoshanKilled_KillerUnitHandle = uint32(4294967295)
)

func (x *CMsgBotWorldState_EventRoshanKilled) Reset() {
	*x = CMsgBotWorldState_EventRoshanKilled{}
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBotWorldState_EventRoshanKilled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBotWorldState_EventRoshanKilled) ProtoMessage() {}

func (x *CMsgBotWorldState_EventRoshanKilled) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBotWorldState_EventRoshanKilled.ProtoReflect.Descriptor instead.
func (*CMsgBotWorldState_EventRoshanKilled) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_bot_script_proto_rawDescGZIP(), []int{0, 14}
}

func (x *CMsgBotWorldState_EventRoshanKilled) GetKillerPlayerId() int32 {
	if x != nil && x.KillerPlayerId != nil {
		return *x.KillerPlayerId
	}
	return 0
}

func (x *CMsgBotWorldState_EventRoshanKilled) GetKillerUnitHandle() uint32 {
	if x != nil && x.KillerUnitHandle != nil {
		return *x.KillerUnitHandle
	}
	return Default_CMsgBotWorldState_EventRoshanKilled_KillerUnitHandle
}

type CMsgBotWorldState_EventTree struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	TreeId        *uint32                   `protobuf:"varint,1,opt,name=tree_id,json=treeId" json:"tree_id,omitempty"`
	Destroyed     *bool                     `protobuf:"varint,2,opt,name=destroyed" json:"destroyed,omitempty"`
	Respawned     *bool                     `protobuf:"varint,3,opt,name=respawned" json:"respawned,omitempty"`
	Location      *CMsgBotWorldState_Vector `protobuf:"bytes,4,opt,name=location" json:"location,omitempty"`
	Delayed       *bool                     `protobuf:"varint,5,opt,name=delayed" json:"delayed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBotWorldState_EventTree) Reset() {
	*x = CMsgBotWorldState_EventTree{}
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBotWorldState_EventTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBotWorldState_EventTree) ProtoMessage() {}

func (x *CMsgBotWorldState_EventTree) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBotWorldState_EventTree.ProtoReflect.Descriptor instead.
func (*CMsgBotWorldState_EventTree) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_bot_script_proto_rawDescGZIP(), []int{0, 15}
}

func (x *CMsgBotWorldState_EventTree) GetTreeId() uint32 {
	if x != nil && x.TreeId != nil {
		return *x.TreeId
	}
	return 0
}

func (x *CMsgBotWorldState_EventTree) GetDestroyed() bool {
	if x != nil && x.Destroyed != nil {
		return *x.Destroyed
	}
	return false
}

func (x *CMsgBotWorldState_EventTree) GetRespawned() bool {
	if x != nil && x.Respawned != nil {
		return *x.Respawned
	}
	return false
}

func (x *CMsgBotWorldState_EventTree) GetLocation() *CMsgBotWorldState_Vector {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *CMsgBotWorldState_EventTree) GetDelayed() bool {
	if x != nil && x.Delayed != nil {
		return *x.Delayed
	}
	return false
}

type CMsgBotWorldState_Unit struct {
	state                       protoimpl.MessageState                  `protogen:"open.v1"`
	Handle                      *uint32                                 `protobuf:"varint,1,opt,name=handle" json:"handle,omitempty"`
	UnitType                    *CMsgBotWorldState_UnitType             `protobuf:"varint,2,opt,name=unit_type,json=unitType,enum=protocol.CMsgBotWorldState_UnitType,def=0" json:"unit_type,omitempty"`
	Name                        *string                                 `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	TeamId                      *uint32                                 `protobuf:"varint,4,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Level                       *uint32                                 `protobuf:"varint,5,opt,name=level" json:"level,omitempty"`
	Location                    *CMsgBotWorldState_Vector               `protobuf:"bytes,6,opt,name=location" json:"location,omitempty"`
	IsAlive                     *bool                                   `protobuf:"varint,7,opt,name=is_alive,json=isAlive" json:"is_alive,omitempty"`
	PlayerId                    *int32                                  `protobuf:"varint,8,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	BoundingRadius              *int32                                  `protobuf:"varint,10,opt,name=bounding_radius,json=boundingRadius" json:"bounding_radius,omitempty"`
	Facing                      *int32                                  `protobuf:"varint,11,opt,name=facing" json:"facing,omitempty"`
	GroundHeight                *uint32                                 `protobuf:"varint,12,opt,name=ground_height,json=groundHeight" json:"ground_height,omitempty"`
	VisionRangeDaytime          *uint32                                 `protobuf:"varint,15,opt,name=vision_range_daytime,json=visionRangeDaytime" json:"vision_range_daytime,omitempty"`
	VisionRangeNighttime        *uint32                                 `protobuf:"varint,16,opt,name=vision_range_nighttime,json=visionRangeNighttime" json:"vision_range_nighttime,omitempty"`
	Health                      *int32                                  `protobuf:"varint,20,opt,name=health" json:"health,omitempty"`
	HealthMax                   *int32                                  `protobuf:"varint,21,opt,name=health_max,json=healthMax" json:"health_max,omitempty"`
	HealthRegen                 *float32                                `protobuf:"fixed32,22,opt,name=health_regen,json=healthRegen" json:"health_regen,omitempty"`
	Mana                        *int32                                  `protobuf:"varint,25,opt,name=mana" json:"mana,omitempty"`
	ManaMax                     *int32                                  `protobuf:"varint,26,opt,name=mana_max,json=manaMax" json:"mana_max,omitempty"`
	ManaRegen                   *float32                                `protobuf:"fixed32,27,opt,name=mana_regen,json=manaRegen" json:"mana_regen,omitempty"`
	BaseMovementSpeed           *int32                                  `protobuf:"varint,30,opt,name=base_movement_speed,json=baseMovementSpeed" json:"base_movement_speed,omitempty"`
	CurrentMovementSpeed        *int32                                  `protobuf:"varint,31,opt,name=current_movement_speed,json=currentMovementSpeed" json:"current_movement_speed,omitempty"`
	AnimActivity                *int32                                  `protobuf:"varint,35,opt,name=anim_activity,json=animActivity" json:"anim_activity,omitempty"`
	AnimCycle                   *float32                                `protobuf:"fixed32,36,opt,name=anim_cycle,json=animCycle" json:"anim_cycle,omitempty"`
	BaseDamage                  *int32                                  `protobuf:"varint,40,opt,name=base_damage,json=baseDamage" json:"base_damage,omitempty"`
	BaseDamageVariance          *int32                                  `protobuf:"varint,41,opt,name=base_damage_variance,json=baseDamageVariance" json:"base_damage_variance,omitempty"`
	BonusDamage                 *int32                                  `protobuf:"varint,42,opt,name=bonus_damage,json=bonusDamage" json:"bonus_damage,omitempty"`
	AttackDamage                *int32                                  `protobuf:"varint,43,opt,name=attack_damage,json=attackDamage" json:"attack_damage,omitempty"`
	AttackRange                 *int32                                  `protobuf:"varint,44,opt,name=attack_range,json=attackRange" json:"attack_range,omitempty"`
	AttackSpeed                 *float32                                `protobuf:"fixed32,45,opt,name=attack_speed,json=attackSpeed" json:"attack_speed,omitempty"`
	AttackAnimPoint             *float32                                `protobuf:"fixed32,46,opt,name=attack_anim_point,json=attackAnimPoint" json:"attack_anim_point,omitempty"`
	AttackAcquisitionRange      *int32                                  `protobuf:"varint,47,opt,name=attack_acquisition_range,json=attackAcquisitionRange" json:"attack_acquisition_range,omitempty"`
	AttackProjectileSpeed       *int32                                  `protobuf:"varint,48,opt,name=attack_projectile_speed,json=attackProjectileSpeed" json:"attack_projectile_speed,omitempty"`
	AttackTargetHandle          *uint32                                 `protobuf:"varint,49,opt,name=attack_target_handle,json=attackTargetHandle,def=4294967295" json:"attack_target_handle,omitempty"`
	AttackTargetName            *string                                 `protobuf:"bytes,52,opt,name=attack_target_name,json=attackTargetName" json:"attack_target_name,omitempty"`
	AttacksPerSecond            *int32                                  `protobuf:"varint,50,opt,name=attacks_per_second,json=attacksPerSecond,def=-1" json:"attacks_per_second,omitempty"`
	LastAttackTime              *float32                                `protobuf:"fixed32,51,opt,name=last_attack_time,json=lastAttackTime,def=-1" json:"last_attack_time,omitempty"`
	BountyXp                    *uint32                                 `protobuf:"varint,60,opt,name=bounty_xp,json=bountyXp" json:"bounty_xp,omitempty"`
	BountyGoldMin               *uint32                                 `protobuf:"varint,61,opt,name=bounty_gold_min,json=bountyGoldMin" json:"bounty_gold_min,omitempty"`
	BountyGoldMax               *uint32                                 `protobuf:"varint,62,opt,name=bounty_gold_max,json=bountyGoldMax" json:"bounty_gold_max,omitempty"`
	IsChanneling                *bool                                   `protobuf:"varint,65,opt,name=is_channeling,json=isChanneling" json:"is_channeling,omitempty"`
	ActiveAbilityHandle         *uint32                                 `protobuf:"varint,66,opt,name=active_ability_handle,json=activeAbilityHandle,def=4294967295" json:"active_ability_handle,omitempty"`
	IsAttackImmune              *bool                                   `protobuf:"varint,70,opt,name=is_attack_immune,json=isAttackImmune" json:"is_attack_immune,omitempty"`
	IsBlind                     *bool                                   `protobuf:"varint,71,opt,name=is_blind,json=isBlind" json:"is_blind,omitempty"`
	IsBlockDisabled             *bool                                   `protobuf:"varint,72,opt,name=is_block_disabled,json=isBlockDisabled" json:"is_block_disabled,omitempty"`
	IsDisarmed                  *bool                                   `protobuf:"varint,73,opt,name=is_disarmed,json=isDisarmed" json:"is_disarmed,omitempty"`
	IsDominated                 *bool                                   `protobuf:"varint,74,opt,name=is_dominated,json=isDominated" json:"is_dominated,omitempty"`
	IsEvadeDisabled             *bool                                   `protobuf:"varint,75,opt,name=is_evade_disabled,json=isEvadeDisabled" json:"is_evade_disabled,omitempty"`
	IsHexed                     *bool                                   `protobuf:"varint,76,opt,name=is_hexed,json=isHexed" json:"is_hexed,omitempty"`
	IsInvisible                 *bool                                   `protobuf:"varint,77,opt,name=is_invisible,json=isInvisible" json:"is_invisible,omitempty"`
	IsInvulnerable              *bool                                   `protobuf:"varint,78,opt,name=is_invulnerable,json=isInvulnerable" json:"is_invulnerable,omitempty"`
	IsMagicImmune               *bool                                   `protobuf:"varint,79,opt,name=is_magic_immune,json=isMagicImmune" json:"is_magic_immune,omitempty"`
	IsMuted                     *bool                                   `protobuf:"varint,80,opt,name=is_muted,json=isMuted" json:"is_muted,omitempty"`
	IsNightmared                *bool                                   `protobuf:"varint,82,opt,name=is_nightmared,json=isNightmared" json:"is_nightmared,omitempty"`
	IsRooted                    *bool                                   `protobuf:"varint,83,opt,name=is_rooted,json=isRooted" json:"is_rooted,omitempty"`
	IsSilenced                  *bool                                   `protobuf:"varint,84,opt,name=is_silenced,json=isSilenced" json:"is_silenced,omitempty"`
	IsSpeciallyDeniable         *bool                                   `protobuf:"varint,85,opt,name=is_specially_deniable,json=isSpeciallyDeniable" json:"is_specially_deniable,omitempty"`
	IsStunned                   *bool                                   `protobuf:"varint,86,opt,name=is_stunned,json=isStunned" json:"is_stunned,omitempty"`
	IsUnableToMiss              *bool                                   `protobuf:"varint,87,opt,name=is_unable_to_miss,json=isUnableToMiss" json:"is_unable_to_miss,omitempty"`
	HasScepter                  *bool                                   `protobuf:"varint,88,opt,name=has_scepter,json=hasScepter" json:"has_scepter,omitempty"`
	IsSpeciallyUndeniable       *bool                                   `protobuf:"varint,94,opt,name=is_specially_undeniable,json=isSpeciallyUndeniable" json:"is_specially_undeniable,omitempty"`
	Abilities                   []*CMsgBotWorldState_Ability            `protobuf:"bytes,90,rep,name=abilities" json:"abilities,omitempty"`
	Items                       []*CMsgBotWorldState_Ability            `protobuf:"bytes,91,rep,name=items" json:"items,omitempty"`
	Modifiers                   []*CMsgBotWorldState_Modifier           `protobuf:"bytes,92,rep,name=modifiers" json:"modifiers,omitempty"`
	IncomingTrackingProjectiles []*CMsgBotWorldState_TrackingProjectile `protobuf:"bytes,93,rep,name=incoming_tracking_projectiles,json=incomingTrackingProjectiles" json:"incoming_tracking_projectiles,omitempty"`
	ActionType                  *uint32                                 `protobuf:"varint,100,opt,name=action_type,json=actionType" json:"action_type,omitempty"`
	AbilityTargetHandle         *uint32                                 `protobuf:"varint,101,opt,name=ability_target_handle,json=abilityTargetHandle,def=4294967295" json:"ability_target_handle,omitempty"`
	AbilityTargetName           *string                                 `protobuf:"bytes,103,opt,name=ability_target_name,json=abilityTargetName" json:"ability_target_name,omitempty"`
	IsUsingAbility              *bool                                   `protobuf:"varint,102,opt,name=is_using_ability,json=isUsingAbility" json:"is_using_ability,omitempty"`
	PrimaryAttribute            *uint32                                 `protobuf:"varint,110,opt,name=primary_attribute,json=primaryAttribute" json:"primary_attribute,omitempty"`
	IsIllusion                  *bool                                   `protobuf:"varint,111,opt,name=is_illusion,json=isIllusion" json:"is_illusion,omitempty"`
	RespawnTime                 *float32                                `protobuf:"fixed32,112,opt,name=respawn_time,json=respawnTime" json:"respawn_time,omitempty"`
	BuybackCost                 *uint32                                 `protobuf:"varint,113,opt,name=buyback_cost,json=buybackCost" json:"buyback_cost,omitempty"`
	BuybackCooldown             *float32                                `protobuf:"fixed32,114,opt,name=buyback_cooldown,json=buybackCooldown" json:"buyback_cooldown,omitempty"`
	SpellAmplification          *float32                                `protobuf:"fixed32,115,opt,name=spell_amplification,json=spellAmplification" json:"spell_amplification,omitempty"`
	Armor                       *float32                                `protobuf:"fixed32,116,opt,name=armor" json:"armor,omitempty"`
	MagicResist                 *float32                                `protobuf:"fixed32,117,opt,name=magic_resist,json=magicResist" json:"magic_resist,omitempty"`
	Evasion                     *float32                                `protobuf:"fixed32,118,opt,name=evasion" json:"evasion,omitempty"`
	XpNeededToLevel             *uint32                                 `protobuf:"varint,120,opt,name=xp_needed_to_level,json=xpNeededToLevel" json:"xp_needed_to_level,omitempty"`
	AbilityPoints               *uint32                                 `protobuf:"varint,121,opt,name=ability_points,json=abilityPoints" json:"ability_points,omitempty"`
	ReliableGold                *int32                                  `protobuf:"varint,122,opt,name=reliable_gold,json=reliableGold,def=-1" json:"reliable_gold,omitempty"`
	UnreliableGold              *int32                                  `protobuf:"varint,123,opt,name=unreliable_gold,json=unreliableGold,def=-1" json:"unreliable_gold,omitempty"`
	LastHits                    *uint32                                 `protobuf:"varint,124,opt,name=last_hits,json=lastHits" json:"last_hits,omitempty"`
	Denies                      *uint32                                 `protobuf:"varint,125,opt,name=denies" json:"denies,omitempty"`
	NetWorth                    *uint32                                 `protobuf:"varint,126,opt,name=net_worth,json=netWorth" json:"net_worth,omitempty"`
	Strength                    *uint32                                 `protobuf:"varint,127,opt,name=strength" json:"strength,omitempty"`
	Agility                     *uint32                                 `protobuf:"varint,128,opt,name=agility" json:"agility,omitempty"`
	Intelligence                *uint32                                 `protobuf:"varint,129,opt,name=intelligence" json:"intelligence,omitempty"`
	RemainingLifespan           *float32                                `protobuf:"fixed32,130,opt,name=remaining_lifespan,json=remainingLifespan" json:"remaining_lifespan,omitempty"`
	FlyingCourier               *bool                                   `protobuf:"varint,140,opt,name=flying_courier,json=flyingCourier" json:"flying_courier,omitempty"`
	ShrineCooldown              *float32                                `protobuf:"fixed32,150,opt,name=shrine_cooldown,json=shrineCooldown" json:"shrine_cooldown,omitempty"`
	IsShrineHealing             *bool                                   `protobuf:"varint,151,opt,name=is_shrine_healing,json=isShrineHealing" json:"is_shrine_healing,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

// Default values for CMsgBotWorldState_Unit fields.
const (
	Default_CMsgBotWorldState_Unit_UnitType            = CMsgBotWorldState_INVALID
	Default_CMsgBotWorldState_Unit_AttackTargetHandle  = uint32(4294967295)
	Default_CMsgBotWorldState_Unit_AttacksPerSecond    = int32(-1)
	Default_CMsgBotWorldState_Unit_LastAttackTime      = float32(-1)
	Default_CMsgBotWorldState_Unit_ActiveAbilityHandle = uint32(4294967295)
	Default_CMsgBotWorldState_Unit_AbilityTargetHandle = uint32(4294967295)
	Default_CMsgBotWorldState_Unit_ReliableGold        = int32(-1)
	Default_CMsgBotWorldState_Unit_UnreliableGold      = int32(-1)
)

func (x *CMsgBotWorldState_Unit) Reset() {
	*x = CMsgBotWorldState_Unit{}
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBotWorldState_Unit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBotWorldState_Unit) ProtoMessage() {}

func (x *CMsgBotWorldState_Unit) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_bot_script_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBotWorldState_Unit.ProtoReflect.Descriptor instead.
func (*CMsgBotWorldState_Unit) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_bot_script_proto_rawDescGZIP(), []int{0, 16}
}

func (x *CMsgBotWorldState_Unit) GetHandle() uint32 {
	if x != nil && x.Handle != nil {
		return *x.Handle
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetUnitType() CMsgBotWorldState_UnitType {
	if x != nil && x.UnitType != nil {
		return *x.UnitType
	}
	return Default_CMsgBotWorldState_Unit_UnitType
}

func (x *CMsgBotWorldState_Unit) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgBotWorldState_Unit) GetTeamId() uint32 {
	if x != nil && x.TeamId != nil {
		return *x.TeamId
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetLocation() *CMsgBotWorldState_Vector {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *CMsgBotWorldState_Unit) GetIsAlive() bool {
	if x != nil && x.IsAlive != nil {
		return *x.IsAlive
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetPlayerId() int32 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetBoundingRadius() int32 {
	if x != nil && x.BoundingRadius != nil {
		return *x.BoundingRadius
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetFacing() int32 {
	if x != nil && x.Facing != nil {
		return *x.Facing
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetGroundHeight() uint32 {
	if x != nil && x.GroundHeight != nil {
		return *x.GroundHeight
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetVisionRangeDaytime() uint32 {
	if x != nil && x.VisionRangeDaytime != nil {
		return *x.VisionRangeDaytime
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetVisionRangeNighttime() uint32 {
	if x != nil && x.VisionRangeNighttime != nil {
		return *x.VisionRangeNighttime
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetHealth() int32 {
	if x != nil && x.Health != nil {
		return *x.Health
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetHealthMax() int32 {
	if x != nil && x.HealthMax != nil {
		return *x.HealthMax
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetHealthRegen() float32 {
	if x != nil && x.HealthRegen != nil {
		return *x.HealthRegen
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetMana() int32 {
	if x != nil && x.Mana != nil {
		return *x.Mana
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetManaMax() int32 {
	if x != nil && x.ManaMax != nil {
		return *x.ManaMax
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetManaRegen() float32 {
	if x != nil && x.ManaRegen != nil {
		return *x.ManaRegen
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetBaseMovementSpeed() int32 {
	if x != nil && x.BaseMovementSpeed != nil {
		return *x.BaseMovementSpeed
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetCurrentMovementSpeed() int32 {
	if x != nil && x.CurrentMovementSpeed != nil {
		return *x.CurrentMovementSpeed
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetAnimActivity() int32 {
	if x != nil && x.AnimActivity != nil {
		return *x.AnimActivity
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetAnimCycle() float32 {
	if x != nil && x.AnimCycle != nil {
		return *x.AnimCycle
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetBaseDamage() int32 {
	if x != nil && x.BaseDamage != nil {
		return *x.BaseDamage
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetBaseDamageVariance() int32 {
	if x != nil && x.BaseDamageVariance != nil {
		return *x.BaseDamageVariance
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetBonusDamage() int32 {
	if x != nil && x.BonusDamage != nil {
		return *x.BonusDamage
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetAttackDamage() int32 {
	if x != nil && x.AttackDamage != nil {
		return *x.AttackDamage
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetAttackRange() int32 {
	if x != nil && x.AttackRange != nil {
		return *x.AttackRange
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetAttackSpeed() float32 {
	if x != nil && x.AttackSpeed != nil {
		return *x.AttackSpeed
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetAttackAnimPoint() float32 {
	if x != nil && x.AttackAnimPoint != nil {
		return *x.AttackAnimPoint
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetAttackAcquisitionRange() int32 {
	if x != nil && x.AttackAcquisitionRange != nil {
		return *x.AttackAcquisitionRange
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetAttackProjectileSpeed() int32 {
	if x != nil && x.AttackProjectileSpeed != nil {
		return *x.AttackProjectileSpeed
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetAttackTargetHandle() uint32 {
	if x != nil && x.AttackTargetHandle != nil {
		return *x.AttackTargetHandle
	}
	return Default_CMsgBotWorldState_Unit_AttackTargetHandle
}

func (x *CMsgBotWorldState_Unit) GetAttackTargetName() string {
	if x != nil && x.AttackTargetName != nil {
		return *x.AttackTargetName
	}
	return ""
}

func (x *CMsgBotWorldState_Unit) GetAttacksPerSecond() int32 {
	if x != nil && x.AttacksPerSecond != nil {
		return *x.AttacksPerSecond
	}
	return Default_CMsgBotWorldState_Unit_AttacksPerSecond
}

func (x *CMsgBotWorldState_Unit) GetLastAttackTime() float32 {
	if x != nil && x.LastAttackTime != nil {
		return *x.LastAttackTime
	}
	return Default_CMsgBotWorldState_Unit_LastAttackTime
}

func (x *CMsgBotWorldState_Unit) GetBountyXp() uint32 {
	if x != nil && x.BountyXp != nil {
		return *x.BountyXp
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetBountyGoldMin() uint32 {
	if x != nil && x.BountyGoldMin != nil {
		return *x.BountyGoldMin
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetBountyGoldMax() uint32 {
	if x != nil && x.BountyGoldMax != nil {
		return *x.BountyGoldMax
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetIsChanneling() bool {
	if x != nil && x.IsChanneling != nil {
		return *x.IsChanneling
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetActiveAbilityHandle() uint32 {
	if x != nil && x.ActiveAbilityHandle != nil {
		return *x.ActiveAbilityHandle
	}
	return Default_CMsgBotWorldState_Unit_ActiveAbilityHandle
}

func (x *CMsgBotWorldState_Unit) GetIsAttackImmune() bool {
	if x != nil && x.IsAttackImmune != nil {
		return *x.IsAttackImmune
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetIsBlind() bool {
	if x != nil && x.IsBlind != nil {
		return *x.IsBlind
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetIsBlockDisabled() bool {
	if x != nil && x.IsBlockDisabled != nil {
		return *x.IsBlockDisabled
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetIsDisarmed() bool {
	if x != nil && x.IsDisarmed != nil {
		return *x.IsDisarmed
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetIsDominated() bool {
	if x != nil && x.IsDominated != nil {
		return *x.IsDominated
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetIsEvadeDisabled() bool {
	if x != nil && x.IsEvadeDisabled != nil {
		return *x.IsEvadeDisabled
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetIsHexed() bool {
	if x != nil && x.IsHexed != nil {
		return *x.IsHexed
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetIsInvisible() bool {
	if x != nil && x.IsInvisible != nil {
		return *x.IsInvisible
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetIsInvulnerable() bool {
	if x != nil && x.IsInvulnerable != nil {
		return *x.IsInvulnerable
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetIsMagicImmune() bool {
	if x != nil && x.IsMagicImmune != nil {
		return *x.IsMagicImmune
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetIsMuted() bool {
	if x != nil && x.IsMuted != nil {
		return *x.IsMuted
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetIsNightmared() bool {
	if x != nil && x.IsNightmared != nil {
		return *x.IsNightmared
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetIsRooted() bool {
	if x != nil && x.IsRooted != nil {
		return *x.IsRooted
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetIsSilenced() bool {
	if x != nil && x.IsSilenced != nil {
		return *x.IsSilenced
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetIsSpeciallyDeniable() bool {
	if x != nil && x.IsSpeciallyDeniable != nil {
		return *x.IsSpeciallyDeniable
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetIsStunned() bool {
	if x != nil && x.IsStunned != nil {
		return *x.IsStunned
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetIsUnableToMiss() bool {
	if x != nil && x.IsUnableToMiss != nil {
		return *x.IsUnableToMiss
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetHasScepter() bool {
	if x != nil && x.HasScepter != nil {
		return *x.HasScepter
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetIsSpeciallyUndeniable() bool {
	if x != nil && x.IsSpeciallyUndeniable != nil {
		return *x.IsSpeciallyUndeniable
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetAbilities() []*CMsgBotWorldState_Ability {
	if x != nil {
		return x.Abilities
	}
	return nil
}

func (x *CMsgBotWorldState_Unit) GetItems() []*CMsgBotWorldState_Ability {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CMsgBotWorldState_Unit) GetModifiers() []*CMsgBotWorldState_Modifier {
	if x != nil {
		return x.Modifiers
	}
	return nil
}

func (x *CMsgBotWorldState_Unit) GetIncomingTrackingProjectiles() []*CMsgBotWorldState_TrackingProjectile {
	if x != nil {
		return x.IncomingTrackingProjectiles
	}
	return nil
}

func (x *CMsgBotWorldState_Unit) GetActionType() uint32 {
	if x != nil && x.ActionType != nil {
		return *x.ActionType
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetAbilityTargetHandle() uint32 {
	if x != nil && x.AbilityTargetHandle != nil {
		return *x.AbilityTargetHandle
	}
	return Default_CMsgBotWorldState_Unit_AbilityTargetHandle
}

func (x *CMsgBotWorldState_Unit) GetAbilityTargetName() string {
	if x != nil && x.AbilityTargetName != nil {
		return *x.AbilityTargetName
	}
	return ""
}

func (x *CMsgBotWorldState_Unit) GetIsUsingAbility() bool {
	if x != nil && x.IsUsingAbility != nil {
		return *x.IsUsingAbility
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetPrimaryAttribute() uint32 {
	if x != nil && x.PrimaryAttribute != nil {
		return *x.PrimaryAttribute
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetIsIllusion() bool {
	if x != nil && x.IsIllusion != nil {
		return *x.IsIllusion
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetRespawnTime() float32 {
	if x != nil && x.RespawnTime != nil {
		return *x.RespawnTime
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetBuybackCost() uint32 {
	if x != nil && x.BuybackCost != nil {
		return *x.BuybackCost
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetBuybackCooldown() float32 {
	if x != nil && x.BuybackCooldown != nil {
		return *x.BuybackCooldown
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetSpellAmplification() float32 {
	if x != nil && x.SpellAmplification != nil {
		return *x.SpellAmplification
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetArmor() float32 {
	if x != nil && x.Armor != nil {
		return *x.Armor
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetMagicResist() float32 {
	if x != nil && x.MagicResist != nil {
		return *x.MagicResist
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetEvasion() float32 {
	if x != nil && x.Evasion != nil {
		return *x.Evasion
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetXpNeededToLevel() uint32 {
	if x != nil && x.XpNeededToLevel != nil {
		return *x.XpNeededToLevel
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetAbilityPoints() uint32 {
	if x != nil && x.AbilityPoints != nil {
		return *x.AbilityPoints
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetReliableGold() int32 {
	if x != nil && x.ReliableGold != nil {
		return *x.ReliableGold
	}
	return Default_CMsgBotWorldState_Unit_ReliableGold
}

func (x *CMsgBotWorldState_Unit) GetUnreliableGold() int32 {
	if x != nil && x.UnreliableGold != nil {
		return *x.UnreliableGold
	}
	return Default_CMsgBotWorldState_Unit_UnreliableGold
}

func (x *CMsgBotWorldState_Unit) GetLastHits() uint32 {
	if x != nil && x.LastHits != nil {
		return *x.LastHits
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetDenies() uint32 {
	if x != nil && x.Denies != nil {
		return *x.Denies
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetNetWorth() uint32 {
	if x != nil && x.NetWorth != nil {
		return *x.NetWorth
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetStrength() uint32 {
	if x != nil && x.Strength != nil {
		return *x.Strength
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetAgility() uint32 {
	if x != nil && x.Agility != nil {
		return *x.Agility
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetIntelligence() uint32 {
	if x != nil && x.Intelligence != nil {
		return *x.Intelligence
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetRemainingLifespan() float32 {
	if x != nil && x.RemainingLifespan != nil {
		return *x.RemainingLifespan
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetFlyingCourier() bool {
	if x != nil && x.FlyingCourier != nil {
		return *x.FlyingCourier
	}
	return false
}

func (x *CMsgBotWorldState_Unit) GetShrineCooldown() float32 {
	if x != nil && x.ShrineCooldown != nil {
		return *x.ShrineCooldown
	}
	return 0
}

func (x *CMsgBotWorldState_Unit) GetIsShrineHealing() bool {
	if x != nil && x.IsShrineHealing != nil {
		return *x.IsShrineHealing
	}
	return false
}

var File_dota_gcmessages_common_bot_script_proto protoreflect.FileDescriptor

const file_dota_gcmessages_common_bot_script_proto_rawDesc = "" +
	"\n" +
	"'dota_gcmessages_common_bot_script.proto\x12\bprotocol\x1a\x15valveextensions.proto\"\xdaM\n" +
	"\x11CMsgBotWorldState\x12\x17\n" +
	"\ateam_id\x18\x01 \x01(\rR\x06teamId\x12\x1b\n" +
	"\tgame_time\x18\x02 \x01(\x02R\bgameTime\x12\x1b\n" +
	"\tdota_time\x18\x03 \x01(\x02R\bdotaTime\x12\x1d\n" +
	"\n" +
	"game_state\x18\x04 \x01(\rR\tgameState\x12&\n" +
	"\x0fhero_pick_state\x18\x05 \x01(\rR\rheroPickState\x12\x1e\n" +
	"\vtime_of_day\x18\x06 \x01(\x02R\ttimeOfDay\x12%\n" +
	"\x0eglyph_cooldown\x18\a \x01(\x02R\rglyphCooldown\x120\n" +
	"\x14glyph_cooldown_enemy\x18\b \x01(\x02R\x12glyphCooldownEnemy\x12B\n" +
	"\aplayers\x18\n" +
	" \x03(\v2\".protocol.CMsgBotWorldState.PlayerB\x04\xc0\xe4\x1d\x01R\aplayers\x12<\n" +
	"\x05units\x18\v \x03(\v2 .protocol.CMsgBotWorldState.UnitB\x04\xc0\xe4\x1d\x01R\x05units\x12R\n" +
	"\rdropped_items\x18\f \x03(\v2'.protocol.CMsgBotWorldState.DroppedItemB\x04\xd0\xe4\x1dpR\fdroppedItems\x120\n" +
	"\x14dropped_items_deltas\x18p \x03(\x05R\x12droppedItemsDeltas\x12I\n" +
	"\n" +
	"rune_infos\x18\r \x03(\v2$.protocol.CMsgBotWorldState.RuneInfoB\x04\xd0\xe4\x1dqR\truneInfos\x12*\n" +
	"\x11rune_infos_deltas\x18q \x03(\x05R\x0fruneInfosDeltas\x12W\n" +
	"\x12incoming_teleports\x18\x0e \x03(\v2(.protocol.CMsgBotWorldState.TeleportInfoR\x11incomingTeleports\x12a\n" +
	"\x12linear_projectiles\x18\x0f \x03(\v2,.protocol.CMsgBotWorldState.LinearProjectileB\x04\xc0\xe4\x1d\x01R\x11linearProjectiles\x12R\n" +
	"\x0favoidance_zones\x18\x10 \x03(\v2).protocol.CMsgBotWorldState.AvoidanceZoneR\x0eavoidanceZones\x12E\n" +
	"\bcouriers\x18\x11 \x03(\v2#.protocol.CMsgBotWorldState.CourierB\x04\xc0\xe4\x1d\x01R\bcouriers\x12O\n" +
	"\x0eability_events\x18\x14 \x03(\v2(.protocol.CMsgBotWorldState.EventAbilityR\rabilityEvents\x12L\n" +
	"\rdamage_events\x18\x15 \x03(\v2'.protocol.CMsgBotWorldState.EventDamageR\fdamageEvents\x12b\n" +
	"\x15courier_killed_events\x18\x16 \x03(\v2..protocol.CMsgBotWorldState.EventCourierKilledR\x13courierKilledEvents\x12_\n" +
	"\x14roshan_killed_events\x18\x17 \x03(\v2-.protocol.CMsgBotWorldState.EventRoshanKilledR\x12roshanKilledEvents\x12F\n" +
	"\vtree_events\x18\x18 \x03(\v2%.protocol.CMsgBotWorldState.EventTreeR\n" +
	"treeEvents\x1a2\n" +
	"\x06Vector\x12\f\n" +
	"\x01x\x18\x01 \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x02R\x01y\x12\f\n" +
	"\x01z\x18\x03 \x01(\x02R\x01z\x1a\xf1\x02\n" +
	"\x06Player\x12!\n" +
	"\tplayer_id\x18\x01 \x01(\x05B\x04\xc8\xe4\x1d\x01R\bplayerId\x12\x17\n" +
	"\ahero_id\x18\x02 \x01(\x05R\x06heroId\x12\x19\n" +
	"\bis_alive\x18\x03 \x01(\bR\aisAlive\x12!\n" +
	"\frespawn_time\x18\x04 \x01(\x02R\vrespawnTime\x12\x14\n" +
	"\x05kills\x18\x05 \x01(\rR\x05kills\x12\x16\n" +
	"\x06deaths\x18\x06 \x01(\rR\x06deaths\x12\x18\n" +
	"\aassists\x18\a \x01(\rR\aassists\x12\x17\n" +
	"\ateam_id\x18\b \x01(\rR\x06teamId\x12:\n" +
	"\x13primary_unit_handle\x18\t \x01(\r:\n" +
	"4294967295R\x11primaryUnitHandle\x12\x10\n" +
	"\x03mmr\x18\n" +
	" \x01(\x05R\x03mmr\x12>\n" +
	"\blocation\x18\v \x01(\v2\".protocol.CMsgBotWorldState.VectorR\blocation\x1a\x9d\x05\n" +
	"\aAbility\x12\x1c\n" +
	"\x06handle\x18\x01 \x01(\rB\x04\xc8\xe4\x1d\x01R\x06handle\x12!\n" +
	"\n" +
	"ability_id\x18\x02 \x01(\x05:\x02-1R\tabilityId\x12\x12\n" +
	"\x04slot\x18\x03 \x01(\rR\x04slot\x12/\n" +
	"\rcaster_handle\x18\x05 \x01(\r:\n" +
	"4294967295R\fcasterHandle\x12\x14\n" +
	"\x05level\x18\x06 \x01(\rR\x05level\x12\x1d\n" +
	"\n" +
	"cast_range\x18\n" +
	" \x01(\rR\tcastRange\x12!\n" +
	"\fchannel_time\x18\v \x01(\x02R\vchannelTime\x120\n" +
	"\x12cooldown_remaining\x18\f \x01(\x02:\x010R\x11cooldownRemaining\x12!\n" +
	"\fis_activated\x18\x14 \x01(\bR\visActivated\x12\x1d\n" +
	"\n" +
	"is_toggled\x18\x15 \x01(\bR\tisToggled\x12-\n" +
	"\x13is_in_ability_phase\x18\x16 \x01(\bR\x10isInAbilityPhase\x12#\n" +
	"\ris_channeling\x18\x17 \x01(\bR\fisChanneling\x12\x1b\n" +
	"\tis_stolen\x18\x18 \x01(\bR\bisStolen\x12*\n" +
	"\x11is_fully_castable\x18\x19 \x01(\bR\x0fisFullyCastable\x12\x18\n" +
	"\acharges\x18\x1e \x01(\rR\acharges\x12+\n" +
	"\x11secondary_charges\x18\x1f \x01(\rR\x10secondaryCharges\x12,\n" +
	"\x12is_combined_locked\x18( \x01(\bR\x10isCombinedLocked\x12.\n" +
	"\x11power_treads_stat\x182 \x01(\x05:\x02-1R\x0fpowerTreadsStat\x1aj\n" +
	"\vDroppedItem\x12\x1b\n" +
	"\aitem_id\x18\x01 \x01(\x05:\x02-1R\x06itemId\x12>\n" +
	"\blocation\x18\x02 \x01(\v2\".protocol.CMsgBotWorldState.VectorR\blocation\x1a\x9e\x01\n" +
	"\bRuneInfo\x12\x12\n" +
	"\x04type\x18\x01 \x01(\x05R\x04type\x12>\n" +
	"\blocation\x18\x02 \x01(\v2\".protocol.CMsgBotWorldState.VectorR\blocation\x12\x16\n" +
	"\x06status\x18\x03 \x01(\rR\x06status\x12&\n" +
	"\x0ftime_since_seen\x18\x04 \x01(\x02R\rtimeSinceSeen\x1a\x92\x01\n" +
	"\fTeleportInfo\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x05R\bplayerId\x12>\n" +
	"\blocation\x18\x02 \x01(\v2\".protocol.CMsgBotWorldState.VectorR\blocation\x12%\n" +
	"\x0etime_remaining\x18\x03 \x01(\x02R\rtimeRemaining\x1a\x9a\x02\n" +
	"\bModifier\x12\x1c\n" +
	"\x06handle\x18\a \x01(\rB\x04\xc8\xe4\x1d\x01R\x06handle\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n" +
	"\vstack_count\x18\x02 \x01(\rR\n" +
	"stackCount\x121\n" +
	"\x0eability_handle\x18\x03 \x01(\r:\n" +
	"4294967295R\rabilityHandle\x12!\n" +
	"\n" +
	"ability_id\x18\x04 \x01(\x05:\x02-1R\tabilityId\x12-\n" +
	"\x12remaining_duration\x18\x05 \x01(\x02R\x11remainingDuration\x126\n" +
	"\x17auxiliary_units_handles\x18\x06 \x03(\rR\x15auxiliaryUnitsHandles\x1a\xd2\x03\n" +
	"\x10LinearProjectile\x12\x1c\n" +
	"\x06handle\x18\x01 \x01(\rB\x04\xc8\xe4\x1d\x01R\x06handle\x12/\n" +
	"\rcaster_handle\x18\x02 \x01(\r:\n" +
	"4294967295R\fcasterHandle\x12W\n" +
	"\x10caster_unit_type\x18\t \x01(\x0e2$.protocol.CMsgBotWorldState.UnitType:\aINVALIDR\x0ecasterUnitType\x12(\n" +
	"\x10caster_player_id\x18\x03 \x01(\x05R\x0ecasterPlayerId\x121\n" +
	"\x0eability_handle\x18\x04 \x01(\r:\n" +
	"4294967295R\rabilityHandle\x12!\n" +
	"\n" +
	"ability_id\x18\x05 \x01(\x05:\x02-1R\tabilityId\x12>\n" +
	"\blocation\x18\x06 \x01(\v2\".protocol.CMsgBotWorldState.VectorR\blocation\x12>\n" +
	"\bvelocity\x18\a \x01(\v2\".protocol.CMsgBotWorldState.VectorR\bvelocity\x12\x16\n" +
	"\x06radius\x18\b \x01(\rR\x06radius\x1a\xd8\x03\n" +
	"\x12TrackingProjectile\x12\x1c\n" +
	"\x06handle\x18\n" +
	" \x01(\rB\x04\xc8\xe4\x1d\x01R\x06handle\x12/\n" +
	"\rcaster_handle\x18\x01 \x01(\r:\n" +
	"4294967295R\fcasterHandle\x12W\n" +
	"\x10caster_unit_type\x18\t \x01(\x0e2$.protocol.CMsgBotWorldState.UnitType:\aINVALIDR\x0ecasterUnitType\x12(\n" +
	"\x10caster_player_id\x18\x02 \x01(\x05R\x0ecasterPlayerId\x121\n" +
	"\x0eability_handle\x18\x03 \x01(\r:\n" +
	"4294967295R\rabilityHandle\x12!\n" +
	"\n" +
	"ability_id\x18\x04 \x01(\x05:\x02-1R\tabilityId\x12>\n" +
	"\blocation\x18\x05 \x01(\v2\".protocol.CMsgBotWorldState.VectorR\blocation\x12\x1a\n" +
	"\bvelocity\x18\x06 \x01(\rR\bvelocity\x12!\n" +
	"\fis_dodgeable\x18\a \x01(\bR\visDodgeable\x12\x1b\n" +
	"\tis_attack\x18\b \x01(\bR\bisAttack\x1a\xf1\x02\n" +
	"\rAvoidanceZone\x12>\n" +
	"\blocation\x18\x01 \x01(\v2\".protocol.CMsgBotWorldState.VectorR\blocation\x12/\n" +
	"\rcaster_handle\x18\x02 \x01(\r:\n" +
	"4294967295R\fcasterHandle\x12W\n" +
	"\x10caster_unit_type\x18\a \x01(\x0e2$.protocol.CMsgBotWorldState.UnitType:\aINVALIDR\x0ecasterUnitType\x12(\n" +
	"\x10caster_player_id\x18\x03 \x01(\x05R\x0ecasterPlayerId\x121\n" +
	"\x0eability_handle\x18\x04 \x01(\r:\n" +
	"4294967295R\rabilityHandle\x12!\n" +
	"\n" +
	"ability_id\x18\x05 \x01(\x05:\x02-1R\tabilityId\x12\x16\n" +
	"\x06radius\x18\x06 \x01(\rR\x06radius\x1a\x98\x01\n" +
	"\aCourier\x12\x1c\n" +
	"\x06handle\x18\x01 \x01(\rB\x04\xc8\xe4\x1d\x01R\x06handle\x12R\n" +
	"\x05state\x18\x02 \x01(\x0e2(.protocol.CMsgBotWorldState.CourierState:\x12COURIER_STATE_INITR\x05state\x12\x1b\n" +
	"\tplayer_id\x18\x03 \x01(\x05R\bplayerId\x1a\xe5\x01\n" +
	"\fEventAbility\x12!\n" +
	"\n" +
	"ability_id\x18\x01 \x01(\x05:\x02-1R\tabilityId\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\x05R\bplayerId\x12+\n" +
	"\vunit_handle\x18\x03 \x01(\r:\n" +
	"4294967295R\n" +
	"unitHandle\x12>\n" +
	"\blocation\x18\x04 \x01(\v2\".protocol.CMsgBotWorldState.VectorR\blocation\x12(\n" +
	"\x10is_channel_start\x18\x05 \x01(\bR\x0eisChannelStart\x1a\x98\x02\n" +
	"\vEventDamage\x12\x16\n" +
	"\x06damage\x18\x01 \x01(\rR\x06damage\x12(\n" +
	"\x10victim_player_id\x18\x02 \x01(\x05R\x0evictimPlayerId\x128\n" +
	"\x12victim_unit_handle\x18\x03 \x01(\r:\n" +
	"4294967295R\x10victimUnitHandle\x12,\n" +
	"\x12attacker_player_id\x18\x04 \x01(\x05R\x10attackerPlayerId\x12<\n" +
	"\x14attacker_unit_handle\x18\x05 \x01(\r:\n" +
	"4294967295R\x12attackerUnitHandle\x12!\n" +
	"\n" +
	"ability_id\x18\x06 \x01(\x05:\x02-1R\tabilityId\x1a\xcd\x01\n" +
	"\x12EventCourierKilled\x12\x17\n" +
	"\ateam_id\x18\x01 \x01(\rR\x06teamId\x12:\n" +
	"\x13courier_unit_handle\x18\x02 \x01(\r:\n" +
	"4294967295R\x11courierUnitHandle\x12(\n" +
	"\x10killer_player_id\x18\x03 \x01(\x05R\x0ekillerPlayerId\x128\n" +
	"\x12killer_unit_handle\x18\x04 \x01(\r:\n" +
	"4294967295R\x10killerUnitHandle\x1aw\n" +
	"\x11EventRoshanKilled\x12(\n" +
	"\x10killer_player_id\x18\x01 \x01(\x05R\x0ekillerPlayerId\x128\n" +
	"\x12killer_unit_handle\x18\x02 \x01(\r:\n" +
	"4294967295R\x10killerUnitHandle\x1a\xba\x01\n" +
	"\tEventTree\x12\x17\n" +
	"\atree_id\x18\x01 \x01(\rR\x06treeId\x12\x1c\n" +
	"\tdestroyed\x18\x02 \x01(\bR\tdestroyed\x12\x1c\n" +
	"\trespawned\x18\x03 \x01(\bR\trespawned\x12>\n" +
	"\blocation\x18\x04 \x01(\v2\".protocol.CMsgBotWorldState.VectorR\blocation\x12\x18\n" +
	"\adelayed\x18\x05 \x01(\bR\adelayed\x1a\x80\x1d\n" +
	"\x04Unit\x12\x1c\n" +
	"\x06handle\x18\x01 \x01(\rB\x04\xc8\xe4\x1d\x01R\x06handle\x12J\n" +
	"\tunit_type\x18\x02 \x01(\x0e2$.protocol.CMsgBotWorldState.UnitType:\aINVALIDR\bunitType\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x17\n" +
	"\ateam_id\x18\x04 \x01(\rR\x06teamId\x12\x14\n" +
	"\x05level\x18\x05 \x01(\rR\x05level\x12>\n" +
	"\blocation\x18\x06 \x01(\v2\".protocol.CMsgBotWorldState.VectorR\blocation\x12\x19\n" +
	"\bis_alive\x18\a \x01(\bR\aisAlive\x12\x1b\n" +
	"\tplayer_id\x18\b \x01(\x05R\bplayerId\x12'\n" +
	"\x0fbounding_radius\x18\n" +
	" \x01(\x05R\x0eboundingRadius\x12\x16\n" +
	"\x06facing\x18\v \x01(\x05R\x06facing\x12#\n" +
	"\rground_height\x18\f \x01(\rR\fgroundHeight\x120\n" +
	"\x14vision_range_daytime\x18\x0f \x01(\rR\x12visionRangeDaytime\x124\n" +
	"\x16vision_range_nighttime\x18\x10 \x01(\rR\x14visionRangeNighttime\x12\x16\n" +
	"\x06health\x18\x14 \x01(\x05R\x06health\x12\x1d\n" +
	"\n" +
	"health_max\x18\x15 \x01(\x05R\thealthMax\x12!\n" +
	"\fhealth_regen\x18\x16 \x01(\x02R\vhealthRegen\x12\x12\n" +
	"\x04mana\x18\x19 \x01(\x05R\x04mana\x12\x19\n" +
	"\bmana_max\x18\x1a \x01(\x05R\amanaMax\x12\x1d\n" +
	"\n" +
	"mana_regen\x18\x1b \x01(\x02R\tmanaRegen\x12.\n" +
	"\x13base_movement_speed\x18\x1e \x01(\x05R\x11baseMovementSpeed\x124\n" +
	"\x16current_movement_speed\x18\x1f \x01(\x05R\x14currentMovementSpeed\x12#\n" +
	"\ranim_activity\x18# \x01(\x05R\fanimActivity\x12\x1d\n" +
	"\n" +
	"anim_cycle\x18$ \x01(\x02R\tanimCycle\x12\x1f\n" +
	"\vbase_damage\x18( \x01(\x05R\n" +
	"baseDamage\x120\n" +
	"\x14base_damage_variance\x18) \x01(\x05R\x12baseDamageVariance\x12!\n" +
	"\fbonus_damage\x18* \x01(\x05R\vbonusDamage\x12#\n" +
	"\rattack_damage\x18+ \x01(\x05R\fattackDamage\x12!\n" +
	"\fattack_range\x18, \x01(\x05R\vattackRange\x12!\n" +
	"\fattack_speed\x18- \x01(\x02R\vattackSpeed\x12*\n" +
	"\x11attack_anim_point\x18. \x01(\x02R\x0fattackAnimPoint\x128\n" +
	"\x18attack_acquisition_range\x18/ \x01(\x05R\x16attackAcquisitionRange\x126\n" +
	"\x17attack_projectile_speed\x180 \x01(\x05R\x15attackProjectileSpeed\x12<\n" +
	"\x14attack_target_handle\x181 \x01(\r:\n" +
	"4294967295R\x12attackTargetHandle\x12,\n" +
	"\x12attack_target_name\x184 \x01(\tR\x10attackTargetName\x120\n" +
	"\x12attacks_per_second\x182 \x01(\x05:\x02-1R\x10attacksPerSecond\x12,\n" +
	"\x10last_attack_time\x183 \x01(\x02:\x02-1R\x0elastAttackTime\x12\x1b\n" +
	"\tbounty_xp\x18< \x01(\rR\bbountyXp\x12&\n" +
	"\x0fbounty_gold_min\x18= \x01(\rR\rbountyGoldMin\x12&\n" +
	"\x0fbounty_gold_max\x18> \x01(\rR\rbountyGoldMax\x12#\n" +
	"\ris_channeling\x18A \x01(\bR\fisChanneling\x12>\n" +
	"\x15active_ability_handle\x18B \x01(\r:\n" +
	"4294967295R\x13activeAbilityHandle\x12(\n" +
	"\x10is_attack_immune\x18F \x01(\bR\x0eisAttackImmune\x12\x19\n" +
	"\bis_blind\x18G \x01(\bR\aisBlind\x12*\n" +
	"\x11is_block_disabled\x18H \x01(\bR\x0fisBlockDisabled\x12\x1f\n" +
	"\vis_disarmed\x18I \x01(\bR\n" +
	"isDisarmed\x12!\n" +
	"\fis_dominated\x18J \x01(\bR\visDominated\x12*\n" +
	"\x11is_evade_disabled\x18K \x01(\bR\x0fisEvadeDisabled\x12\x19\n" +
	"\bis_hexed\x18L \x01(\bR\aisHexed\x12!\n" +
	"\fis_invisible\x18M \x01(\bR\visInvisible\x12'\n" +
	"\x0fis_invulnerable\x18N \x01(\bR\x0eisInvulnerable\x12&\n" +
	"\x0fis_magic_immune\x18O \x01(\bR\risMagicImmune\x12\x19\n" +
	"\bis_muted\x18P \x01(\bR\aisMuted\x12#\n" +
	"\ris_nightmared\x18R \x01(\bR\fisNightmared\x12\x1b\n" +
	"\tis_rooted\x18S \x01(\bR\bisRooted\x12\x1f\n" +
	"\vis_silenced\x18T \x01(\bR\n" +
	"isSilenced\x122\n" +
	"\x15is_specially_deniable\x18U \x01(\bR\x13isSpeciallyDeniable\x12\x1d\n" +
	"\n" +
	"is_stunned\x18V \x01(\bR\tisStunned\x12)\n" +
	"\x11is_unable_to_miss\x18W \x01(\bR\x0eisUnableToMiss\x12\x1f\n" +
	"\vhas_scepter\x18X \x01(\bR\n" +
	"hasScepter\x126\n" +
	"\x17is_specially_undeniable\x18^ \x01(\bR\x15isSpeciallyUndeniable\x12G\n" +
	"\tabilities\x18Z \x03(\v2#.protocol.CMsgBotWorldState.AbilityB\x04\xc0\xe4\x1d\x01R\tabilities\x12?\n" +
	"\x05items\x18[ \x03(\v2#.protocol.CMsgBotWorldState.AbilityB\x04\xc0\xe4\x1d\x01R\x05items\x12H\n" +
	"\tmodifiers\x18\\ \x03(\v2$.protocol.CMsgBotWorldState.ModifierB\x04\xc0\xe4\x1d\x01R\tmodifiers\x12x\n" +
	"\x1dincoming_tracking_projectiles\x18] \x03(\v2..protocol.CMsgBotWorldState.TrackingProjectileB\x04\xc0\xe4\x1d\x01R\x1bincomingTrackingProjectiles\x12\x1f\n" +
	"\vaction_type\x18d \x01(\rR\n" +
	"actionType\x12>\n" +
	"\x15ability_target_handle\x18e \x01(\r:\n" +
	"4294967295R\x13abilityTargetHandle\x12.\n" +
	"\x13ability_target_name\x18g \x01(\tR\x11abilityTargetName\x12(\n" +
	"\x10is_using_ability\x18f \x01(\bR\x0eisUsingAbility\x12+\n" +
	"\x11primary_attribute\x18n \x01(\rR\x10primaryAttribute\x12\x1f\n" +
	"\vis_illusion\x18o \x01(\bR\n" +
	"isIllusion\x12!\n" +
	"\frespawn_time\x18p \x01(\x02R\vrespawnTime\x12!\n" +
	"\fbuyback_cost\x18q \x01(\rR\vbuybackCost\x12)\n" +
	"\x10buyback_cooldown\x18r \x01(\x02R\x0fbuybackCooldown\x12/\n" +
	"\x13spell_amplification\x18s \x01(\x02R\x12spellAmplification\x12\x14\n" +
	"\x05armor\x18t \x01(\x02R\x05armor\x12!\n" +
	"\fmagic_resist\x18u \x01(\x02R\vmagicResist\x12\x18\n" +
	"\aevasion\x18v \x01(\x02R\aevasion\x12+\n" +
	"\x12xp_needed_to_level\x18x \x01(\rR\x0fxpNeededToLevel\x12%\n" +
	"\x0eability_points\x18y \x01(\rR\rabilityPoints\x12'\n" +
	"\rreliable_gold\x18z \x01(\x05:\x02-1R\freliableGold\x12+\n" +
	"\x0funreliable_gold\x18{ \x01(\x05:\x02-1R\x0eunreliableGold\x12\x1b\n" +
	"\tlast_hits\x18| \x01(\rR\blastHits\x12\x16\n" +
	"\x06denies\x18} \x01(\rR\x06denies\x12\x1b\n" +
	"\tnet_worth\x18~ \x01(\rR\bnetWorth\x12\x1a\n" +
	"\bstrength\x18\x7f \x01(\rR\bstrength\x12\x19\n" +
	"\aagility\x18\x80\x01 \x01(\rR\aagility\x12#\n" +
	"\fintelligence\x18\x81\x01 \x01(\rR\fintelligence\x12.\n" +
	"\x12remaining_lifespan\x18\x82\x01 \x01(\x02R\x11remainingLifespan\x12&\n" +
	"\x0eflying_courier\x18\x8c\x01 \x01(\bR\rflyingCourier\x12(\n" +
	"\x0fshrine_cooldown\x18\x96\x01 \x01(\x02R\x0eshrineCooldown\x12+\n" +
	"\x11is_shrine_healing\x18\x97\x01 \x01(\bR\x0fisShrineHealing\"\xb3\x01\n" +
	"\bUnitType\x12\v\n" +
	"\aINVALID\x10\x00\x12\b\n" +
	"\x04HERO\x10\x01\x12\x0e\n" +
	"\n" +
	"CREEP_HERO\x10\x02\x12\x0e\n" +
	"\n" +
	"LANE_CREEP\x10\x03\x12\x10\n" +
	"\fJUNGLE_CREEP\x10\x04\x12\n" +
	"\n" +
	"\x06ROSHAN\x10\x05\x12\t\n" +
	"\x05TOWER\x10\x06\x12\f\n" +
	"\bBARRACKS\x10\a\x12\n" +
	"\n" +
	"\x06SHRINE\x10\b\x12\b\n" +
	"\x04FORT\x10\t\x12\f\n" +
	"\bBUILDING\x10\n" +
	"\x12\v\n" +
	"\aCOURIER\x10\v\x12\b\n" +
	"\x04WARD\x10\f\"\xa7\x02\n" +
	"\fCourierState\x12\x1f\n" +
	"\x12COURIER_STATE_INIT\x10\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\x12\x16\n" +
	"\x12COURIER_STATE_IDLE\x10\x00\x12\x19\n" +
	"\x15COURIER_STATE_AT_BASE\x10\x01\x12\x18\n" +
	"\x14COURIER_STATE_MOVING\x10\x02\x12\"\n" +
	"\x1eCOURIER_STATE_DELIVERING_ITEMS\x10\x03\x12#\n" +
	"\x1fCOURIER_STATE_RETURNING_TO_BASE\x10\x04\x12\x16\n" +
	"\x12COURIER_STATE_DEAD\x10\x05\x12&\n" +
	"\"COURIER_STATE_GOING_TO_SECRET_SHOP\x10\x06\x12 \n" +
	"\x1cCOURIER_STATE_AT_SECRET_SHOP\x10\a"

var (
	file_dota_gcmessages_common_bot_script_proto_rawDescOnce sync.Once
	file_dota_gcmessages_common_bot_script_proto_rawDescData []byte
)

func file_dota_gcmessages_common_bot_script_proto_rawDescGZIP() []byte {
	file_dota_gcmessages_common_bot_script_proto_rawDescOnce.Do(func() {
		file_dota_gcmessages_common_bot_script_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dota_gcmessages_common_bot_script_proto_rawDesc), len(file_dota_gcmessages_common_bot_script_proto_rawDesc)))
	})
	return file_dota_gcmessages_common_bot_script_proto_rawDescData
}

var file_dota_gcmessages_common_bot_script_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_dota_gcmessages_common_bot_script_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_dota_gcmessages_common_bot_script_proto_goTypes = []any{
	(CMsgBotWorldState_UnitType)(0),              // 0: protocol.CMsgBotWorldState.UnitType
	(CMsgBotWorldState_CourierState)(0),          // 1: protocol.CMsgBotWorldState.CourierState
	(*CMsgBotWorldState)(nil),                    // 2: protocol.CMsgBotWorldState
	(*CMsgBotWorldState_Vector)(nil),             // 3: protocol.CMsgBotWorldState.Vector
	(*CMsgBotWorldState_Player)(nil),             // 4: protocol.CMsgBotWorldState.Player
	(*CMsgBotWorldState_Ability)(nil),            // 5: protocol.CMsgBotWorldState.Ability
	(*CMsgBotWorldState_DroppedItem)(nil),        // 6: protocol.CMsgBotWorldState.DroppedItem
	(*CMsgBotWorldState_RuneInfo)(nil),           // 7: protocol.CMsgBotWorldState.RuneInfo
	(*CMsgBotWorldState_TeleportInfo)(nil),       // 8: protocol.CMsgBotWorldState.TeleportInfo
	(*CMsgBotWorldState_Modifier)(nil),           // 9: protocol.CMsgBotWorldState.Modifier
	(*CMsgBotWorldState_LinearProjectile)(nil),   // 10: protocol.CMsgBotWorldState.LinearProjectile
	(*CMsgBotWorldState_TrackingProjectile)(nil), // 11: protocol.CMsgBotWorldState.TrackingProjectile
	(*CMsgBotWorldState_AvoidanceZone)(nil),      // 12: protocol.CMsgBotWorldState.AvoidanceZone
	(*CMsgBotWorldState_Courier)(nil),            // 13: protocol.CMsgBotWorldState.Courier
	(*CMsgBotWorldState_EventAbility)(nil),       // 14: protocol.CMsgBotWorldState.EventAbility
	(*CMsgBotWorldState_EventDamage)(nil),        // 15: protocol.CMsgBotWorldState.EventDamage
	(*CMsgBotWorldState_EventCourierKilled)(nil), // 16: protocol.CMsgBotWorldState.EventCourierKilled
	(*CMsgBotWorldState_EventRoshanKilled)(nil),  // 17: protocol.CMsgBotWorldState.EventRoshanKilled
	(*CMsgBotWorldState_EventTree)(nil),          // 18: protocol.CMsgBotWorldState.EventTree
	(*CMsgBotWorldState_Unit)(nil),               // 19: protocol.CMsgBotWorldState.Unit
}
var file_dota_gcmessages_common_bot_script_proto_depIdxs = []int32{
	4,  // 0: protocol.CMsgBotWorldState.players:type_name -> protocol.CMsgBotWorldState.Player
	19, // 1: protocol.CMsgBotWorldState.units:type_name -> protocol.CMsgBotWorldState.Unit
	6,  // 2: protocol.CMsgBotWorldState.dropped_items:type_name -> protocol.CMsgBotWorldState.DroppedItem
	7,  // 3: protocol.CMsgBotWorldState.rune_infos:type_name -> protocol.CMsgBotWorldState.RuneInfo
	8,  // 4: protocol.CMsgBotWorldState.incoming_teleports:type_name -> protocol.CMsgBotWorldState.TeleportInfo
	10, // 5: protocol.CMsgBotWorldState.linear_projectiles:type_name -> protocol.CMsgBotWorldState.LinearProjectile
	12, // 6: protocol.CMsgBotWorldState.avoidance_zones:type_name -> protocol.CMsgBotWorldState.AvoidanceZone
	13, // 7: protocol.CMsgBotWorldState.couriers:type_name -> protocol.CMsgBotWorldState.Courier
	14, // 8: protocol.CMsgBotWorldState.ability_events:type_name -> protocol.CMsgBotWorldState.EventAbility
	15, // 9: protocol.CMsgBotWorldState.damage_events:type_name -> protocol.CMsgBotWorldState.EventDamage
	16, // 10: protocol.CMsgBotWorldState.courier_killed_events:type_name -> protocol.CMsgBotWorldState.EventCourierKilled
	17, // 11: protocol.CMsgBotWorldState.roshan_killed_events:type_name -> protocol.CMsgBotWorldState.EventRoshanKilled
	18, // 12: protocol.CMsgBotWorldState.tree_events:type_name -> protocol.CMsgBotWorldState.EventTree
	3,  // 13: protocol.CMsgBotWorldState.Player.location:type_name -> protocol.CMsgBotWorldState.Vector
	3,  // 14: protocol.CMsgBotWorldState.DroppedItem.location:type_name -> protocol.CMsgBotWorldState.Vector
	3,  // 15: protocol.CMsgBotWorldState.RuneInfo.location:type_name -> protocol.CMsgBotWorldState.Vector
	3,  // 16: protocol.CMsgBotWorldState.TeleportInfo.location:type_name -> protocol.CMsgBotWorldState.Vector
	0,  // 17: protocol.CMsgBotWorldState.LinearProjectile.caster_unit_type:type_name -> protocol.CMsgBotWorldState.UnitType
	3,  // 18: protocol.CMsgBotWorldState.LinearProjectile.location:type_name -> protocol.CMsgBotWorldState.Vector
	3,  // 19: protocol.CMsgBotWorldState.LinearProjectile.velocity:type_name -> protocol.CMsgBotWorldState.Vector
	0,  // 20: protocol.CMsgBotWorldState.TrackingProjectile.caster_unit_type:type_name -> protocol.CMsgBotWorldState.UnitType
	3,  // 21: protocol.CMsgBotWorldState.TrackingProjectile.location:type_name -> protocol.CMsgBotWorldState.Vector
	3,  // 22: protocol.CMsgBotWorldState.AvoidanceZone.location:type_name -> protocol.CMsgBotWorldState.Vector
	0,  // 23: protocol.CMsgBotWorldState.AvoidanceZone.caster_unit_type:type_name -> protocol.CMsgBotWorldState.UnitType
	1,  // 24: protocol.CMsgBotWorldState.Courier.state:type_name -> protocol.CMsgBotWorldState.CourierState
	3,  // 25: protocol.CMsgBotWorldState.EventAbility.location:type_name -> protocol.CMsgBotWorldState.Vector
	3,  // 26: protocol.CMsgBotWorldState.EventTree.location:type_name -> protocol.CMsgBotWorldState.Vector
	0,  // 27: protocol.CMsgBotWorldState.Unit.unit_type:type_name -> protocol.CMsgBotWorldState.UnitType
	3,  // 28: protocol.CMsgBotWorldState.Unit.location:type_name -> protocol.CMsgBotWorldState.Vector
	5,  // 29: protocol.CMsgBotWorldState.Unit.abilities:type_name -> protocol.CMsgBotWorldState.Ability
	5,  // 30: protocol.CMsgBotWorldState.Unit.items:type_name -> protocol.CMsgBotWorldState.Ability
	9,  // 31: protocol.CMsgBotWorldState.Unit.modifiers:type_name -> protocol.CMsgBotWorldState.Modifier
	11, // 32: protocol.CMsgBotWorldState.Unit.incoming_tracking_projectiles:type_name -> protocol.CMsgBotWorldState.TrackingProjectile
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_dota_gcmessages_common_bot_script_proto_init() }
func file_dota_gcmessages_common_bot_script_proto_init() {
	if File_dota_gcmessages_common_bot_script_proto != nil {
		return
	}
	file_valveextensions_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dota_gcmessages_common_bot_script_proto_rawDesc), len(file_dota_gcmessages_common_bot_script_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dota_gcmessages_common_bot_script_proto_goTypes,
		DependencyIndexes: file_dota_gcmessages_common_bot_script_proto_depIdxs,
		EnumInfos:         file_dota_gcmessages_common_bot_script_proto_enumTypes,
		MessageInfos:      file_dota_gcmessages_common_bot_script_proto_msgTypes,
	}.Build()
	File_dota_gcmessages_common_bot_script_proto = out.File
	file_dota_gcmessages_common_bot_script_proto_goTypes = nil
	file_dota_gcmessages_common_bot_script_proto_depIdxs = nil
}
