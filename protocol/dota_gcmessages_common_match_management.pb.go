// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: dota_gcmessages_common_match_management.proto

package protocol

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ELaneSelection int32

const (
	ELaneSelection_k_ELaneSelection_SAFELANE    ELaneSelection = 0
	ELaneSelection_k_ELaneSelection_OFFLANE     ELaneSelection = 1
	ELaneSelection_k_ELaneSelection_MIDLANE     ELaneSelection = 2
	ELaneSelection_k_ELaneSelection_SUPPORT     ELaneSelection = 3
	ELaneSelection_k_ELaneSelection_HARDSUPPORT ELaneSelection = 4
)

// Enum value maps for ELaneSelection.
var (
	ELaneSelection_name = map[int32]string{
		0: "k_ELaneSelection_SAFELANE",
		1: "k_ELaneSelection_OFFLANE",
		2: "k_ELaneSelection_MIDLANE",
		3: "k_ELaneSelection_SUPPORT",
		4: "k_ELaneSelection_HARDSUPPORT",
	}
	ELaneSelection_value = map[string]int32{
		"k_ELaneSelection_SAFELANE":    0,
		"k_ELaneSelection_OFFLANE":     1,
		"k_ELaneSelection_MIDLANE":     2,
		"k_ELaneSelection_SUPPORT":     3,
		"k_ELaneSelection_HARDSUPPORT": 4,
	}
)

func (x ELaneSelection) Enum() *ELaneSelection {
	p := new(ELaneSelection)
	*p = x
	return p
}

func (x ELaneSelection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ELaneSelection) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_common_match_management_proto_enumTypes[0].Descriptor()
}

func (ELaneSelection) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_common_match_management_proto_enumTypes[0]
}

func (x ELaneSelection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ELaneSelection) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ELaneSelection(num)
	return nil
}

// Deprecated: Use ELaneSelection.Descriptor instead.
func (ELaneSelection) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{0}
}

type ELaneSelectionFlags int32

const (
	ELaneSelectionFlags_k_ELaneSelectionFlags_SAFELANE    ELaneSelectionFlags = 1
	ELaneSelectionFlags_k_ELaneSelectionFlags_OFFLANE     ELaneSelectionFlags = 2
	ELaneSelectionFlags_k_ELaneSelectionFlags_MIDLANE     ELaneSelectionFlags = 4
	ELaneSelectionFlags_k_ELaneSelectionFlags_SUPPORT     ELaneSelectionFlags = 8
	ELaneSelectionFlags_k_ELaneSelectionFlags_HARDSUPPORT ELaneSelectionFlags = 16
	ELaneSelectionFlags_k_ELaneSelectionFlagGroup_None    ELaneSelectionFlags = 0
	ELaneSelectionFlags_k_ELaneSelectionFlagGroup_CORE    ELaneSelectionFlags = 7
	ELaneSelectionFlags_k_ELaneSelectionFlagGroup_SUPPORT ELaneSelectionFlags = 24
	ELaneSelectionFlags_k_ELaneSelectionFlagGroup_ALL     ELaneSelectionFlags = 31
)

// Enum value maps for ELaneSelectionFlags.
var (
	ELaneSelectionFlags_name = map[int32]string{
		1:  "k_ELaneSelectionFlags_SAFELANE",
		2:  "k_ELaneSelectionFlags_OFFLANE",
		4:  "k_ELaneSelectionFlags_MIDLANE",
		8:  "k_ELaneSelectionFlags_SUPPORT",
		16: "k_ELaneSelectionFlags_HARDSUPPORT",
		0:  "k_ELaneSelectionFlagGroup_None",
		7:  "k_ELaneSelectionFlagGroup_CORE",
		24: "k_ELaneSelectionFlagGroup_SUPPORT",
		31: "k_ELaneSelectionFlagGroup_ALL",
	}
	ELaneSelectionFlags_value = map[string]int32{
		"k_ELaneSelectionFlags_SAFELANE":    1,
		"k_ELaneSelectionFlags_OFFLANE":     2,
		"k_ELaneSelectionFlags_MIDLANE":     4,
		"k_ELaneSelectionFlags_SUPPORT":     8,
		"k_ELaneSelectionFlags_HARDSUPPORT": 16,
		"k_ELaneSelectionFlagGroup_None":    0,
		"k_ELaneSelectionFlagGroup_CORE":    7,
		"k_ELaneSelectionFlagGroup_SUPPORT": 24,
		"k_ELaneSelectionFlagGroup_ALL":     31,
	}
)

func (x ELaneSelectionFlags) Enum() *ELaneSelectionFlags {
	p := new(ELaneSelectionFlags)
	*p = x
	return p
}

func (x ELaneSelectionFlags) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ELaneSelectionFlags) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_common_match_management_proto_enumTypes[1].Descriptor()
}

func (ELaneSelectionFlags) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_common_match_management_proto_enumTypes[1]
}

func (x ELaneSelectionFlags) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ELaneSelectionFlags) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ELaneSelectionFlags(num)
	return nil
}

// Deprecated: Use ELaneSelectionFlags.Descriptor instead.
func (ELaneSelectionFlags) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{1}
}

type EPartyMatchmakingFlags int32

const (
	EPartyMatchmakingFlags_k_EPartyMatchmakingFlags_None            EPartyMatchmakingFlags = 0
	EPartyMatchmakingFlags_k_EPartyMatchmakingFlags_LargeRankSpread EPartyMatchmakingFlags = 1
)

// Enum value maps for EPartyMatchmakingFlags.
var (
	EPartyMatchmakingFlags_name = map[int32]string{
		0: "k_EPartyMatchmakingFlags_None",
		1: "k_EPartyMatchmakingFlags_LargeRankSpread",
	}
	EPartyMatchmakingFlags_value = map[string]int32{
		"k_EPartyMatchmakingFlags_None":            0,
		"k_EPartyMatchmakingFlags_LargeRankSpread": 1,
	}
)

func (x EPartyMatchmakingFlags) Enum() *EPartyMatchmakingFlags {
	p := new(EPartyMatchmakingFlags)
	*p = x
	return p
}

func (x EPartyMatchmakingFlags) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPartyMatchmakingFlags) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_common_match_management_proto_enumTypes[2].Descriptor()
}

func (EPartyMatchmakingFlags) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_common_match_management_proto_enumTypes[2]
}

func (x EPartyMatchmakingFlags) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EPartyMatchmakingFlags) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EPartyMatchmakingFlags(num)
	return nil
}

// Deprecated: Use EPartyMatchmakingFlags.Descriptor instead.
func (EPartyMatchmakingFlags) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{2}
}

type EHighPriorityMMState int32

const (
	EHighPriorityMMState_k_EHighPriorityMM_Unknown          EHighPriorityMMState = 0
	EHighPriorityMMState_k_EHighPriorityMM_MissingMMData    EHighPriorityMMState = 1
	EHighPriorityMMState_k_EHighPriorityMM_ResourceMissing  EHighPriorityMMState = 2
	EHighPriorityMMState_k_EHighPriorityMM_ManuallyDisabled EHighPriorityMMState = 3
	EHighPriorityMMState_k_EHighPriorityMM_Min_Enabled      EHighPriorityMMState = 64
	EHighPriorityMMState_k_EHighPriorityMM_AllRolesSelected EHighPriorityMMState = 65
	EHighPriorityMMState_k_EHighPriorityMM_UsingResource    EHighPriorityMMState = 66
	EHighPriorityMMState_k_EHighPriorityMM_FiveStack        EHighPriorityMMState = 67
	EHighPriorityMMState_k_EHighPriorityMM_HighDemand       EHighPriorityMMState = 68
)

// Enum value maps for EHighPriorityMMState.
var (
	EHighPriorityMMState_name = map[int32]string{
		0:  "k_EHighPriorityMM_Unknown",
		1:  "k_EHighPriorityMM_MissingMMData",
		2:  "k_EHighPriorityMM_ResourceMissing",
		3:  "k_EHighPriorityMM_ManuallyDisabled",
		64: "k_EHighPriorityMM_Min_Enabled",
		65: "k_EHighPriorityMM_AllRolesSelected",
		66: "k_EHighPriorityMM_UsingResource",
		67: "k_EHighPriorityMM_FiveStack",
		68: "k_EHighPriorityMM_HighDemand",
	}
	EHighPriorityMMState_value = map[string]int32{
		"k_EHighPriorityMM_Unknown":          0,
		"k_EHighPriorityMM_MissingMMData":    1,
		"k_EHighPriorityMM_ResourceMissing":  2,
		"k_EHighPriorityMM_ManuallyDisabled": 3,
		"k_EHighPriorityMM_Min_Enabled":      64,
		"k_EHighPriorityMM_AllRolesSelected": 65,
		"k_EHighPriorityMM_UsingResource":    66,
		"k_EHighPriorityMM_FiveStack":        67,
		"k_EHighPriorityMM_HighDemand":       68,
	}
)

func (x EHighPriorityMMState) Enum() *EHighPriorityMMState {
	p := new(EHighPriorityMMState)
	*p = x
	return p
}

func (x EHighPriorityMMState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EHighPriorityMMState) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_common_match_management_proto_enumTypes[3].Descriptor()
}

func (EHighPriorityMMState) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_common_match_management_proto_enumTypes[3]
}

func (x EHighPriorityMMState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EHighPriorityMMState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EHighPriorityMMState(num)
	return nil
}

// Deprecated: Use EHighPriorityMMState.Descriptor instead.
func (EHighPriorityMMState) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{3}
}

type EReadyCheckStatus int32

const (
	EReadyCheckStatus_k_EReadyCheckStatus_Unknown  EReadyCheckStatus = 0
	EReadyCheckStatus_k_EReadyCheckStatus_NotReady EReadyCheckStatus = 1
	EReadyCheckStatus_k_EReadyCheckStatus_Ready    EReadyCheckStatus = 2
)

// Enum value maps for EReadyCheckStatus.
var (
	EReadyCheckStatus_name = map[int32]string{
		0: "k_EReadyCheckStatus_Unknown",
		1: "k_EReadyCheckStatus_NotReady",
		2: "k_EReadyCheckStatus_Ready",
	}
	EReadyCheckStatus_value = map[string]int32{
		"k_EReadyCheckStatus_Unknown":  0,
		"k_EReadyCheckStatus_NotReady": 1,
		"k_EReadyCheckStatus_Ready":    2,
	}
)

func (x EReadyCheckStatus) Enum() *EReadyCheckStatus {
	p := new(EReadyCheckStatus)
	*p = x
	return p
}

func (x EReadyCheckStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EReadyCheckStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_common_match_management_proto_enumTypes[4].Descriptor()
}

func (EReadyCheckStatus) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_common_match_management_proto_enumTypes[4]
}

func (x EReadyCheckStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EReadyCheckStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EReadyCheckStatus(num)
	return nil
}

// Deprecated: Use EReadyCheckStatus.Descriptor instead.
func (EReadyCheckStatus) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{4}
}

type EReadyCheckRequestResult int32

const (
	EReadyCheckRequestResult_k_EReadyCheckRequestResult_Success           EReadyCheckRequestResult = 0
	EReadyCheckRequestResult_k_EReadyCheckRequestResult_AlreadyInProgress EReadyCheckRequestResult = 1
	EReadyCheckRequestResult_k_EReadyCheckRequestResult_NotInParty        EReadyCheckRequestResult = 2
	EReadyCheckRequestResult_k_EReadyCheckRequestResult_SendError         EReadyCheckRequestResult = 3
	EReadyCheckRequestResult_k_EReadyCheckRequestResult_UnknownError      EReadyCheckRequestResult = 4
)

// Enum value maps for EReadyCheckRequestResult.
var (
	EReadyCheckRequestResult_name = map[int32]string{
		0: "k_EReadyCheckRequestResult_Success",
		1: "k_EReadyCheckRequestResult_AlreadyInProgress",
		2: "k_EReadyCheckRequestResult_NotInParty",
		3: "k_EReadyCheckRequestResult_SendError",
		4: "k_EReadyCheckRequestResult_UnknownError",
	}
	EReadyCheckRequestResult_value = map[string]int32{
		"k_EReadyCheckRequestResult_Success":           0,
		"k_EReadyCheckRequestResult_AlreadyInProgress": 1,
		"k_EReadyCheckRequestResult_NotInParty":        2,
		"k_EReadyCheckRequestResult_SendError":         3,
		"k_EReadyCheckRequestResult_UnknownError":      4,
	}
)

func (x EReadyCheckRequestResult) Enum() *EReadyCheckRequestResult {
	p := new(EReadyCheckRequestResult)
	*p = x
	return p
}

func (x EReadyCheckRequestResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EReadyCheckRequestResult) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_common_match_management_proto_enumTypes[5].Descriptor()
}

func (EReadyCheckRequestResult) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_common_match_management_proto_enumTypes[5]
}

func (x EReadyCheckRequestResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EReadyCheckRequestResult) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EReadyCheckRequestResult(num)
	return nil
}

// Deprecated: Use EReadyCheckRequestResult.Descriptor instead.
func (EReadyCheckRequestResult) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{5}
}

type EMatchBehaviorScoreVariance int32

const (
	EMatchBehaviorScoreVariance_k_EMatchBehaviorScoreVariance_Invalid EMatchBehaviorScoreVariance = 0
	EMatchBehaviorScoreVariance_k_EMatchBehaviorScoreVariance_Low     EMatchBehaviorScoreVariance = 1
	EMatchBehaviorScoreVariance_k_EMatchBehaviorScoreVariance_Medium  EMatchBehaviorScoreVariance = 2
	EMatchBehaviorScoreVariance_k_EMatchBehaviorScoreVariance_High    EMatchBehaviorScoreVariance = 3
)

// Enum value maps for EMatchBehaviorScoreVariance.
var (
	EMatchBehaviorScoreVariance_name = map[int32]string{
		0: "k_EMatchBehaviorScoreVariance_Invalid",
		1: "k_EMatchBehaviorScoreVariance_Low",
		2: "k_EMatchBehaviorScoreVariance_Medium",
		3: "k_EMatchBehaviorScoreVariance_High",
	}
	EMatchBehaviorScoreVariance_value = map[string]int32{
		"k_EMatchBehaviorScoreVariance_Invalid": 0,
		"k_EMatchBehaviorScoreVariance_Low":     1,
		"k_EMatchBehaviorScoreVariance_Medium":  2,
		"k_EMatchBehaviorScoreVariance_High":    3,
	}
)

func (x EMatchBehaviorScoreVariance) Enum() *EMatchBehaviorScoreVariance {
	p := new(EMatchBehaviorScoreVariance)
	*p = x
	return p
}

func (x EMatchBehaviorScoreVariance) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EMatchBehaviorScoreVariance) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_common_match_management_proto_enumTypes[6].Descriptor()
}

func (EMatchBehaviorScoreVariance) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_common_match_management_proto_enumTypes[6]
}

func (x EMatchBehaviorScoreVariance) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EMatchBehaviorScoreVariance) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EMatchBehaviorScoreVariance(num)
	return nil
}

// Deprecated: Use EMatchBehaviorScoreVariance.Descriptor instead.
func (EMatchBehaviorScoreVariance) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{6}
}

type CSODOTAParty_State int32

const (
	CSODOTAParty_UI            CSODOTAParty_State = 0
	CSODOTAParty_FINDING_MATCH CSODOTAParty_State = 1
	CSODOTAParty_IN_MATCH      CSODOTAParty_State = 2
)

// Enum value maps for CSODOTAParty_State.
var (
	CSODOTAParty_State_name = map[int32]string{
		0: "UI",
		1: "FINDING_MATCH",
		2: "IN_MATCH",
	}
	CSODOTAParty_State_value = map[string]int32{
		"UI":            0,
		"FINDING_MATCH": 1,
		"IN_MATCH":      2,
	}
)

func (x CSODOTAParty_State) Enum() *CSODOTAParty_State {
	p := new(CSODOTAParty_State)
	*p = x
	return p
}

func (x CSODOTAParty_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CSODOTAParty_State) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_common_match_management_proto_enumTypes[7].Descriptor()
}

func (CSODOTAParty_State) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_common_match_management_proto_enumTypes[7]
}

func (x CSODOTAParty_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CSODOTAParty_State) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CSODOTAParty_State(num)
	return nil
}

// Deprecated: Use CSODOTAParty_State.Descriptor instead.
func (CSODOTAParty_State) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{1, 0}
}

type CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType int32

const (
	CMvpData_MvpDatum_MvpAccolade_kills                                                          CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 1
	CMvpData_MvpDatum_MvpAccolade_deaths                                                         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 2
	CMvpData_MvpDatum_MvpAccolade_assists                                                        CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 3
	CMvpData_MvpDatum_MvpAccolade_net_worth                                                      CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 5
	CMvpData_MvpDatum_MvpAccolade_item_value                                                     CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 6
	CMvpData_MvpDatum_MvpAccolade_support_gold_spent                                             CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 7
	CMvpData_MvpDatum_MvpAccolade_wards_placed                                                   CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 8
	CMvpData_MvpDatum_MvpAccolade_dewards                                                        CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 9
	CMvpData_MvpDatum_MvpAccolade_camps_stacked                                                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 10
	CMvpData_MvpDatum_MvpAccolade_last_hits                                                      CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 11
	CMvpData_MvpDatum_MvpAccolade_denies                                                         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 12
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Killing_Sprees                                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 13
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Godlike                                        CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 14
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Towers_Destroyed                               CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 15
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Invoker_SunstrikeKills                     CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 16
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Axe_Culls                                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 17
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Axe_BattleHungerKills                      CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 18
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_LowHealthKills                             CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 19
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Invoker_TornadoKills                       CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 20
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Sven_DoubleStuns                           CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 21
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Sven_WarcryAssists                         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 22
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Sven_CleaveDoubleKills                     CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 23
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Sven_TeleportInterrupts                    CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 24
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Faceless_MultiChrono                       CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 25
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Faceless_ChronoKills                       CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 26
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Ursa_MultiShocks                           CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 27
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_RoshanKills                                CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 28
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Lion_FingerKills                           CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 29
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Riki_SmokedHeroKills                       CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 32
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_HeroesRevealedWithDust                     CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 33
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_SkeletonKing_ReincarnationKills            CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 34
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Skywrath_FlareKills                        CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 35
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Leshrac_SplitEarthStuns                    CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 36
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Mirana_MaxStunArrows                       CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 37
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_PhantomAssassin_CoupdeGraceCrits           CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 38
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_PhantomAssassin_DaggerCrits                CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 39
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Meepo_Earthbinds                           CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 40
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Bloodseeker_RuptureKills                   CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 41
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Slark_LeashedEnemies                       CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 42
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Disruptor_FountainGlimpses                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 43
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Rubick_SpellsStolen                        CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 44
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Rubick_UltimatesStolen                     CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 45
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Doom_EnemiesDoomed                         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 46
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Omniknight_Purifications                   CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 47
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Omniknight_AlliesRepelled                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 48
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Omniknight_EnemiesRepelled                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 49
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Warlock_FiveHeroFatalBonds                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 50
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_CrystalMaiden_FrostbittenEnemies           CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 51
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_CrystalMaiden_CrystalNovas                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 52
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Kunkka_DoubleHeroTorrents                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 53
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Kunkka_TripleHeroGhostShips                CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 54
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_NagaSiren_EnemiesEnsnared                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 55
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_NagaSiren_TripleHeroRipTides               CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 56
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Lycan_KillsDuringShapeshift                CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 57
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Pudge_DismemberKills                       CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 58
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Pudge_EnemyHeroesHooked                    CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 59
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Pudge_HookKills                            CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 60
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Pudge_UnseenEnemyHeroesHooked              CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 61
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_DrowRanger_EnemiesSilenced                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 62
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_DrowRanger_MultiHeroSilences               CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 63
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_DrowRanger_SilencedKills                   CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 64
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_DrowRanger_FrostArrowKills                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 65
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_DragonKnight_KillsInDragonForm             CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 66
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_DragonKnight_BreatheFireKills              CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 67
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_DragonKnight_SplashKills                   CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 68
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_WitchDoctor_CaskStuns                      CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 69
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_WitchDoctor_MaledictKills                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 70
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_WitchDoctor_MultiHeroMaledicts             CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 71
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_WitchDoctor_DeathWardKills                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 72
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Disruptor_ThunderStrikeKills               CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 73
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Disruptor_HeroesGlimpsed                   CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 74
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_CrystalMaiden_FreezingFieldKills           CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 75
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Medusa_EnemiesPetrified                    CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 77
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Warlock_FatalBondsKills                    CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 78
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Warlock_GolemKills                         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 79
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Tusk_WalrusPunches                         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 80
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Tusk_SnowballStuns                         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 81
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Earthshaker_FissureStuns                   CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 82
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Earthshaker_3HeroEchoslams                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 83
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_SandKing_BurrowstrikeStuns                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 84
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_SandKing_EpicenterKills                    CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 85
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_SkywrathMage_AncientSealKills              CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 86
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_SkywrathMage_ConcussiveShotKills           CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 87
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Luna_LucentBeamKills                       CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 88
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Luna_EclipseKills                          CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 89
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_KeeperOfTheLight_IlluminateKills           CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 90
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_KeeperOfTheLight_ManaLeakStuns             CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 91
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_KeeperOfTheLight_TeammatesRecalled         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 92
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_LegionCommander_DuelsWon                   CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 93
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Beastmaster_RoarKills                      CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 94
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Beastmaster_RoarMultiKills                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 95
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Windrunner_FocusFireBuildings              CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 96
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Windrunner_PowershotKills                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 97
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_PhantomAssassin_DaggerLastHits             CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 98
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_PhantomAssassin_PhantomStrikeKills         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 99
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_DeathProphet_CryptSwarmKills               CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 100
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_DeathProphet_ExorcismBuildingKills         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 101
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_DeathProphet_ExorcismSpiritsSummoned       CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 102
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_DeathProphet_MultiHeroSilences             CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 103
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Abaddon_MistCoilKills                      CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 104
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Abaddon_MistCoilHealed                     CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 105
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Abaddon_AphoticShieldKills                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 106
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Lich_ChainFrostTripleKills                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 107
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Lich_ChainFrostMultiKills                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 108
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Lich_ChainFrostBounces                     CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 109
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Ursa_EnragedKills                          CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 110
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Ursa_EarthshockKills                       CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 111
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Lina_LagunaBladeKills                      CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 112
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Lina_DragonSlaveKills                      CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 113
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Lina_LightStrikeArrayStuns                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 114
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Barracks_Destroyed                             CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 115
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_TemplarAssassin_MeldKills                      CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 116
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_TemplarAssassin_HeroesSlowed                   CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 117
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Sniper_AssassinationKills                      CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 118
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Sniper_HeadshotStuns                           CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 119
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_EarthSpirit_SmashStuns                         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 120
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_EarthSpirit_GripSilences                       CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 121
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_ShadowShaman_ShackleKills                      CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 122
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_ShadowShaman_HexKills                          CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 123
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Centaur_EnemiesStomped                         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 124
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Centaur_DoubleEdgeKills                        CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 125
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Centaur_ReturnKills                            CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 126
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_EmberSpirit_EnemiesChained                     CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 127
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_EmberSpirit_SleightOfFistMultiKills            CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 128
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Puck_OrbKills                                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 129
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_VengefulSpirit_EnemiesStunned                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 130
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Lifestealer_RageKills                          CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 131
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Lifestealer_OpenWoundsKills                    CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 132
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Lifestealer_InfestKills                        CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 133
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_ElderTitan_SpiritKills                         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 134
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_ElderTitan_GoodStomps                          CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 135
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Clockwerk_RocketKills                          CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 136
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Clockwerk_BlindRocketKills                     CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 137
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_StormSpirit_BallKills                          CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 138
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_StormSpirit_DoubleRemnantKills                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 139
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_StormSpirit_VortexKills                        CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 140
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Tinker_DoubleMissileKills                      CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 141
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Tinker_LaserKills                              CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 142
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Techies_SuicideKills                           CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 143
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Techies_LandMineKills                          CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 144
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Techies_StatisTrapStuns                        CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 145
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Techies_RemoteMineKills                        CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 146
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_ShadowFiend_TripleRazeKills                    CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 147
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_ShadowFiend_RequiemMultiKills                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 148
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_ShadowFiend_QRazeKills                         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 149
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_ShadowFiend_WRazeKills                         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 150
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_ShadowFiend_ERazeKills                         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 151
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Oracle_FatesEdictKills                         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 152
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Oracle_FalsePromiseSaves                       CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 153
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEvent_Juggernaut_OmnislashKills                      CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 154
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_SkeletonKing_SkeletonHeroKills             CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 157
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_DarkWillow_CursedCrownTripleStuns          CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 158
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Dazzle_ShallowGraveSaves                   CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 159
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Dazzle_PoisonTouchKills                    CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 160
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_ThreeManMeks                               CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 161
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Viper_PoisonAttackKills                    CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 162
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Viper_CorrosiveSkinKills                   CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 163
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_ThreeHeroVeils                             CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 164
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Viper_KillsDuringViperStrike               CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 165
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_SolarCrestKills                            CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 166
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Tiny_TreeThrowKills                        CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 167
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Riki_BackstabKills                         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 168
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Phoenix_ThreeHeroSupernovaStuns            CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 169
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Terrorblade_MetamorphosisKills             CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 170
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Lion_GreatFingerKills                      CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 171
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Antimage_SpellsBlockedWithAghanims         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 172
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Antimage_ThreeManManaVoids                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 173
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_ArcWarden_TempestDoubleKills               CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 174
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_ArcWarden_SparkWraithKills                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 175
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Bane_BrainSapKills                         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 176
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Bane_FiendsGripKills                       CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 177
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Batrider_TripleHeroFlamebreaks             CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 178
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Batrider_DoubleHeroLassoes                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 179
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Brewmaster_KillsDuringPrimalSplit          CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 180
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Bristleback_KillsUnderFourQuillStacks      CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 181
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Bristleback_TripleHeroNasalGoo             CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 182
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Broodmother_SpiderlingHeroKills            CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 183
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Broodmother_KillsInsideWeb                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 184
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Centaur_ThreeHeroStampede                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 185
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_ChaosKnight_RealityRiftKills               CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 186
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Chen_KillsWithPenitence                    CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 187
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_CrystalMaiden_TwoHeroCrystalNovas          CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 188
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_CrystalMaiden_ThreeHeroFreezingFields      CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 189
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Dazzle_ShadowWaveKills                     CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 190
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_DeathProphet_SiphonKills                   CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 191
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_DeathProphet_ExorcismKillsDuringEuls       CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 192
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Disruptor_ThreeHeroKineticFieldStaticStorm CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 193
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Doom_InfernalBladeBurnKills                CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 194
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_DrowRanger_PrecisionAuraCreepTowerKills    CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 195
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_EmberSpirit_RemnantKills                   CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 196
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_EmberSpirit_SleightOfFistKills             CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 197
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Enigma_MidnightPulseBlackHoleCombos        CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 198
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Enigma_ThreeManBlackHoles                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 199
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_FacelessVoid_MultiHeroTimeDilation         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 200
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Gyrocopter_ThreeHeroFlakCannon             CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 201
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Gyrocopter_HomingMissileKills              CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 202
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Gyrocopter_RocketBarrageKills              CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 203
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Huskar_KillsDuringLifeBreak                CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 204
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Huskar_BurningSpearKills                   CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 205
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Invoker_MultiHeroIceWall                   CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 206
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Invoker_ThreeHeroEMP                       CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 207
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Invoker_ThreeHeroDeafeningBlast            CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 208
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Invoker_MultiHeroChaosMeteor               CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 209
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Jakiro_MultiHeroDualBreath                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 210
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Jakiro_IcePathMacropyreCombos              CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 211
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Leshrac_PulseNovaKills                     CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 212
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Leshrac_ThreeHeroLightningStorm            CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 213
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Lion_ThreeHeroFingerOfDeath                CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 214
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Meepo_PoofKills                            CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 215
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Meepo_MultiHeroEarthbinds                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 216
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_NightStalker_NighttimeKills                CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 217
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Morphling_KillsDuringReplicate             CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 218
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_OgreMagi_FireblastKills                    CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 219
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_OgreMagi_IgniteKills                       CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 220
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_DominatingKillStreaks                      CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 221
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_MegaKillStreaks                            CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 222
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Alchemist_AghanimsGiven                    CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 223
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_VeilsLeadingToKills                        CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 224
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_DustLeadingToKills                         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 225
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_WitchDoctor_MultiHeroCaskStuns             CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 226
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Weaver_ShukuchiKills                       CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 227
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Windrunner_ShackleFocusFireKills           CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 228
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_VengefulSpirit_VengeanceAuraIllusionKills  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 229
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Tusk_WalrusPunchKills                      CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 230
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Tinker_MultiHeroLasers                     CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 231
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_TemplarAssassin_MultiHeroPsiBlades         CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 232
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Sven_KillsDuringGodsStrength               CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 233
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Sniper_ThreeHeroShrapnels                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 234
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Slark_KillsDuringShadowDance               CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 235
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_ShadowShaman_MultiHeroEtherShocks          CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 236
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_ShadowShaman_SerpentWardShackleKills       CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 237
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Riki_ThreeHeroTricksOfTheTrade             CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 238
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Razor_EyeOfTheStormKills                   CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 239
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Pugna_LifeDrainKills                       CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 240
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_ObsidianDestroyer_SanitysEclipseKills      CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 241
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Oracle_MultiHeroFortunesEnd                CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 242
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Omniknight_PurificationKills               CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 243
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_NightStalker_EnemyMissesUnderCripplingFear CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 244
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Warlock_ThreeHeroFatalBonds                CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 245
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Riki_TricksOfTheTradeKills                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 246
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Earthshaker_AftershockHits10               CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 247
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Earthshaker_5HeroEchoslams                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 248
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Lina_LagunaBladeHeroKills                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 249
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Lina_LightStrikeHeroStuns                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 250
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Earthshaker_FissureMultiStuns              CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 251
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Earthshaker_TotemKills                     CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 252
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Pangolier_SwashbuckleKills                 CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 253
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Furion_EnemyHeroesTrapped                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 254
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Pangolier_HeartpiercerKills                CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 255
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Medusa_MultiHeroStoneGaze                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 256
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Medusa_SplitShotKills                      CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 257
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Mirana_MultiHeroStarstorm                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 258
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Mirana_KillsFromMoonlightShadow            CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 259
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Magnus_MultiHeroSkewers                    CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 260
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Magnus_MultiHeroReversePolarity            CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 261
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Magnus_HeroesSlowedWithShockwave           CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 262
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_NagaSiren_MultiHeroSong                    CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 263
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_NagaSiren_AlliesHealedBySong               CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 264
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_LoneDruid_MultiHeroRoar                    CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 265
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_LoneDruid_BattleCryKills                   CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 266
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_WinterWyvern_ThreeHeroCurses               CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 267
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Antimage_SpellsBlockedWithCounterspell     CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 268
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Mars_EnemiesKilledInArena                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 269
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Mars_MultiHeroGodsRebuke                   CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 270
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Mars_GodsRebukeKills                       CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 271
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Snapfire_LizardBlobsKills                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 272
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Snapfire_TwoHeroCookieStuns                CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 273
	CMvpData_MvpDatum_MvpAccolade_Custom_KillStreak                                              CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 274
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Muerta_DeadShotKills                       CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 275
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Muerta_PierceTheVeilKills                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 276
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Muerta_MultiHeroDeadShot                   CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 277
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Muerta_DeadShotsIntoTheCalling             CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 278
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Ringmaster_LongRangeDaggerHits             CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 279
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Ringmaster_MultiHeroWhips                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 280
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Ringmaster_MultiHeroMesmerizes             CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 281
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Kez_ParryCounterAttacks                    CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 282
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Kez_RavensVeilKills                        CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 283
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Kez_RaptorDanceHealing                     CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 284
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Kez_KillsDuringFalconRush                  CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 285
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Seasonal_PartyHatsStolen                   CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 286
	CMvpData_MvpDatum_MvpAccolade_kKillEaterEventType_Seasonal_TallestHat                        CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType = 287
)

// Enum value maps for CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType.
var (
	CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType_name = map[int32]string{
		1:   "kills",
		2:   "deaths",
		3:   "assists",
		5:   "net_worth",
		6:   "item_value",
		7:   "support_gold_spent",
		8:   "wards_placed",
		9:   "dewards",
		10:  "camps_stacked",
		11:  "last_hits",
		12:  "denies",
		13:  "kKillEaterEvent_Killing_Sprees",
		14:  "kKillEaterEvent_Godlike",
		15:  "kKillEaterEvent_Towers_Destroyed",
		16:  "kKillEaterEventType_Invoker_SunstrikeKills",
		17:  "kKillEaterEventType_Axe_Culls",
		18:  "kKillEaterEventType_Axe_BattleHungerKills",
		19:  "kKillEaterEventType_LowHealthKills",
		20:  "kKillEaterEventType_Invoker_TornadoKills",
		21:  "kKillEaterEventType_Sven_DoubleStuns",
		22:  "kKillEaterEventType_Sven_WarcryAssists",
		23:  "kKillEaterEventType_Sven_CleaveDoubleKills",
		24:  "kKillEaterEventType_Sven_TeleportInterrupts",
		25:  "kKillEaterEventType_Faceless_MultiChrono",
		26:  "kKillEaterEventType_Faceless_ChronoKills",
		27:  "kKillEaterEventType_Ursa_MultiShocks",
		28:  "kKillEaterEventType_RoshanKills",
		29:  "kKillEaterEventType_Lion_FingerKills",
		32:  "kKillEaterEventType_Riki_SmokedHeroKills",
		33:  "kKillEaterEventType_HeroesRevealedWithDust",
		34:  "kKillEaterEventType_SkeletonKing_ReincarnationKills",
		35:  "kKillEaterEventType_Skywrath_FlareKills",
		36:  "kKillEaterEventType_Leshrac_SplitEarthStuns",
		37:  "kKillEaterEventType_Mirana_MaxStunArrows",
		38:  "kKillEaterEventType_PhantomAssassin_CoupdeGraceCrits",
		39:  "kKillEaterEventType_PhantomAssassin_DaggerCrits",
		40:  "kKillEaterEventType_Meepo_Earthbinds",
		41:  "kKillEaterEventType_Bloodseeker_RuptureKills",
		42:  "kKillEaterEventType_Slark_LeashedEnemies",
		43:  "kKillEaterEventType_Disruptor_FountainGlimpses",
		44:  "kKillEaterEventType_Rubick_SpellsStolen",
		45:  "kKillEaterEventType_Rubick_UltimatesStolen",
		46:  "kKillEaterEventType_Doom_EnemiesDoomed",
		47:  "kKillEaterEventType_Omniknight_Purifications",
		48:  "kKillEaterEventType_Omniknight_AlliesRepelled",
		49:  "kKillEaterEventType_Omniknight_EnemiesRepelled",
		50:  "kKillEaterEventType_Warlock_FiveHeroFatalBonds",
		51:  "kKillEaterEventType_CrystalMaiden_FrostbittenEnemies",
		52:  "kKillEaterEventType_CrystalMaiden_CrystalNovas",
		53:  "kKillEaterEventType_Kunkka_DoubleHeroTorrents",
		54:  "kKillEaterEventType_Kunkka_TripleHeroGhostShips",
		55:  "kKillEaterEventType_NagaSiren_EnemiesEnsnared",
		56:  "kKillEaterEventType_NagaSiren_TripleHeroRipTides",
		57:  "kKillEaterEventType_Lycan_KillsDuringShapeshift",
		58:  "kKillEaterEventType_Pudge_DismemberKills",
		59:  "kKillEaterEventType_Pudge_EnemyHeroesHooked",
		60:  "kKillEaterEventType_Pudge_HookKills",
		61:  "kKillEaterEventType_Pudge_UnseenEnemyHeroesHooked",
		62:  "kKillEaterEventType_DrowRanger_EnemiesSilenced",
		63:  "kKillEaterEventType_DrowRanger_MultiHeroSilences",
		64:  "kKillEaterEventType_DrowRanger_SilencedKills",
		65:  "kKillEaterEventType_DrowRanger_FrostArrowKills",
		66:  "kKillEaterEventType_DragonKnight_KillsInDragonForm",
		67:  "kKillEaterEventType_DragonKnight_BreatheFireKills",
		68:  "kKillEaterEventType_DragonKnight_SplashKills",
		69:  "kKillEaterEventType_WitchDoctor_CaskStuns",
		70:  "kKillEaterEventType_WitchDoctor_MaledictKills",
		71:  "kKillEaterEventType_WitchDoctor_MultiHeroMaledicts",
		72:  "kKillEaterEventType_WitchDoctor_DeathWardKills",
		73:  "kKillEaterEventType_Disruptor_ThunderStrikeKills",
		74:  "kKillEaterEventType_Disruptor_HeroesGlimpsed",
		75:  "kKillEaterEventType_CrystalMaiden_FreezingFieldKills",
		77:  "kKillEaterEventType_Medusa_EnemiesPetrified",
		78:  "kKillEaterEventType_Warlock_FatalBondsKills",
		79:  "kKillEaterEventType_Warlock_GolemKills",
		80:  "kKillEaterEventType_Tusk_WalrusPunches",
		81:  "kKillEaterEventType_Tusk_SnowballStuns",
		82:  "kKillEaterEventType_Earthshaker_FissureStuns",
		83:  "kKillEaterEventType_Earthshaker_3HeroEchoslams",
		84:  "kKillEaterEventType_SandKing_BurrowstrikeStuns",
		85:  "kKillEaterEventType_SandKing_EpicenterKills",
		86:  "kKillEaterEventType_SkywrathMage_AncientSealKills",
		87:  "kKillEaterEventType_SkywrathMage_ConcussiveShotKills",
		88:  "kKillEaterEventType_Luna_LucentBeamKills",
		89:  "kKillEaterEventType_Luna_EclipseKills",
		90:  "kKillEaterEventType_KeeperOfTheLight_IlluminateKills",
		91:  "kKillEaterEventType_KeeperOfTheLight_ManaLeakStuns",
		92:  "kKillEaterEventType_KeeperOfTheLight_TeammatesRecalled",
		93:  "kKillEaterEventType_LegionCommander_DuelsWon",
		94:  "kKillEaterEventType_Beastmaster_RoarKills",
		95:  "kKillEaterEventType_Beastmaster_RoarMultiKills",
		96:  "kKillEaterEventType_Windrunner_FocusFireBuildings",
		97:  "kKillEaterEventType_Windrunner_PowershotKills",
		98:  "kKillEaterEventType_PhantomAssassin_DaggerLastHits",
		99:  "kKillEaterEventType_PhantomAssassin_PhantomStrikeKills",
		100: "kKillEaterEventType_DeathProphet_CryptSwarmKills",
		101: "kKillEaterEventType_DeathProphet_ExorcismBuildingKills",
		102: "kKillEaterEventType_DeathProphet_ExorcismSpiritsSummoned",
		103: "kKillEaterEventType_DeathProphet_MultiHeroSilences",
		104: "kKillEaterEventType_Abaddon_MistCoilKills",
		105: "kKillEaterEventType_Abaddon_MistCoilHealed",
		106: "kKillEaterEventType_Abaddon_AphoticShieldKills",
		107: "kKillEaterEventType_Lich_ChainFrostTripleKills",
		108: "kKillEaterEventType_Lich_ChainFrostMultiKills",
		109: "kKillEaterEventType_Lich_ChainFrostBounces",
		110: "kKillEaterEventType_Ursa_EnragedKills",
		111: "kKillEaterEventType_Ursa_EarthshockKills",
		112: "kKillEaterEventType_Lina_LagunaBladeKills",
		113: "kKillEaterEventType_Lina_DragonSlaveKills",
		114: "kKillEaterEventType_Lina_LightStrikeArrayStuns",
		115: "kKillEaterEvent_Barracks_Destroyed",
		116: "kKillEaterEvent_TemplarAssassin_MeldKills",
		117: "kKillEaterEvent_TemplarAssassin_HeroesSlowed",
		118: "kKillEaterEvent_Sniper_AssassinationKills",
		119: "kKillEaterEvent_Sniper_HeadshotStuns",
		120: "kKillEaterEvent_EarthSpirit_SmashStuns",
		121: "kKillEaterEvent_EarthSpirit_GripSilences",
		122: "kKillEaterEvent_ShadowShaman_ShackleKills",
		123: "kKillEaterEvent_ShadowShaman_HexKills",
		124: "kKillEaterEvent_Centaur_EnemiesStomped",
		125: "kKillEaterEvent_Centaur_DoubleEdgeKills",
		126: "kKillEaterEvent_Centaur_ReturnKills",
		127: "kKillEaterEvent_EmberSpirit_EnemiesChained",
		128: "kKillEaterEvent_EmberSpirit_SleightOfFistMultiKills",
		129: "kKillEaterEvent_Puck_OrbKills",
		130: "kKillEaterEvent_VengefulSpirit_EnemiesStunned",
		131: "kKillEaterEvent_Lifestealer_RageKills",
		132: "kKillEaterEvent_Lifestealer_OpenWoundsKills",
		133: "kKillEaterEvent_Lifestealer_InfestKills",
		134: "kKillEaterEvent_ElderTitan_SpiritKills",
		135: "kKillEaterEvent_ElderTitan_GoodStomps",
		136: "kKillEaterEvent_Clockwerk_RocketKills",
		137: "kKillEaterEvent_Clockwerk_BlindRocketKills",
		138: "kKillEaterEvent_StormSpirit_BallKills",
		139: "kKillEaterEvent_StormSpirit_DoubleRemnantKills",
		140: "kKillEaterEvent_StormSpirit_VortexKills",
		141: "kKillEaterEvent_Tinker_DoubleMissileKills",
		142: "kKillEaterEvent_Tinker_LaserKills",
		143: "kKillEaterEvent_Techies_SuicideKills",
		144: "kKillEaterEvent_Techies_LandMineKills",
		145: "kKillEaterEvent_Techies_StatisTrapStuns",
		146: "kKillEaterEvent_Techies_RemoteMineKills",
		147: "kKillEaterEvent_ShadowFiend_TripleRazeKills",
		148: "kKillEaterEvent_ShadowFiend_RequiemMultiKills",
		149: "kKillEaterEvent_ShadowFiend_QRazeKills",
		150: "kKillEaterEvent_ShadowFiend_WRazeKills",
		151: "kKillEaterEvent_ShadowFiend_ERazeKills",
		152: "kKillEaterEvent_Oracle_FatesEdictKills",
		153: "kKillEaterEvent_Oracle_FalsePromiseSaves",
		154: "kKillEaterEvent_Juggernaut_OmnislashKills",
		157: "kKillEaterEventType_SkeletonKing_SkeletonHeroKills",
		158: "kKillEaterEventType_DarkWillow_CursedCrownTripleStuns",
		159: "kKillEaterEventType_Dazzle_ShallowGraveSaves",
		160: "kKillEaterEventType_Dazzle_PoisonTouchKills",
		161: "kKillEaterEventType_ThreeManMeks",
		162: "kKillEaterEventType_Viper_PoisonAttackKills",
		163: "kKillEaterEventType_Viper_CorrosiveSkinKills",
		164: "kKillEaterEventType_ThreeHeroVeils",
		165: "kKillEaterEventType_Viper_KillsDuringViperStrike",
		166: "kKillEaterEventType_SolarCrestKills",
		167: "kKillEaterEventType_Tiny_TreeThrowKills",
		168: "kKillEaterEventType_Riki_BackstabKills",
		169: "kKillEaterEventType_Phoenix_ThreeHeroSupernovaStuns",
		170: "kKillEaterEventType_Terrorblade_MetamorphosisKills",
		171: "kKillEaterEventType_Lion_GreatFingerKills",
		172: "kKillEaterEventType_Antimage_SpellsBlockedWithAghanims",
		173: "kKillEaterEventType_Antimage_ThreeManManaVoids",
		174: "kKillEaterEventType_ArcWarden_TempestDoubleKills",
		175: "kKillEaterEventType_ArcWarden_SparkWraithKills",
		176: "kKillEaterEventType_Bane_BrainSapKills",
		177: "kKillEaterEventType_Bane_FiendsGripKills",
		178: "kKillEaterEventType_Batrider_TripleHeroFlamebreaks",
		179: "kKillEaterEventType_Batrider_DoubleHeroLassoes",
		180: "kKillEaterEventType_Brewmaster_KillsDuringPrimalSplit",
		181: "kKillEaterEventType_Bristleback_KillsUnderFourQuillStacks",
		182: "kKillEaterEventType_Bristleback_TripleHeroNasalGoo",
		183: "kKillEaterEventType_Broodmother_SpiderlingHeroKills",
		184: "kKillEaterEventType_Broodmother_KillsInsideWeb",
		185: "kKillEaterEventType_Centaur_ThreeHeroStampede",
		186: "kKillEaterEventType_ChaosKnight_RealityRiftKills",
		187: "kKillEaterEventType_Chen_KillsWithPenitence",
		188: "kKillEaterEventType_CrystalMaiden_TwoHeroCrystalNovas",
		189: "kKillEaterEventType_CrystalMaiden_ThreeHeroFreezingFields",
		190: "kKillEaterEventType_Dazzle_ShadowWaveKills",
		191: "kKillEaterEventType_DeathProphet_SiphonKills",
		192: "kKillEaterEventType_DeathProphet_ExorcismKillsDuringEuls",
		193: "kKillEaterEventType_Disruptor_ThreeHeroKineticFieldStaticStorm",
		194: "kKillEaterEventType_Doom_InfernalBladeBurnKills",
		195: "kKillEaterEventType_DrowRanger_PrecisionAuraCreepTowerKills",
		196: "kKillEaterEventType_EmberSpirit_RemnantKills",
		197: "kKillEaterEventType_EmberSpirit_SleightOfFistKills",
		198: "kKillEaterEventType_Enigma_MidnightPulseBlackHoleCombos",
		199: "kKillEaterEventType_Enigma_ThreeManBlackHoles",
		200: "kKillEaterEventType_FacelessVoid_MultiHeroTimeDilation",
		201: "kKillEaterEventType_Gyrocopter_ThreeHeroFlakCannon",
		202: "kKillEaterEventType_Gyrocopter_HomingMissileKills",
		203: "kKillEaterEventType_Gyrocopter_RocketBarrageKills",
		204: "kKillEaterEventType_Huskar_KillsDuringLifeBreak",
		205: "kKillEaterEventType_Huskar_BurningSpearKills",
		206: "kKillEaterEventType_Invoker_MultiHeroIceWall",
		207: "kKillEaterEventType_Invoker_ThreeHeroEMP",
		208: "kKillEaterEventType_Invoker_ThreeHeroDeafeningBlast",
		209: "kKillEaterEventType_Invoker_MultiHeroChaosMeteor",
		210: "kKillEaterEventType_Jakiro_MultiHeroDualBreath",
		211: "kKillEaterEventType_Jakiro_IcePathMacropyreCombos",
		212: "kKillEaterEventType_Leshrac_PulseNovaKills",
		213: "kKillEaterEventType_Leshrac_ThreeHeroLightningStorm",
		214: "kKillEaterEventType_Lion_ThreeHeroFingerOfDeath",
		215: "kKillEaterEventType_Meepo_PoofKills",
		216: "kKillEaterEventType_Meepo_MultiHeroEarthbinds",
		217: "kKillEaterEventType_NightStalker_NighttimeKills",
		218: "kKillEaterEventType_Morphling_KillsDuringReplicate",
		219: "kKillEaterEventType_OgreMagi_FireblastKills",
		220: "kKillEaterEventType_OgreMagi_IgniteKills",
		221: "kKillEaterEventType_DominatingKillStreaks",
		222: "kKillEaterEventType_MegaKillStreaks",
		223: "kKillEaterEventType_Alchemist_AghanimsGiven",
		224: "kKillEaterEventType_VeilsLeadingToKills",
		225: "kKillEaterEventType_DustLeadingToKills",
		226: "kKillEaterEventType_WitchDoctor_MultiHeroCaskStuns",
		227: "kKillEaterEventType_Weaver_ShukuchiKills",
		228: "kKillEaterEventType_Windrunner_ShackleFocusFireKills",
		229: "kKillEaterEventType_VengefulSpirit_VengeanceAuraIllusionKills",
		230: "kKillEaterEventType_Tusk_WalrusPunchKills",
		231: "kKillEaterEventType_Tinker_MultiHeroLasers",
		232: "kKillEaterEventType_TemplarAssassin_MultiHeroPsiBlades",
		233: "kKillEaterEventType_Sven_KillsDuringGodsStrength",
		234: "kKillEaterEventType_Sniper_ThreeHeroShrapnels",
		235: "kKillEaterEventType_Slark_KillsDuringShadowDance",
		236: "kKillEaterEventType_ShadowShaman_MultiHeroEtherShocks",
		237: "kKillEaterEventType_ShadowShaman_SerpentWardShackleKills",
		238: "kKillEaterEventType_Riki_ThreeHeroTricksOfTheTrade",
		239: "kKillEaterEventType_Razor_EyeOfTheStormKills",
		240: "kKillEaterEventType_Pugna_LifeDrainKills",
		241: "kKillEaterEventType_ObsidianDestroyer_SanitysEclipseKills",
		242: "kKillEaterEventType_Oracle_MultiHeroFortunesEnd",
		243: "kKillEaterEventType_Omniknight_PurificationKills",
		244: "kKillEaterEventType_NightStalker_EnemyMissesUnderCripplingFear",
		245: "kKillEaterEventType_Warlock_ThreeHeroFatalBonds",
		246: "kKillEaterEventType_Riki_TricksOfTheTradeKills",
		247: "kKillEaterEventType_Earthshaker_AftershockHits10",
		248: "kKillEaterEventType_Earthshaker_5HeroEchoslams",
		249: "kKillEaterEventType_Lina_LagunaBladeHeroKills",
		250: "kKillEaterEventType_Lina_LightStrikeHeroStuns",
		251: "kKillEaterEventType_Earthshaker_FissureMultiStuns",
		252: "kKillEaterEventType_Earthshaker_TotemKills",
		253: "kKillEaterEventType_Pangolier_SwashbuckleKills",
		254: "kKillEaterEventType_Furion_EnemyHeroesTrapped",
		255: "kKillEaterEventType_Pangolier_HeartpiercerKills",
		256: "kKillEaterEventType_Medusa_MultiHeroStoneGaze",
		257: "kKillEaterEventType_Medusa_SplitShotKills",
		258: "kKillEaterEventType_Mirana_MultiHeroStarstorm",
		259: "kKillEaterEventType_Mirana_KillsFromMoonlightShadow",
		260: "kKillEaterEventType_Magnus_MultiHeroSkewers",
		261: "kKillEaterEventType_Magnus_MultiHeroReversePolarity",
		262: "kKillEaterEventType_Magnus_HeroesSlowedWithShockwave",
		263: "kKillEaterEventType_NagaSiren_MultiHeroSong",
		264: "kKillEaterEventType_NagaSiren_AlliesHealedBySong",
		265: "kKillEaterEventType_LoneDruid_MultiHeroRoar",
		266: "kKillEaterEventType_LoneDruid_BattleCryKills",
		267: "kKillEaterEventType_WinterWyvern_ThreeHeroCurses",
		268: "kKillEaterEventType_Antimage_SpellsBlockedWithCounterspell",
		269: "kKillEaterEventType_Mars_EnemiesKilledInArena",
		270: "kKillEaterEventType_Mars_MultiHeroGodsRebuke",
		271: "kKillEaterEventType_Mars_GodsRebukeKills",
		272: "kKillEaterEventType_Snapfire_LizardBlobsKills",
		273: "kKillEaterEventType_Snapfire_TwoHeroCookieStuns",
		274: "Custom_KillStreak",
		275: "kKillEaterEventType_Muerta_DeadShotKills",
		276: "kKillEaterEventType_Muerta_PierceTheVeilKills",
		277: "kKillEaterEventType_Muerta_MultiHeroDeadShot",
		278: "kKillEaterEventType_Muerta_DeadShotsIntoTheCalling",
		279: "kKillEaterEventType_Ringmaster_LongRangeDaggerHits",
		280: "kKillEaterEventType_Ringmaster_MultiHeroWhips",
		281: "kKillEaterEventType_Ringmaster_MultiHeroMesmerizes",
		282: "kKillEaterEventType_Kez_ParryCounterAttacks",
		283: "kKillEaterEventType_Kez_RavensVeilKills",
		284: "kKillEaterEventType_Kez_RaptorDanceHealing",
		285: "kKillEaterEventType_Kez_KillsDuringFalconRush",
		286: "kKillEaterEventType_Seasonal_PartyHatsStolen",
		287: "kKillEaterEventType_Seasonal_TallestHat",
	}
	CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType_value = map[string]int32{
		"kills":                            1,
		"deaths":                           2,
		"assists":                          3,
		"net_worth":                        5,
		"item_value":                       6,
		"support_gold_spent":               7,
		"wards_placed":                     8,
		"dewards":                          9,
		"camps_stacked":                    10,
		"last_hits":                        11,
		"denies":                           12,
		"kKillEaterEvent_Killing_Sprees":   13,
		"kKillEaterEvent_Godlike":          14,
		"kKillEaterEvent_Towers_Destroyed": 15,
		"kKillEaterEventType_Invoker_SunstrikeKills":                     16,
		"kKillEaterEventType_Axe_Culls":                                  17,
		"kKillEaterEventType_Axe_BattleHungerKills":                      18,
		"kKillEaterEventType_LowHealthKills":                             19,
		"kKillEaterEventType_Invoker_TornadoKills":                       20,
		"kKillEaterEventType_Sven_DoubleStuns":                           21,
		"kKillEaterEventType_Sven_WarcryAssists":                         22,
		"kKillEaterEventType_Sven_CleaveDoubleKills":                     23,
		"kKillEaterEventType_Sven_TeleportInterrupts":                    24,
		"kKillEaterEventType_Faceless_MultiChrono":                       25,
		"kKillEaterEventType_Faceless_ChronoKills":                       26,
		"kKillEaterEventType_Ursa_MultiShocks":                           27,
		"kKillEaterEventType_RoshanKills":                                28,
		"kKillEaterEventType_Lion_FingerKills":                           29,
		"kKillEaterEventType_Riki_SmokedHeroKills":                       32,
		"kKillEaterEventType_HeroesRevealedWithDust":                     33,
		"kKillEaterEventType_SkeletonKing_ReincarnationKills":            34,
		"kKillEaterEventType_Skywrath_FlareKills":                        35,
		"kKillEaterEventType_Leshrac_SplitEarthStuns":                    36,
		"kKillEaterEventType_Mirana_MaxStunArrows":                       37,
		"kKillEaterEventType_PhantomAssassin_CoupdeGraceCrits":           38,
		"kKillEaterEventType_PhantomAssassin_DaggerCrits":                39,
		"kKillEaterEventType_Meepo_Earthbinds":                           40,
		"kKillEaterEventType_Bloodseeker_RuptureKills":                   41,
		"kKillEaterEventType_Slark_LeashedEnemies":                       42,
		"kKillEaterEventType_Disruptor_FountainGlimpses":                 43,
		"kKillEaterEventType_Rubick_SpellsStolen":                        44,
		"kKillEaterEventType_Rubick_UltimatesStolen":                     45,
		"kKillEaterEventType_Doom_EnemiesDoomed":                         46,
		"kKillEaterEventType_Omniknight_Purifications":                   47,
		"kKillEaterEventType_Omniknight_AlliesRepelled":                  48,
		"kKillEaterEventType_Omniknight_EnemiesRepelled":                 49,
		"kKillEaterEventType_Warlock_FiveHeroFatalBonds":                 50,
		"kKillEaterEventType_CrystalMaiden_FrostbittenEnemies":           51,
		"kKillEaterEventType_CrystalMaiden_CrystalNovas":                 52,
		"kKillEaterEventType_Kunkka_DoubleHeroTorrents":                  53,
		"kKillEaterEventType_Kunkka_TripleHeroGhostShips":                54,
		"kKillEaterEventType_NagaSiren_EnemiesEnsnared":                  55,
		"kKillEaterEventType_NagaSiren_TripleHeroRipTides":               56,
		"kKillEaterEventType_Lycan_KillsDuringShapeshift":                57,
		"kKillEaterEventType_Pudge_DismemberKills":                       58,
		"kKillEaterEventType_Pudge_EnemyHeroesHooked":                    59,
		"kKillEaterEventType_Pudge_HookKills":                            60,
		"kKillEaterEventType_Pudge_UnseenEnemyHeroesHooked":              61,
		"kKillEaterEventType_DrowRanger_EnemiesSilenced":                 62,
		"kKillEaterEventType_DrowRanger_MultiHeroSilences":               63,
		"kKillEaterEventType_DrowRanger_SilencedKills":                   64,
		"kKillEaterEventType_DrowRanger_FrostArrowKills":                 65,
		"kKillEaterEventType_DragonKnight_KillsInDragonForm":             66,
		"kKillEaterEventType_DragonKnight_BreatheFireKills":              67,
		"kKillEaterEventType_DragonKnight_SplashKills":                   68,
		"kKillEaterEventType_WitchDoctor_CaskStuns":                      69,
		"kKillEaterEventType_WitchDoctor_MaledictKills":                  70,
		"kKillEaterEventType_WitchDoctor_MultiHeroMaledicts":             71,
		"kKillEaterEventType_WitchDoctor_DeathWardKills":                 72,
		"kKillEaterEventType_Disruptor_ThunderStrikeKills":               73,
		"kKillEaterEventType_Disruptor_HeroesGlimpsed":                   74,
		"kKillEaterEventType_CrystalMaiden_FreezingFieldKills":           75,
		"kKillEaterEventType_Medusa_EnemiesPetrified":                    77,
		"kKillEaterEventType_Warlock_FatalBondsKills":                    78,
		"kKillEaterEventType_Warlock_GolemKills":                         79,
		"kKillEaterEventType_Tusk_WalrusPunches":                         80,
		"kKillEaterEventType_Tusk_SnowballStuns":                         81,
		"kKillEaterEventType_Earthshaker_FissureStuns":                   82,
		"kKillEaterEventType_Earthshaker_3HeroEchoslams":                 83,
		"kKillEaterEventType_SandKing_BurrowstrikeStuns":                 84,
		"kKillEaterEventType_SandKing_EpicenterKills":                    85,
		"kKillEaterEventType_SkywrathMage_AncientSealKills":              86,
		"kKillEaterEventType_SkywrathMage_ConcussiveShotKills":           87,
		"kKillEaterEventType_Luna_LucentBeamKills":                       88,
		"kKillEaterEventType_Luna_EclipseKills":                          89,
		"kKillEaterEventType_KeeperOfTheLight_IlluminateKills":           90,
		"kKillEaterEventType_KeeperOfTheLight_ManaLeakStuns":             91,
		"kKillEaterEventType_KeeperOfTheLight_TeammatesRecalled":         92,
		"kKillEaterEventType_LegionCommander_DuelsWon":                   93,
		"kKillEaterEventType_Beastmaster_RoarKills":                      94,
		"kKillEaterEventType_Beastmaster_RoarMultiKills":                 95,
		"kKillEaterEventType_Windrunner_FocusFireBuildings":              96,
		"kKillEaterEventType_Windrunner_PowershotKills":                  97,
		"kKillEaterEventType_PhantomAssassin_DaggerLastHits":             98,
		"kKillEaterEventType_PhantomAssassin_PhantomStrikeKills":         99,
		"kKillEaterEventType_DeathProphet_CryptSwarmKills":               100,
		"kKillEaterEventType_DeathProphet_ExorcismBuildingKills":         101,
		"kKillEaterEventType_DeathProphet_ExorcismSpiritsSummoned":       102,
		"kKillEaterEventType_DeathProphet_MultiHeroSilences":             103,
		"kKillEaterEventType_Abaddon_MistCoilKills":                      104,
		"kKillEaterEventType_Abaddon_MistCoilHealed":                     105,
		"kKillEaterEventType_Abaddon_AphoticShieldKills":                 106,
		"kKillEaterEventType_Lich_ChainFrostTripleKills":                 107,
		"kKillEaterEventType_Lich_ChainFrostMultiKills":                  108,
		"kKillEaterEventType_Lich_ChainFrostBounces":                     109,
		"kKillEaterEventType_Ursa_EnragedKills":                          110,
		"kKillEaterEventType_Ursa_EarthshockKills":                       111,
		"kKillEaterEventType_Lina_LagunaBladeKills":                      112,
		"kKillEaterEventType_Lina_DragonSlaveKills":                      113,
		"kKillEaterEventType_Lina_LightStrikeArrayStuns":                 114,
		"kKillEaterEvent_Barracks_Destroyed":                             115,
		"kKillEaterEvent_TemplarAssassin_MeldKills":                      116,
		"kKillEaterEvent_TemplarAssassin_HeroesSlowed":                   117,
		"kKillEaterEvent_Sniper_AssassinationKills":                      118,
		"kKillEaterEvent_Sniper_HeadshotStuns":                           119,
		"kKillEaterEvent_EarthSpirit_SmashStuns":                         120,
		"kKillEaterEvent_EarthSpirit_GripSilences":                       121,
		"kKillEaterEvent_ShadowShaman_ShackleKills":                      122,
		"kKillEaterEvent_ShadowShaman_HexKills":                          123,
		"kKillEaterEvent_Centaur_EnemiesStomped":                         124,
		"kKillEaterEvent_Centaur_DoubleEdgeKills":                        125,
		"kKillEaterEvent_Centaur_ReturnKills":                            126,
		"kKillEaterEvent_EmberSpirit_EnemiesChained":                     127,
		"kKillEaterEvent_EmberSpirit_SleightOfFistMultiKills":            128,
		"kKillEaterEvent_Puck_OrbKills":                                  129,
		"kKillEaterEvent_VengefulSpirit_EnemiesStunned":                  130,
		"kKillEaterEvent_Lifestealer_RageKills":                          131,
		"kKillEaterEvent_Lifestealer_OpenWoundsKills":                    132,
		"kKillEaterEvent_Lifestealer_InfestKills":                        133,
		"kKillEaterEvent_ElderTitan_SpiritKills":                         134,
		"kKillEaterEvent_ElderTitan_GoodStomps":                          135,
		"kKillEaterEvent_Clockwerk_RocketKills":                          136,
		"kKillEaterEvent_Clockwerk_BlindRocketKills":                     137,
		"kKillEaterEvent_StormSpirit_BallKills":                          138,
		"kKillEaterEvent_StormSpirit_DoubleRemnantKills":                 139,
		"kKillEaterEvent_StormSpirit_VortexKills":                        140,
		"kKillEaterEvent_Tinker_DoubleMissileKills":                      141,
		"kKillEaterEvent_Tinker_LaserKills":                              142,
		"kKillEaterEvent_Techies_SuicideKills":                           143,
		"kKillEaterEvent_Techies_LandMineKills":                          144,
		"kKillEaterEvent_Techies_StatisTrapStuns":                        145,
		"kKillEaterEvent_Techies_RemoteMineKills":                        146,
		"kKillEaterEvent_ShadowFiend_TripleRazeKills":                    147,
		"kKillEaterEvent_ShadowFiend_RequiemMultiKills":                  148,
		"kKillEaterEvent_ShadowFiend_QRazeKills":                         149,
		"kKillEaterEvent_ShadowFiend_WRazeKills":                         150,
		"kKillEaterEvent_ShadowFiend_ERazeKills":                         151,
		"kKillEaterEvent_Oracle_FatesEdictKills":                         152,
		"kKillEaterEvent_Oracle_FalsePromiseSaves":                       153,
		"kKillEaterEvent_Juggernaut_OmnislashKills":                      154,
		"kKillEaterEventType_SkeletonKing_SkeletonHeroKills":             157,
		"kKillEaterEventType_DarkWillow_CursedCrownTripleStuns":          158,
		"kKillEaterEventType_Dazzle_ShallowGraveSaves":                   159,
		"kKillEaterEventType_Dazzle_PoisonTouchKills":                    160,
		"kKillEaterEventType_ThreeManMeks":                               161,
		"kKillEaterEventType_Viper_PoisonAttackKills":                    162,
		"kKillEaterEventType_Viper_CorrosiveSkinKills":                   163,
		"kKillEaterEventType_ThreeHeroVeils":                             164,
		"kKillEaterEventType_Viper_KillsDuringViperStrike":               165,
		"kKillEaterEventType_SolarCrestKills":                            166,
		"kKillEaterEventType_Tiny_TreeThrowKills":                        167,
		"kKillEaterEventType_Riki_BackstabKills":                         168,
		"kKillEaterEventType_Phoenix_ThreeHeroSupernovaStuns":            169,
		"kKillEaterEventType_Terrorblade_MetamorphosisKills":             170,
		"kKillEaterEventType_Lion_GreatFingerKills":                      171,
		"kKillEaterEventType_Antimage_SpellsBlockedWithAghanims":         172,
		"kKillEaterEventType_Antimage_ThreeManManaVoids":                 173,
		"kKillEaterEventType_ArcWarden_TempestDoubleKills":               174,
		"kKillEaterEventType_ArcWarden_SparkWraithKills":                 175,
		"kKillEaterEventType_Bane_BrainSapKills":                         176,
		"kKillEaterEventType_Bane_FiendsGripKills":                       177,
		"kKillEaterEventType_Batrider_TripleHeroFlamebreaks":             178,
		"kKillEaterEventType_Batrider_DoubleHeroLassoes":                 179,
		"kKillEaterEventType_Brewmaster_KillsDuringPrimalSplit":          180,
		"kKillEaterEventType_Bristleback_KillsUnderFourQuillStacks":      181,
		"kKillEaterEventType_Bristleback_TripleHeroNasalGoo":             182,
		"kKillEaterEventType_Broodmother_SpiderlingHeroKills":            183,
		"kKillEaterEventType_Broodmother_KillsInsideWeb":                 184,
		"kKillEaterEventType_Centaur_ThreeHeroStampede":                  185,
		"kKillEaterEventType_ChaosKnight_RealityRiftKills":               186,
		"kKillEaterEventType_Chen_KillsWithPenitence":                    187,
		"kKillEaterEventType_CrystalMaiden_TwoHeroCrystalNovas":          188,
		"kKillEaterEventType_CrystalMaiden_ThreeHeroFreezingFields":      189,
		"kKillEaterEventType_Dazzle_ShadowWaveKills":                     190,
		"kKillEaterEventType_DeathProphet_SiphonKills":                   191,
		"kKillEaterEventType_DeathProphet_ExorcismKillsDuringEuls":       192,
		"kKillEaterEventType_Disruptor_ThreeHeroKineticFieldStaticStorm": 193,
		"kKillEaterEventType_Doom_InfernalBladeBurnKills":                194,
		"kKillEaterEventType_DrowRanger_PrecisionAuraCreepTowerKills":    195,
		"kKillEaterEventType_EmberSpirit_RemnantKills":                   196,
		"kKillEaterEventType_EmberSpirit_SleightOfFistKills":             197,
		"kKillEaterEventType_Enigma_MidnightPulseBlackHoleCombos":        198,
		"kKillEaterEventType_Enigma_ThreeManBlackHoles":                  199,
		"kKillEaterEventType_FacelessVoid_MultiHeroTimeDilation":         200,
		"kKillEaterEventType_Gyrocopter_ThreeHeroFlakCannon":             201,
		"kKillEaterEventType_Gyrocopter_HomingMissileKills":              202,
		"kKillEaterEventType_Gyrocopter_RocketBarrageKills":              203,
		"kKillEaterEventType_Huskar_KillsDuringLifeBreak":                204,
		"kKillEaterEventType_Huskar_BurningSpearKills":                   205,
		"kKillEaterEventType_Invoker_MultiHeroIceWall":                   206,
		"kKillEaterEventType_Invoker_ThreeHeroEMP":                       207,
		"kKillEaterEventType_Invoker_ThreeHeroDeafeningBlast":            208,
		"kKillEaterEventType_Invoker_MultiHeroChaosMeteor":               209,
		"kKillEaterEventType_Jakiro_MultiHeroDualBreath":                 210,
		"kKillEaterEventType_Jakiro_IcePathMacropyreCombos":              211,
		"kKillEaterEventType_Leshrac_PulseNovaKills":                     212,
		"kKillEaterEventType_Leshrac_ThreeHeroLightningStorm":            213,
		"kKillEaterEventType_Lion_ThreeHeroFingerOfDeath":                214,
		"kKillEaterEventType_Meepo_PoofKills":                            215,
		"kKillEaterEventType_Meepo_MultiHeroEarthbinds":                  216,
		"kKillEaterEventType_NightStalker_NighttimeKills":                217,
		"kKillEaterEventType_Morphling_KillsDuringReplicate":             218,
		"kKillEaterEventType_OgreMagi_FireblastKills":                    219,
		"kKillEaterEventType_OgreMagi_IgniteKills":                       220,
		"kKillEaterEventType_DominatingKillStreaks":                      221,
		"kKillEaterEventType_MegaKillStreaks":                            222,
		"kKillEaterEventType_Alchemist_AghanimsGiven":                    223,
		"kKillEaterEventType_VeilsLeadingToKills":                        224,
		"kKillEaterEventType_DustLeadingToKills":                         225,
		"kKillEaterEventType_WitchDoctor_MultiHeroCaskStuns":             226,
		"kKillEaterEventType_Weaver_ShukuchiKills":                       227,
		"kKillEaterEventType_Windrunner_ShackleFocusFireKills":           228,
		"kKillEaterEventType_VengefulSpirit_VengeanceAuraIllusionKills":  229,
		"kKillEaterEventType_Tusk_WalrusPunchKills":                      230,
		"kKillEaterEventType_Tinker_MultiHeroLasers":                     231,
		"kKillEaterEventType_TemplarAssassin_MultiHeroPsiBlades":         232,
		"kKillEaterEventType_Sven_KillsDuringGodsStrength":               233,
		"kKillEaterEventType_Sniper_ThreeHeroShrapnels":                  234,
		"kKillEaterEventType_Slark_KillsDuringShadowDance":               235,
		"kKillEaterEventType_ShadowShaman_MultiHeroEtherShocks":          236,
		"kKillEaterEventType_ShadowShaman_SerpentWardShackleKills":       237,
		"kKillEaterEventType_Riki_ThreeHeroTricksOfTheTrade":             238,
		"kKillEaterEventType_Razor_EyeOfTheStormKills":                   239,
		"kKillEaterEventType_Pugna_LifeDrainKills":                       240,
		"kKillEaterEventType_ObsidianDestroyer_SanitysEclipseKills":      241,
		"kKillEaterEventType_Oracle_MultiHeroFortunesEnd":                242,
		"kKillEaterEventType_Omniknight_PurificationKills":               243,
		"kKillEaterEventType_NightStalker_EnemyMissesUnderCripplingFear": 244,
		"kKillEaterEventType_Warlock_ThreeHeroFatalBonds":                245,
		"kKillEaterEventType_Riki_TricksOfTheTradeKills":                 246,
		"kKillEaterEventType_Earthshaker_AftershockHits10":               247,
		"kKillEaterEventType_Earthshaker_5HeroEchoslams":                 248,
		"kKillEaterEventType_Lina_LagunaBladeHeroKills":                  249,
		"kKillEaterEventType_Lina_LightStrikeHeroStuns":                  250,
		"kKillEaterEventType_Earthshaker_FissureMultiStuns":              251,
		"kKillEaterEventType_Earthshaker_TotemKills":                     252,
		"kKillEaterEventType_Pangolier_SwashbuckleKills":                 253,
		"kKillEaterEventType_Furion_EnemyHeroesTrapped":                  254,
		"kKillEaterEventType_Pangolier_HeartpiercerKills":                255,
		"kKillEaterEventType_Medusa_MultiHeroStoneGaze":                  256,
		"kKillEaterEventType_Medusa_SplitShotKills":                      257,
		"kKillEaterEventType_Mirana_MultiHeroStarstorm":                  258,
		"kKillEaterEventType_Mirana_KillsFromMoonlightShadow":            259,
		"kKillEaterEventType_Magnus_MultiHeroSkewers":                    260,
		"kKillEaterEventType_Magnus_MultiHeroReversePolarity":            261,
		"kKillEaterEventType_Magnus_HeroesSlowedWithShockwave":           262,
		"kKillEaterEventType_NagaSiren_MultiHeroSong":                    263,
		"kKillEaterEventType_NagaSiren_AlliesHealedBySong":               264,
		"kKillEaterEventType_LoneDruid_MultiHeroRoar":                    265,
		"kKillEaterEventType_LoneDruid_BattleCryKills":                   266,
		"kKillEaterEventType_WinterWyvern_ThreeHeroCurses":               267,
		"kKillEaterEventType_Antimage_SpellsBlockedWithCounterspell":     268,
		"kKillEaterEventType_Mars_EnemiesKilledInArena":                  269,
		"kKillEaterEventType_Mars_MultiHeroGodsRebuke":                   270,
		"kKillEaterEventType_Mars_GodsRebukeKills":                       271,
		"kKillEaterEventType_Snapfire_LizardBlobsKills":                  272,
		"kKillEaterEventType_Snapfire_TwoHeroCookieStuns":                273,
		"Custom_KillStreak":                                              274,
		"kKillEaterEventType_Muerta_DeadShotKills":                       275,
		"kKillEaterEventType_Muerta_PierceTheVeilKills":                  276,
		"kKillEaterEventType_Muerta_MultiHeroDeadShot":                   277,
		"kKillEaterEventType_Muerta_DeadShotsIntoTheCalling":             278,
		"kKillEaterEventType_Ringmaster_LongRangeDaggerHits":             279,
		"kKillEaterEventType_Ringmaster_MultiHeroWhips":                  280,
		"kKillEaterEventType_Ringmaster_MultiHeroMesmerizes":             281,
		"kKillEaterEventType_Kez_ParryCounterAttacks":                    282,
		"kKillEaterEventType_Kez_RavensVeilKills":                        283,
		"kKillEaterEventType_Kez_RaptorDanceHealing":                     284,
		"kKillEaterEventType_Kez_KillsDuringFalconRush":                  285,
		"kKillEaterEventType_Seasonal_PartyHatsStolen":                   286,
		"kKillEaterEventType_Seasonal_TallestHat":                        287,
	}
)

func (x CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType) Enum() *CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType {
	p := new(CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType)
	*p = x
	return p
}

func (x CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_common_match_management_proto_enumTypes[8].Descriptor()
}

func (CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_common_match_management_proto_enumTypes[8]
}

func (x CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType(num)
	return nil
}

// Deprecated: Use CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType.Descriptor instead.
func (CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{10, 0, 0, 0}
}

type CSODOTAPartyMember struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	IsCoach                 *bool                  `protobuf:"varint,2,opt,name=is_coach,json=isCoach" json:"is_coach,omitempty"`
	RegionPingCodes         []uint32               `protobuf:"varint,4,rep,packed,name=region_ping_codes,json=regionPingCodes" json:"region_ping_codes,omitempty"`
	RegionPingTimes         []uint32               `protobuf:"varint,5,rep,packed,name=region_ping_times,json=regionPingTimes" json:"region_ping_times,omitempty"`
	RegionPingFailedBitmask *uint32                `protobuf:"varint,6,opt,name=region_ping_failed_bitmask,json=regionPingFailedBitmask" json:"region_ping_failed_bitmask,omitempty"`
	IsPlusSubscriber        *bool                  `protobuf:"varint,10,opt,name=is_plus_subscriber,json=isPlusSubscriber" json:"is_plus_subscriber,omitempty"`
	TourneySkillLevel       *uint32                `protobuf:"varint,7,opt,name=tourney_skill_level,json=tourneySkillLevel" json:"tourney_skill_level,omitempty"`
	TourneyBuyin            *uint32                `protobuf:"varint,8,opt,name=tourney_buyin,json=tourneyBuyin" json:"tourney_buyin,omitempty"`
	TourneyPreventUntil     *uint32                `protobuf:"varint,9,opt,name=tourney_prevent_until,json=tourneyPreventUntil" json:"tourney_prevent_until,omitempty"`
	MmDataValid             *bool                  `protobuf:"varint,13,opt,name=mm_data_valid,json=mmDataValid" json:"mm_data_valid,omitempty"`
	LaneSelectionFlags      *uint32                `protobuf:"varint,11,opt,name=lane_selection_flags,json=laneSelectionFlags" json:"lane_selection_flags,omitempty"`
	HighPriorityDisabled    *bool                  `protobuf:"varint,14,opt,name=high_priority_disabled,json=highPriorityDisabled" json:"high_priority_disabled,omitempty"`
	HasHpResource           *bool                  `protobuf:"varint,15,opt,name=has_hp_resource,json=hasHpResource" json:"has_hp_resource,omitempty"`
	JoinedFromPartyfinder   *bool                  `protobuf:"varint,12,opt,name=joined_from_partyfinder,json=joinedFromPartyfinder" json:"joined_from_partyfinder,omitempty"`
	IsSteamChina            *bool                  `protobuf:"varint,16,opt,name=is_steam_china,json=isSteamChina" json:"is_steam_china,omitempty"`
	BannedHeroIds           []int32                `protobuf:"varint,17,rep,name=banned_hero_ids,json=bannedHeroIds" json:"banned_hero_ids,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CSODOTAPartyMember) Reset() {
	*x = CSODOTAPartyMember{}
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSODOTAPartyMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSODOTAPartyMember) ProtoMessage() {}

func (x *CSODOTAPartyMember) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSODOTAPartyMember.ProtoReflect.Descriptor instead.
func (*CSODOTAPartyMember) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{0}
}

func (x *CSODOTAPartyMember) GetIsCoach() bool {
	if x != nil && x.IsCoach != nil {
		return *x.IsCoach
	}
	return false
}

func (x *CSODOTAPartyMember) GetRegionPingCodes() []uint32 {
	if x != nil {
		return x.RegionPingCodes
	}
	return nil
}

func (x *CSODOTAPartyMember) GetRegionPingTimes() []uint32 {
	if x != nil {
		return x.RegionPingTimes
	}
	return nil
}

func (x *CSODOTAPartyMember) GetRegionPingFailedBitmask() uint32 {
	if x != nil && x.RegionPingFailedBitmask != nil {
		return *x.RegionPingFailedBitmask
	}
	return 0
}

func (x *CSODOTAPartyMember) GetIsPlusSubscriber() bool {
	if x != nil && x.IsPlusSubscriber != nil {
		return *x.IsPlusSubscriber
	}
	return false
}

func (x *CSODOTAPartyMember) GetTourneySkillLevel() uint32 {
	if x != nil && x.TourneySkillLevel != nil {
		return *x.TourneySkillLevel
	}
	return 0
}

func (x *CSODOTAPartyMember) GetTourneyBuyin() uint32 {
	if x != nil && x.TourneyBuyin != nil {
		return *x.TourneyBuyin
	}
	return 0
}

func (x *CSODOTAPartyMember) GetTourneyPreventUntil() uint32 {
	if x != nil && x.TourneyPreventUntil != nil {
		return *x.TourneyPreventUntil
	}
	return 0
}

func (x *CSODOTAPartyMember) GetMmDataValid() bool {
	if x != nil && x.MmDataValid != nil {
		return *x.MmDataValid
	}
	return false
}

func (x *CSODOTAPartyMember) GetLaneSelectionFlags() uint32 {
	if x != nil && x.LaneSelectionFlags != nil {
		return *x.LaneSelectionFlags
	}
	return 0
}

func (x *CSODOTAPartyMember) GetHighPriorityDisabled() bool {
	if x != nil && x.HighPriorityDisabled != nil {
		return *x.HighPriorityDisabled
	}
	return false
}

func (x *CSODOTAPartyMember) GetHasHpResource() bool {
	if x != nil && x.HasHpResource != nil {
		return *x.HasHpResource
	}
	return false
}

func (x *CSODOTAPartyMember) GetJoinedFromPartyfinder() bool {
	if x != nil && x.JoinedFromPartyfinder != nil {
		return *x.JoinedFromPartyfinder
	}
	return false
}

func (x *CSODOTAPartyMember) GetIsSteamChina() bool {
	if x != nil && x.IsSteamChina != nil {
		return *x.IsSteamChina
	}
	return false
}

func (x *CSODOTAPartyMember) GetBannedHeroIds() []int32 {
	if x != nil {
		return x.BannedHeroIds
	}
	return nil
}

type CSODOTAParty struct {
	state                           protoimpl.MessageState      `protogen:"open.v1"`
	PartyId                         *uint64                     `protobuf:"varint,1,opt,name=party_id,json=partyId" json:"party_id,omitempty"`
	LeaderId                        *uint64                     `protobuf:"fixed64,2,opt,name=leader_id,json=leaderId" json:"leader_id,omitempty"`
	MemberIds                       []uint64                    `protobuf:"fixed64,3,rep,name=member_ids,json=memberIds" json:"member_ids,omitempty"`
	GameModes                       *uint32                     `protobuf:"varint,4,opt,name=game_modes,json=gameModes" json:"game_modes,omitempty"`
	State                           *CSODOTAParty_State         `protobuf:"varint,6,opt,name=state,enum=protocol.CSODOTAParty_State,def=0" json:"state,omitempty"`
	EffectiveStartedMatchmakingTime *uint32                     `protobuf:"varint,7,opt,name=effective_started_matchmaking_time,json=effectiveStartedMatchmakingTime" json:"effective_started_matchmaking_time,omitempty"`
	RawStartedMatchmakingTime       *uint32                     `protobuf:"varint,32,opt,name=raw_started_matchmaking_time,json=rawStartedMatchmakingTime" json:"raw_started_matchmaking_time,omitempty"`
	AttemptStartTime                *uint32                     `protobuf:"varint,33,opt,name=attempt_start_time,json=attemptStartTime" json:"attempt_start_time,omitempty"`
	AttemptNum                      *uint32                     `protobuf:"varint,34,opt,name=attempt_num,json=attemptNum" json:"attempt_num,omitempty"`
	Matchgroups                     *uint32                     `protobuf:"varint,11,opt,name=matchgroups" json:"matchgroups,omitempty"`
	LowPriorityAccountId            *uint32                     `protobuf:"varint,19,opt,name=low_priority_account_id,json=lowPriorityAccountId" json:"low_priority_account_id,omitempty"`
	MatchType                       *MatchType                  `protobuf:"varint,21,opt,name=match_type,json=matchType,enum=protocol.MatchType,def=0" json:"match_type,omitempty"`
	TeamId                          *uint32                     `protobuf:"varint,23,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	TeamName                        *string                     `protobuf:"bytes,51,opt,name=team_name,json=teamName" json:"team_name,omitempty"`
	TeamUiLogo                      *uint64                     `protobuf:"varint,52,opt,name=team_ui_logo,json=teamUiLogo" json:"team_ui_logo,omitempty"`
	TeamBaseLogo                    *uint64                     `protobuf:"varint,53,opt,name=team_base_logo,json=teamBaseLogo" json:"team_base_logo,omitempty"`
	MatchDisabledUntilDate          *uint32                     `protobuf:"varint,24,opt,name=match_disabled_until_date,json=matchDisabledUntilDate" json:"match_disabled_until_date,omitempty"`
	MatchDisabledAccountId          *uint32                     `protobuf:"varint,25,opt,name=match_disabled_account_id,json=matchDisabledAccountId" json:"match_disabled_account_id,omitempty"`
	MatchmakingMaxRangeMinutes      *uint32                     `protobuf:"varint,26,opt,name=matchmaking_max_range_minutes,json=matchmakingMaxRangeMinutes" json:"matchmaking_max_range_minutes,omitempty"`
	Matchlanguages                  *uint32                     `protobuf:"varint,27,opt,name=matchlanguages" json:"matchlanguages,omitempty"`
	Members                         []*CSODOTAPartyMember       `protobuf:"bytes,29,rep,name=members" json:"members,omitempty"`
	LowPriorityGamesRemaining       *uint32                     `protobuf:"varint,35,opt,name=low_priority_games_remaining,json=lowPriorityGamesRemaining" json:"low_priority_games_remaining,omitempty"`
	OpenForJoinRequests             *bool                       `protobuf:"varint,40,opt,name=open_for_join_requests,json=openForJoinRequests" json:"open_for_join_requests,omitempty"`
	SentInvites                     []*CSODOTAPartyInvite       `protobuf:"bytes,41,rep,name=sent_invites,json=sentInvites" json:"sent_invites,omitempty"`
	RecvInvites                     []*CSODOTAPartyInvite       `protobuf:"bytes,42,rep,name=recv_invites,json=recvInvites" json:"recv_invites,omitempty"`
	AccountFlags                    *uint32                     `protobuf:"varint,43,opt,name=account_flags,json=accountFlags" json:"account_flags,omitempty"`
	RegionSelectFlags               *uint32                     `protobuf:"varint,44,opt,name=region_select_flags,json=regionSelectFlags" json:"region_select_flags,omitempty"`
	ExclusiveTournamentId           *uint32                     `protobuf:"varint,45,opt,name=exclusive_tournament_id,json=exclusiveTournamentId" json:"exclusive_tournament_id,omitempty"`
	TourneyDivisionId               *uint32                     `protobuf:"varint,47,opt,name=tourney_division_id,json=tourneyDivisionId" json:"tourney_division_id,omitempty"`
	TourneyScheduleTime             *uint32                     `protobuf:"varint,48,opt,name=tourney_schedule_time,json=tourneyScheduleTime" json:"tourney_schedule_time,omitempty"`
	TourneySkillLevel               *uint32                     `protobuf:"varint,49,opt,name=tourney_skill_level,json=tourneySkillLevel" json:"tourney_skill_level,omitempty"`
	TourneyBracketRound             *uint32                     `protobuf:"varint,50,opt,name=tourney_bracket_round,json=tourneyBracketRound" json:"tourney_bracket_round,omitempty"`
	TourneyQueueDeadlineTime        *uint32                     `protobuf:"varint,54,opt,name=tourney_queue_deadline_time,json=tourneyQueueDeadlineTime" json:"tourney_queue_deadline_time,omitempty"`
	TourneyQueueDeadlineState       *ETourneyQueueDeadlineState `protobuf:"varint,55,opt,name=tourney_queue_deadline_state,json=tourneyQueueDeadlineState,enum=protocol.ETourneyQueueDeadlineState,def=0" json:"tourney_queue_deadline_state,omitempty"`
	PartyBuilderSlotsToFill         *uint32                     `protobuf:"varint,56,opt,name=party_builder_slots_to_fill,json=partyBuilderSlotsToFill" json:"party_builder_slots_to_fill,omitempty"`
	PartyBuilderMatchGroups         *uint32                     `protobuf:"varint,57,opt,name=party_builder_match_groups,json=partyBuilderMatchGroups" json:"party_builder_match_groups,omitempty"`
	PartyBuilderStartTime           *uint32                     `protobuf:"varint,58,opt,name=party_builder_start_time,json=partyBuilderStartTime" json:"party_builder_start_time,omitempty"`
	SoloQueue                       *bool                       `protobuf:"varint,59,opt,name=solo_queue,json=soloQueue" json:"solo_queue,omitempty"`
	SteamClanAccountId              *uint32                     `protobuf:"varint,61,opt,name=steam_clan_account_id,json=steamClanAccountId" json:"steam_clan_account_id,omitempty"`
	ReadyCheck                      *CMsgReadyCheckStatus       `protobuf:"bytes,62,opt,name=ready_check,json=readyCheck" json:"ready_check,omitempty"`
	CustomGameDisabledUntilDate     *uint32                     `protobuf:"varint,63,opt,name=custom_game_disabled_until_date,json=customGameDisabledUntilDate" json:"custom_game_disabled_until_date,omitempty"`
	CustomGameDisabledAccountId     *uint32                     `protobuf:"varint,64,opt,name=custom_game_disabled_account_id,json=customGameDisabledAccountId" json:"custom_game_disabled_account_id,omitempty"`
	IsChallengeMatch                *bool                       `protobuf:"varint,65,opt,name=is_challenge_match,json=isChallengeMatch" json:"is_challenge_match,omitempty"`
	PartySearchBeaconActive         *bool                       `protobuf:"varint,66,opt,name=party_search_beacon_active,json=partySearchBeaconActive" json:"party_search_beacon_active,omitempty"`
	MatchmakingFlags                *uint32                     `protobuf:"varint,67,opt,name=matchmaking_flags,json=matchmakingFlags" json:"matchmaking_flags,omitempty"`
	HighPriorityState               *EHighPriorityMMState       `protobuf:"varint,68,opt,name=high_priority_state,json=highPriorityState,enum=protocol.EHighPriorityMMState,def=0" json:"high_priority_state,omitempty"`
	LaneSelectionsEnabled           *bool                       `protobuf:"varint,69,opt,name=lane_selections_enabled,json=laneSelectionsEnabled" json:"lane_selections_enabled,omitempty"`
	CustomGameDifficultyMask        *uint32                     `protobuf:"varint,70,opt,name=custom_game_difficulty_mask,json=customGameDifficultyMask" json:"custom_game_difficulty_mask,omitempty"`
	IsSteamChina                    *bool                       `protobuf:"varint,71,opt,name=is_steam_china,json=isSteamChina" json:"is_steam_china,omitempty"`
	BotDifficultyMask               *uint32                     `protobuf:"varint,72,opt,name=bot_difficulty_mask,json=botDifficultyMask" json:"bot_difficulty_mask,omitempty"`
	BotScriptIndexMask              *uint32                     `protobuf:"varint,73,opt,name=bot_script_index_mask,json=botScriptIndexMask" json:"bot_script_index_mask,omitempty"`
	RestrictedFromRanked            *bool                       `protobuf:"varint,74,opt,name=restricted_from_ranked,json=restrictedFromRanked" json:"restricted_from_ranked,omitempty"`
	RestrictedFromRankedAccountId   *uint32                     `protobuf:"varint,75,opt,name=restricted_from_ranked_account_id,json=restrictedFromRankedAccountId" json:"restricted_from_ranked_account_id,omitempty"`
	RankSpreadLikertScale           *uint32                     `protobuf:"varint,76,opt,name=rank_spread_likert_scale,json=rankSpreadLikertScale" json:"rank_spread_likert_scale,omitempty"`
	BehaviorScoreLikertScale        *uint32                     `protobuf:"varint,77,opt,name=behavior_score_likert_scale,json=behaviorScoreLikertScale" json:"behavior_score_likert_scale,omitempty"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

// Default values for CSODOTAParty fields.
const (
	Default_CSODOTAParty_State                     = CSODOTAParty_UI
	Default_CSODOTAParty_MatchType                 = MatchType_MATCH_TYPE_CASUAL
	Default_CSODOTAParty_TourneyQueueDeadlineState = ETourneyQueueDeadlineState_k_ETourneyQueueDeadlineState_Normal
	Default_CSODOTAParty_HighPriorityState         = EHighPriorityMMState_k_EHighPriorityMM_Unknown
)

func (x *CSODOTAParty) Reset() {
	*x = CSODOTAParty{}
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSODOTAParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSODOTAParty) ProtoMessage() {}

func (x *CSODOTAParty) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSODOTAParty.ProtoReflect.Descriptor instead.
func (*CSODOTAParty) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{1}
}

func (x *CSODOTAParty) GetPartyId() uint64 {
	if x != nil && x.PartyId != nil {
		return *x.PartyId
	}
	return 0
}

func (x *CSODOTAParty) GetLeaderId() uint64 {
	if x != nil && x.LeaderId != nil {
		return *x.LeaderId
	}
	return 0
}

func (x *CSODOTAParty) GetMemberIds() []uint64 {
	if x != nil {
		return x.MemberIds
	}
	return nil
}

func (x *CSODOTAParty) GetGameModes() uint32 {
	if x != nil && x.GameModes != nil {
		return *x.GameModes
	}
	return 0
}

func (x *CSODOTAParty) GetState() CSODOTAParty_State {
	if x != nil && x.State != nil {
		return *x.State
	}
	return Default_CSODOTAParty_State
}

func (x *CSODOTAParty) GetEffectiveStartedMatchmakingTime() uint32 {
	if x != nil && x.EffectiveStartedMatchmakingTime != nil {
		return *x.EffectiveStartedMatchmakingTime
	}
	return 0
}

func (x *CSODOTAParty) GetRawStartedMatchmakingTime() uint32 {
	if x != nil && x.RawStartedMatchmakingTime != nil {
		return *x.RawStartedMatchmakingTime
	}
	return 0
}

func (x *CSODOTAParty) GetAttemptStartTime() uint32 {
	if x != nil && x.AttemptStartTime != nil {
		return *x.AttemptStartTime
	}
	return 0
}

func (x *CSODOTAParty) GetAttemptNum() uint32 {
	if x != nil && x.AttemptNum != nil {
		return *x.AttemptNum
	}
	return 0
}

func (x *CSODOTAParty) GetMatchgroups() uint32 {
	if x != nil && x.Matchgroups != nil {
		return *x.Matchgroups
	}
	return 0
}

func (x *CSODOTAParty) GetLowPriorityAccountId() uint32 {
	if x != nil && x.LowPriorityAccountId != nil {
		return *x.LowPriorityAccountId
	}
	return 0
}

func (x *CSODOTAParty) GetMatchType() MatchType {
	if x != nil && x.MatchType != nil {
		return *x.MatchType
	}
	return Default_CSODOTAParty_MatchType
}

func (x *CSODOTAParty) GetTeamId() uint32 {
	if x != nil && x.TeamId != nil {
		return *x.TeamId
	}
	return 0
}

func (x *CSODOTAParty) GetTeamName() string {
	if x != nil && x.TeamName != nil {
		return *x.TeamName
	}
	return ""
}

func (x *CSODOTAParty) GetTeamUiLogo() uint64 {
	if x != nil && x.TeamUiLogo != nil {
		return *x.TeamUiLogo
	}
	return 0
}

func (x *CSODOTAParty) GetTeamBaseLogo() uint64 {
	if x != nil && x.TeamBaseLogo != nil {
		return *x.TeamBaseLogo
	}
	return 0
}

func (x *CSODOTAParty) GetMatchDisabledUntilDate() uint32 {
	if x != nil && x.MatchDisabledUntilDate != nil {
		return *x.MatchDisabledUntilDate
	}
	return 0
}

func (x *CSODOTAParty) GetMatchDisabledAccountId() uint32 {
	if x != nil && x.MatchDisabledAccountId != nil {
		return *x.MatchDisabledAccountId
	}
	return 0
}

func (x *CSODOTAParty) GetMatchmakingMaxRangeMinutes() uint32 {
	if x != nil && x.MatchmakingMaxRangeMinutes != nil {
		return *x.MatchmakingMaxRangeMinutes
	}
	return 0
}

func (x *CSODOTAParty) GetMatchlanguages() uint32 {
	if x != nil && x.Matchlanguages != nil {
		return *x.Matchlanguages
	}
	return 0
}

func (x *CSODOTAParty) GetMembers() []*CSODOTAPartyMember {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *CSODOTAParty) GetLowPriorityGamesRemaining() uint32 {
	if x != nil && x.LowPriorityGamesRemaining != nil {
		return *x.LowPriorityGamesRemaining
	}
	return 0
}

func (x *CSODOTAParty) GetOpenForJoinRequests() bool {
	if x != nil && x.OpenForJoinRequests != nil {
		return *x.OpenForJoinRequests
	}
	return false
}

func (x *CSODOTAParty) GetSentInvites() []*CSODOTAPartyInvite {
	if x != nil {
		return x.SentInvites
	}
	return nil
}

func (x *CSODOTAParty) GetRecvInvites() []*CSODOTAPartyInvite {
	if x != nil {
		return x.RecvInvites
	}
	return nil
}

func (x *CSODOTAParty) GetAccountFlags() uint32 {
	if x != nil && x.AccountFlags != nil {
		return *x.AccountFlags
	}
	return 0
}

func (x *CSODOTAParty) GetRegionSelectFlags() uint32 {
	if x != nil && x.RegionSelectFlags != nil {
		return *x.RegionSelectFlags
	}
	return 0
}

func (x *CSODOTAParty) GetExclusiveTournamentId() uint32 {
	if x != nil && x.ExclusiveTournamentId != nil {
		return *x.ExclusiveTournamentId
	}
	return 0
}

func (x *CSODOTAParty) GetTourneyDivisionId() uint32 {
	if x != nil && x.TourneyDivisionId != nil {
		return *x.TourneyDivisionId
	}
	return 0
}

func (x *CSODOTAParty) GetTourneyScheduleTime() uint32 {
	if x != nil && x.TourneyScheduleTime != nil {
		return *x.TourneyScheduleTime
	}
	return 0
}

func (x *CSODOTAParty) GetTourneySkillLevel() uint32 {
	if x != nil && x.TourneySkillLevel != nil {
		return *x.TourneySkillLevel
	}
	return 0
}

func (x *CSODOTAParty) GetTourneyBracketRound() uint32 {
	if x != nil && x.TourneyBracketRound != nil {
		return *x.TourneyBracketRound
	}
	return 0
}

func (x *CSODOTAParty) GetTourneyQueueDeadlineTime() uint32 {
	if x != nil && x.TourneyQueueDeadlineTime != nil {
		return *x.TourneyQueueDeadlineTime
	}
	return 0
}

func (x *CSODOTAParty) GetTourneyQueueDeadlineState() ETourneyQueueDeadlineState {
	if x != nil && x.TourneyQueueDeadlineState != nil {
		return *x.TourneyQueueDeadlineState
	}
	return Default_CSODOTAParty_TourneyQueueDeadlineState
}

func (x *CSODOTAParty) GetPartyBuilderSlotsToFill() uint32 {
	if x != nil && x.PartyBuilderSlotsToFill != nil {
		return *x.PartyBuilderSlotsToFill
	}
	return 0
}

func (x *CSODOTAParty) GetPartyBuilderMatchGroups() uint32 {
	if x != nil && x.PartyBuilderMatchGroups != nil {
		return *x.PartyBuilderMatchGroups
	}
	return 0
}

func (x *CSODOTAParty) GetPartyBuilderStartTime() uint32 {
	if x != nil && x.PartyBuilderStartTime != nil {
		return *x.PartyBuilderStartTime
	}
	return 0
}

func (x *CSODOTAParty) GetSoloQueue() bool {
	if x != nil && x.SoloQueue != nil {
		return *x.SoloQueue
	}
	return false
}

func (x *CSODOTAParty) GetSteamClanAccountId() uint32 {
	if x != nil && x.SteamClanAccountId != nil {
		return *x.SteamClanAccountId
	}
	return 0
}

func (x *CSODOTAParty) GetReadyCheck() *CMsgReadyCheckStatus {
	if x != nil {
		return x.ReadyCheck
	}
	return nil
}

func (x *CSODOTAParty) GetCustomGameDisabledUntilDate() uint32 {
	if x != nil && x.CustomGameDisabledUntilDate != nil {
		return *x.CustomGameDisabledUntilDate
	}
	return 0
}

func (x *CSODOTAParty) GetCustomGameDisabledAccountId() uint32 {
	if x != nil && x.CustomGameDisabledAccountId != nil {
		return *x.CustomGameDisabledAccountId
	}
	return 0
}

func (x *CSODOTAParty) GetIsChallengeMatch() bool {
	if x != nil && x.IsChallengeMatch != nil {
		return *x.IsChallengeMatch
	}
	return false
}

func (x *CSODOTAParty) GetPartySearchBeaconActive() bool {
	if x != nil && x.PartySearchBeaconActive != nil {
		return *x.PartySearchBeaconActive
	}
	return false
}

func (x *CSODOTAParty) GetMatchmakingFlags() uint32 {
	if x != nil && x.MatchmakingFlags != nil {
		return *x.MatchmakingFlags
	}
	return 0
}

func (x *CSODOTAParty) GetHighPriorityState() EHighPriorityMMState {
	if x != nil && x.HighPriorityState != nil {
		return *x.HighPriorityState
	}
	return Default_CSODOTAParty_HighPriorityState
}

func (x *CSODOTAParty) GetLaneSelectionsEnabled() bool {
	if x != nil && x.LaneSelectionsEnabled != nil {
		return *x.LaneSelectionsEnabled
	}
	return false
}

func (x *CSODOTAParty) GetCustomGameDifficultyMask() uint32 {
	if x != nil && x.CustomGameDifficultyMask != nil {
		return *x.CustomGameDifficultyMask
	}
	return 0
}

func (x *CSODOTAParty) GetIsSteamChina() bool {
	if x != nil && x.IsSteamChina != nil {
		return *x.IsSteamChina
	}
	return false
}

func (x *CSODOTAParty) GetBotDifficultyMask() uint32 {
	if x != nil && x.BotDifficultyMask != nil {
		return *x.BotDifficultyMask
	}
	return 0
}

func (x *CSODOTAParty) GetBotScriptIndexMask() uint32 {
	if x != nil && x.BotScriptIndexMask != nil {
		return *x.BotScriptIndexMask
	}
	return 0
}

func (x *CSODOTAParty) GetRestrictedFromRanked() bool {
	if x != nil && x.RestrictedFromRanked != nil {
		return *x.RestrictedFromRanked
	}
	return false
}

func (x *CSODOTAParty) GetRestrictedFromRankedAccountId() uint32 {
	if x != nil && x.RestrictedFromRankedAccountId != nil {
		return *x.RestrictedFromRankedAccountId
	}
	return 0
}

func (x *CSODOTAParty) GetRankSpreadLikertScale() uint32 {
	if x != nil && x.RankSpreadLikertScale != nil {
		return *x.RankSpreadLikertScale
	}
	return 0
}

func (x *CSODOTAParty) GetBehaviorScoreLikertScale() uint32 {
	if x != nil && x.BehaviorScoreLikertScale != nil {
		return *x.BehaviorScoreLikertScale
	}
	return 0
}

type CSODOTAPartyInvite struct {
	state             protoimpl.MessageState            `protogen:"open.v1"`
	GroupId           *uint64                           `protobuf:"varint,1,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	SenderId          *uint64                           `protobuf:"fixed64,2,opt,name=sender_id,json=senderId" json:"sender_id,omitempty"`
	SenderName        *string                           `protobuf:"bytes,3,opt,name=sender_name,json=senderName" json:"sender_name,omitempty"`
	Members           []*CSODOTAPartyInvite_PartyMember `protobuf:"bytes,4,rep,name=members" json:"members,omitempty"`
	TeamId            *uint32                           `protobuf:"varint,5,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	LowPriorityStatus *bool                             `protobuf:"varint,6,opt,name=low_priority_status,json=lowPriorityStatus" json:"low_priority_status,omitempty"`
	AsCoach           *bool                             `protobuf:"varint,7,opt,name=as_coach,json=asCoach" json:"as_coach,omitempty"`
	InviteGid         *uint64                           `protobuf:"fixed64,8,opt,name=invite_gid,json=inviteGid" json:"invite_gid,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CSODOTAPartyInvite) Reset() {
	*x = CSODOTAPartyInvite{}
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSODOTAPartyInvite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSODOTAPartyInvite) ProtoMessage() {}

func (x *CSODOTAPartyInvite) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSODOTAPartyInvite.ProtoReflect.Descriptor instead.
func (*CSODOTAPartyInvite) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{2}
}

func (x *CSODOTAPartyInvite) GetGroupId() uint64 {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return 0
}

func (x *CSODOTAPartyInvite) GetSenderId() uint64 {
	if x != nil && x.SenderId != nil {
		return *x.SenderId
	}
	return 0
}

func (x *CSODOTAPartyInvite) GetSenderName() string {
	if x != nil && x.SenderName != nil {
		return *x.SenderName
	}
	return ""
}

func (x *CSODOTAPartyInvite) GetMembers() []*CSODOTAPartyInvite_PartyMember {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *CSODOTAPartyInvite) GetTeamId() uint32 {
	if x != nil && x.TeamId != nil {
		return *x.TeamId
	}
	return 0
}

func (x *CSODOTAPartyInvite) GetLowPriorityStatus() bool {
	if x != nil && x.LowPriorityStatus != nil {
		return *x.LowPriorityStatus
	}
	return false
}

func (x *CSODOTAPartyInvite) GetAsCoach() bool {
	if x != nil && x.AsCoach != nil {
		return *x.AsCoach
	}
	return false
}

func (x *CSODOTAPartyInvite) GetInviteGid() uint64 {
	if x != nil && x.InviteGid != nil {
		return *x.InviteGid
	}
	return 0
}

type CMsgLeaverState struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	LobbyState          *uint32                `protobuf:"varint,1,opt,name=lobby_state,json=lobbyState" json:"lobby_state,omitempty"`
	GameState           *DOTA_GameState        `protobuf:"varint,2,opt,name=game_state,json=gameState,enum=protocol.DOTA_GameState,def=0" json:"game_state,omitempty"`
	LeaverDetected      *bool                  `protobuf:"varint,3,opt,name=leaver_detected,json=leaverDetected" json:"leaver_detected,omitempty"`
	FirstBloodHappened  *bool                  `protobuf:"varint,4,opt,name=first_blood_happened,json=firstBloodHappened" json:"first_blood_happened,omitempty"`
	DiscardMatchResults *bool                  `protobuf:"varint,5,opt,name=discard_match_results,json=discardMatchResults" json:"discard_match_results,omitempty"`
	MassDisconnect      *bool                  `protobuf:"varint,6,opt,name=mass_disconnect,json=massDisconnect" json:"mass_disconnect,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

// Default values for CMsgLeaverState fields.
const (
	Default_CMsgLeaverState_GameState = DOTA_GameState_DOTA_GAMERULES_STATE_INIT
)

func (x *CMsgLeaverState) Reset() {
	*x = CMsgLeaverState{}
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgLeaverState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLeaverState) ProtoMessage() {}

func (x *CMsgLeaverState) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLeaverState.ProtoReflect.Descriptor instead.
func (*CMsgLeaverState) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgLeaverState) GetLobbyState() uint32 {
	if x != nil && x.LobbyState != nil {
		return *x.LobbyState
	}
	return 0
}

func (x *CMsgLeaverState) GetGameState() DOTA_GameState {
	if x != nil && x.GameState != nil {
		return *x.GameState
	}
	return Default_CMsgLeaverState_GameState
}

func (x *CMsgLeaverState) GetLeaverDetected() bool {
	if x != nil && x.LeaverDetected != nil {
		return *x.LeaverDetected
	}
	return false
}

func (x *CMsgLeaverState) GetFirstBloodHappened() bool {
	if x != nil && x.FirstBloodHappened != nil {
		return *x.FirstBloodHappened
	}
	return false
}

func (x *CMsgLeaverState) GetDiscardMatchResults() bool {
	if x != nil && x.DiscardMatchResults != nil {
		return *x.DiscardMatchResults
	}
	return false
}

func (x *CMsgLeaverState) GetMassDisconnect() bool {
	if x != nil && x.MassDisconnect != nil {
		return *x.MassDisconnect
	}
	return false
}

type CMsgReadyCheckStatus struct {
	state              protoimpl.MessageState              `protogen:"open.v1"`
	StartTimestamp     *uint32                             `protobuf:"varint,1,opt,name=start_timestamp,json=startTimestamp" json:"start_timestamp,omitempty"`
	FinishTimestamp    *uint32                             `protobuf:"varint,2,opt,name=finish_timestamp,json=finishTimestamp" json:"finish_timestamp,omitempty"`
	InitiatorAccountId *uint32                             `protobuf:"varint,3,opt,name=initiator_account_id,json=initiatorAccountId" json:"initiator_account_id,omitempty"`
	ReadyMembers       []*CMsgReadyCheckStatus_ReadyMember `protobuf:"bytes,4,rep,name=ready_members,json=readyMembers" json:"ready_members,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CMsgReadyCheckStatus) Reset() {
	*x = CMsgReadyCheckStatus{}
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgReadyCheckStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgReadyCheckStatus) ProtoMessage() {}

func (x *CMsgReadyCheckStatus) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgReadyCheckStatus.ProtoReflect.Descriptor instead.
func (*CMsgReadyCheckStatus) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgReadyCheckStatus) GetStartTimestamp() uint32 {
	if x != nil && x.StartTimestamp != nil {
		return *x.StartTimestamp
	}
	return 0
}

func (x *CMsgReadyCheckStatus) GetFinishTimestamp() uint32 {
	if x != nil && x.FinishTimestamp != nil {
		return *x.FinishTimestamp
	}
	return 0
}

func (x *CMsgReadyCheckStatus) GetInitiatorAccountId() uint32 {
	if x != nil && x.InitiatorAccountId != nil {
		return *x.InitiatorAccountId
	}
	return 0
}

func (x *CMsgReadyCheckStatus) GetReadyMembers() []*CMsgReadyCheckStatus_ReadyMember {
	if x != nil {
		return x.ReadyMembers
	}
	return nil
}

type CMsgPartyReadyCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgPartyReadyCheckRequest) Reset() {
	*x = CMsgPartyReadyCheckRequest{}
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgPartyReadyCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPartyReadyCheckRequest) ProtoMessage() {}

func (x *CMsgPartyReadyCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPartyReadyCheckRequest.ProtoReflect.Descriptor instead.
func (*CMsgPartyReadyCheckRequest) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{5}
}

type CMsgPartyReadyCheckResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Result        *EReadyCheckRequestResult `protobuf:"varint,1,opt,name=result,enum=protocol.EReadyCheckRequestResult,def=0" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgPartyReadyCheckResponse fields.
const (
	Default_CMsgPartyReadyCheckResponse_Result = EReadyCheckRequestResult_k_EReadyCheckRequestResult_Success
)

func (x *CMsgPartyReadyCheckResponse) Reset() {
	*x = CMsgPartyReadyCheckResponse{}
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgPartyReadyCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPartyReadyCheckResponse) ProtoMessage() {}

func (x *CMsgPartyReadyCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPartyReadyCheckResponse.ProtoReflect.Descriptor instead.
func (*CMsgPartyReadyCheckResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgPartyReadyCheckResponse) GetResult() EReadyCheckRequestResult {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgPartyReadyCheckResponse_Result
}

type CMsgPartyReadyCheckAcknowledge struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReadyStatus   *EReadyCheckStatus     `protobuf:"varint,1,opt,name=ready_status,json=readyStatus,enum=protocol.EReadyCheckStatus,def=0" json:"ready_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgPartyReadyCheckAcknowledge fields.
const (
	Default_CMsgPartyReadyCheckAcknowledge_ReadyStatus = EReadyCheckStatus_k_EReadyCheckStatus_Unknown
)

func (x *CMsgPartyReadyCheckAcknowledge) Reset() {
	*x = CMsgPartyReadyCheckAcknowledge{}
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgPartyReadyCheckAcknowledge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPartyReadyCheckAcknowledge) ProtoMessage() {}

func (x *CMsgPartyReadyCheckAcknowledge) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPartyReadyCheckAcknowledge.ProtoReflect.Descriptor instead.
func (*CMsgPartyReadyCheckAcknowledge) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgPartyReadyCheckAcknowledge) GetReadyStatus() EReadyCheckStatus {
	if x != nil && x.ReadyStatus != nil {
		return *x.ReadyStatus
	}
	return Default_CMsgPartyReadyCheckAcknowledge_ReadyStatus
}

type CMsgLobbyEventGameDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KvData        []byte                 `protobuf:"bytes,1,opt,name=kv_data,json=kvData" json:"kv_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgLobbyEventGameDetails) Reset() {
	*x = CMsgLobbyEventGameDetails{}
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgLobbyEventGameDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLobbyEventGameDetails) ProtoMessage() {}

func (x *CMsgLobbyEventGameDetails) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLobbyEventGameDetails.ProtoReflect.Descriptor instead.
func (*CMsgLobbyEventGameDetails) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgLobbyEventGameDetails) GetKvData() []byte {
	if x != nil {
		return x.KvData
	}
	return nil
}

type CMsgMatchMatchmakingStats struct {
	state                 protoimpl.MessageState       `protogen:"open.v1"`
	AverageQueueTime      *uint32                      `protobuf:"varint,1,opt,name=average_queue_time,json=averageQueueTime" json:"average_queue_time,omitempty"`
	MaximumQueueTime      *uint32                      `protobuf:"varint,2,opt,name=maximum_queue_time,json=maximumQueueTime" json:"maximum_queue_time,omitempty"`
	BehaviorScoreVariance *EMatchBehaviorScoreVariance `protobuf:"varint,3,opt,name=behavior_score_variance,json=behaviorScoreVariance,enum=protocol.EMatchBehaviorScoreVariance,def=0" json:"behavior_score_variance,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

// Default values for CMsgMatchMatchmakingStats fields.
const (
	Default_CMsgMatchMatchmakingStats_BehaviorScoreVariance = EMatchBehaviorScoreVariance_k_EMatchBehaviorScoreVariance_Invalid
)

func (x *CMsgMatchMatchmakingStats) Reset() {
	*x = CMsgMatchMatchmakingStats{}
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgMatchMatchmakingStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgMatchMatchmakingStats) ProtoMessage() {}

func (x *CMsgMatchMatchmakingStats) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgMatchMatchmakingStats.ProtoReflect.Descriptor instead.
func (*CMsgMatchMatchmakingStats) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgMatchMatchmakingStats) GetAverageQueueTime() uint32 {
	if x != nil && x.AverageQueueTime != nil {
		return *x.AverageQueueTime
	}
	return 0
}

func (x *CMsgMatchMatchmakingStats) GetMaximumQueueTime() uint32 {
	if x != nil && x.MaximumQueueTime != nil {
		return *x.MaximumQueueTime
	}
	return 0
}

func (x *CMsgMatchMatchmakingStats) GetBehaviorScoreVariance() EMatchBehaviorScoreVariance {
	if x != nil && x.BehaviorScoreVariance != nil {
		return *x.BehaviorScoreVariance
	}
	return Default_CMsgMatchMatchmakingStats_BehaviorScoreVariance
}

type CMvpData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mvps          []*CMvpData_MvpDatum   `protobuf:"bytes,1,rep,name=mvps" json:"mvps,omitempty"`
	EventMvps     []*CMvpData_MvpDatum   `protobuf:"bytes,2,rep,name=event_mvps,json=eventMvps" json:"event_mvps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMvpData) Reset() {
	*x = CMvpData{}
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMvpData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMvpData) ProtoMessage() {}

func (x *CMvpData) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMvpData.ProtoReflect.Descriptor instead.
func (*CMvpData) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{10}
}

func (x *CMvpData) GetMvps() []*CMvpData_MvpDatum {
	if x != nil {
		return x.Mvps
	}
	return nil
}

func (x *CMvpData) GetEventMvps() []*CMvpData_MvpDatum {
	if x != nil {
		return x.EventMvps
	}
	return nil
}

type CSODOTAPartyInvite_PartyMember struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	SteamId       *uint64                `protobuf:"fixed64,2,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	IsCoach       *bool                  `protobuf:"varint,4,opt,name=is_coach,json=isCoach" json:"is_coach,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSODOTAPartyInvite_PartyMember) Reset() {
	*x = CSODOTAPartyInvite_PartyMember{}
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSODOTAPartyInvite_PartyMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSODOTAPartyInvite_PartyMember) ProtoMessage() {}

func (x *CSODOTAPartyInvite_PartyMember) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSODOTAPartyInvite_PartyMember.ProtoReflect.Descriptor instead.
func (*CSODOTAPartyInvite_PartyMember) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CSODOTAPartyInvite_PartyMember) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CSODOTAPartyInvite_PartyMember) GetSteamId() uint64 {
	if x != nil && x.SteamId != nil {
		return *x.SteamId
	}
	return 0
}

func (x *CSODOTAPartyInvite_PartyMember) GetIsCoach() bool {
	if x != nil && x.IsCoach != nil {
		return *x.IsCoach
	}
	return false
}

type CMsgReadyCheckStatus_ReadyMember struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     *uint32                `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ReadyStatus   *EReadyCheckStatus     `protobuf:"varint,2,opt,name=ready_status,json=readyStatus,enum=protocol.EReadyCheckStatus,def=0" json:"ready_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgReadyCheckStatus_ReadyMember fields.
const (
	Default_CMsgReadyCheckStatus_ReadyMember_ReadyStatus = EReadyCheckStatus_k_EReadyCheckStatus_Unknown
)

func (x *CMsgReadyCheckStatus_ReadyMember) Reset() {
	*x = CMsgReadyCheckStatus_ReadyMember{}
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgReadyCheckStatus_ReadyMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgReadyCheckStatus_ReadyMember) ProtoMessage() {}

func (x *CMsgReadyCheckStatus_ReadyMember) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgReadyCheckStatus_ReadyMember.ProtoReflect.Descriptor instead.
func (*CMsgReadyCheckStatus_ReadyMember) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{4, 0}
}

func (x *CMsgReadyCheckStatus_ReadyMember) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgReadyCheckStatus_ReadyMember) GetReadyStatus() EReadyCheckStatus {
	if x != nil && x.ReadyStatus != nil {
		return *x.ReadyStatus
	}
	return Default_CMsgReadyCheckStatus_ReadyMember_ReadyStatus
}

type CMvpData_MvpDatum struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	PlayerSlot    *uint32                          `protobuf:"varint,1,opt,name=player_slot,json=playerSlot" json:"player_slot,omitempty"`
	Accolades     []*CMvpData_MvpDatum_MvpAccolade `protobuf:"bytes,2,rep,name=accolades" json:"accolades,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMvpData_MvpDatum) Reset() {
	*x = CMvpData_MvpDatum{}
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMvpData_MvpDatum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMvpData_MvpDatum) ProtoMessage() {}

func (x *CMvpData_MvpDatum) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMvpData_MvpDatum.ProtoReflect.Descriptor instead.
func (*CMvpData_MvpDatum) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{10, 0}
}

func (x *CMvpData_MvpDatum) GetPlayerSlot() uint32 {
	if x != nil && x.PlayerSlot != nil {
		return *x.PlayerSlot
	}
	return 0
}

func (x *CMvpData_MvpDatum) GetAccolades() []*CMvpData_MvpDatum_MvpAccolade {
	if x != nil {
		return x.Accolades
	}
	return nil
}

type CMvpData_MvpDatum_MvpAccolade struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Type          *CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType `protobuf:"varint,1,opt,name=type,enum=protocol.CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType,def=1" json:"type,omitempty"`
	DetailValue   *float32                                       `protobuf:"fixed32,2,opt,name=detail_value,json=detailValue" json:"detail_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMvpData_MvpDatum_MvpAccolade fields.
const (
	Default_CMvpData_MvpDatum_MvpAccolade_Type = CMvpData_MvpDatum_MvpAccolade_kills
)

func (x *CMvpData_MvpDatum_MvpAccolade) Reset() {
	*x = CMvpData_MvpDatum_MvpAccolade{}
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMvpData_MvpDatum_MvpAccolade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMvpData_MvpDatum_MvpAccolade) ProtoMessage() {}

func (x *CMvpData_MvpDatum_MvpAccolade) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_common_match_management_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMvpData_MvpDatum_MvpAccolade.ProtoReflect.Descriptor instead.
func (*CMvpData_MvpDatum_MvpAccolade) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_common_match_management_proto_rawDescGZIP(), []int{10, 0, 0}
}

func (x *CMvpData_MvpDatum_MvpAccolade) GetType() CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_CMvpData_MvpDatum_MvpAccolade_Type
}

func (x *CMvpData_MvpDatum_MvpAccolade) GetDetailValue() float32 {
	if x != nil && x.DetailValue != nil {
		return *x.DetailValue
	}
	return 0
}

var File_dota_gcmessages_common_match_management_proto protoreflect.FileDescriptor

const file_dota_gcmessages_common_match_management_proto_rawDesc = "" +
	"\n" +
	"-dota_gcmessages_common_match_management.proto\x12\bprotocol\x1a\x13steammessages.proto\x1a\x16gcsdk_gcmessages.proto\x1a\x17dota_shared_enums.proto\"\xbd\x05\n" +
	"\x12CSODOTAPartyMember\x12\x19\n" +
	"\bis_coach\x18\x02 \x01(\bR\aisCoach\x12.\n" +
	"\x11region_ping_codes\x18\x04 \x03(\rB\x02\x10\x01R\x0fregionPingCodes\x12.\n" +
	"\x11region_ping_times\x18\x05 \x03(\rB\x02\x10\x01R\x0fregionPingTimes\x12;\n" +
	"\x1aregion_ping_failed_bitmask\x18\x06 \x01(\rR\x17regionPingFailedBitmask\x12,\n" +
	"\x12is_plus_subscriber\x18\n" +
	" \x01(\bR\x10isPlusSubscriber\x12.\n" +
	"\x13tourney_skill_level\x18\a \x01(\rR\x11tourneySkillLevel\x12#\n" +
	"\rtourney_buyin\x18\b \x01(\rR\ftourneyBuyin\x122\n" +
	"\x15tourney_prevent_until\x18\t \x01(\rR\x13tourneyPreventUntil\x12\"\n" +
	"\rmm_data_valid\x18\r \x01(\bR\vmmDataValid\x120\n" +
	"\x14lane_selection_flags\x18\v \x01(\rR\x12laneSelectionFlags\x124\n" +
	"\x16high_priority_disabled\x18\x0e \x01(\bR\x14highPriorityDisabled\x12&\n" +
	"\x0fhas_hp_resource\x18\x0f \x01(\bR\rhasHpResource\x126\n" +
	"\x17joined_from_partyfinder\x18\f \x01(\bR\x15joinedFromPartyfinder\x12$\n" +
	"\x0eis_steam_china\x18\x10 \x01(\bR\fisSteamChina\x12&\n" +
	"\x0fbanned_hero_ids\x18\x11 \x03(\x05R\rbannedHeroIds\"\xef\x17\n" +
	"\fCSODOTAParty\x12\x1f\n" +
	"\bparty_id\x18\x01 \x01(\x04B\x04\x80\xa6\x1d\x01R\apartyId\x12\x1b\n" +
	"\tleader_id\x18\x02 \x01(\x06R\bleaderId\x12\x1d\n" +
	"\n" +
	"member_ids\x18\x03 \x03(\x06R\tmemberIds\x12\x1d\n" +
	"\n" +
	"game_modes\x18\x04 \x01(\rR\tgameModes\x126\n" +
	"\x05state\x18\x06 \x01(\x0e2\x1c.protocol.CSODOTAParty.State:\x02UIR\x05state\x12K\n" +
	"\"effective_started_matchmaking_time\x18\a \x01(\rR\x1feffectiveStartedMatchmakingTime\x12?\n" +
	"\x1craw_started_matchmaking_time\x18  \x01(\rR\x19rawStartedMatchmakingTime\x12,\n" +
	"\x12attempt_start_time\x18! \x01(\rR\x10attemptStartTime\x12\x1f\n" +
	"\vattempt_num\x18\" \x01(\rR\n" +
	"attemptNum\x12 \n" +
	"\vmatchgroups\x18\v \x01(\rR\vmatchgroups\x125\n" +
	"\x17low_priority_account_id\x18\x13 \x01(\rR\x14lowPriorityAccountId\x12E\n" +
	"\n" +
	"match_type\x18\x15 \x01(\x0e2\x13.protocol.MatchType:\x11MATCH_TYPE_CASUALR\tmatchType\x12\x17\n" +
	"\ateam_id\x18\x17 \x01(\rR\x06teamId\x12\x1b\n" +
	"\tteam_name\x183 \x01(\tR\bteamName\x12 \n" +
	"\fteam_ui_logo\x184 \x01(\x04R\n" +
	"teamUiLogo\x12$\n" +
	"\x0eteam_base_logo\x185 \x01(\x04R\fteamBaseLogo\x129\n" +
	"\x19match_disabled_until_date\x18\x18 \x01(\rR\x16matchDisabledUntilDate\x129\n" +
	"\x19match_disabled_account_id\x18\x19 \x01(\rR\x16matchDisabledAccountId\x12A\n" +
	"\x1dmatchmaking_max_range_minutes\x18\x1a \x01(\rR\x1amatchmakingMaxRangeMinutes\x12&\n" +
	"\x0ematchlanguages\x18\x1b \x01(\rR\x0ematchlanguages\x126\n" +
	"\amembers\x18\x1d \x03(\v2\x1c.protocol.CSODOTAPartyMemberR\amembers\x12?\n" +
	"\x1clow_priority_games_remaining\x18# \x01(\rR\x19lowPriorityGamesRemaining\x123\n" +
	"\x16open_for_join_requests\x18( \x01(\bR\x13openForJoinRequests\x12?\n" +
	"\fsent_invites\x18) \x03(\v2\x1c.protocol.CSODOTAPartyInviteR\vsentInvites\x12?\n" +
	"\frecv_invites\x18* \x03(\v2\x1c.protocol.CSODOTAPartyInviteR\vrecvInvites\x12#\n" +
	"\raccount_flags\x18+ \x01(\rR\faccountFlags\x12.\n" +
	"\x13region_select_flags\x18, \x01(\rR\x11regionSelectFlags\x126\n" +
	"\x17exclusive_tournament_id\x18- \x01(\rR\x15exclusiveTournamentId\x12.\n" +
	"\x13tourney_division_id\x18/ \x01(\rR\x11tourneyDivisionId\x122\n" +
	"\x15tourney_schedule_time\x180 \x01(\rR\x13tourneyScheduleTime\x12.\n" +
	"\x13tourney_skill_level\x181 \x01(\rR\x11tourneySkillLevel\x122\n" +
	"\x15tourney_bracket_round\x182 \x01(\rR\x13tourneyBracketRound\x12=\n" +
	"\x1btourney_queue_deadline_time\x186 \x01(\rR\x18tourneyQueueDeadlineTime\x12\x8a\x01\n" +
	"\x1ctourney_queue_deadline_state\x187 \x01(\x0e2$.protocol.ETourneyQueueDeadlineState:#k_ETourneyQueueDeadlineState_NormalR\x19tourneyQueueDeadlineState\x12<\n" +
	"\x1bparty_builder_slots_to_fill\x188 \x01(\rR\x17partyBuilderSlotsToFill\x12;\n" +
	"\x1aparty_builder_match_groups\x189 \x01(\rR\x17partyBuilderMatchGroups\x127\n" +
	"\x18party_builder_start_time\x18: \x01(\rR\x15partyBuilderStartTime\x12\x1d\n" +
	"\n" +
	"solo_queue\x18; \x01(\bR\tsoloQueue\x121\n" +
	"\x15steam_clan_account_id\x18= \x01(\rR\x12steamClanAccountId\x12?\n" +
	"\vready_check\x18> \x01(\v2\x1e.protocol.CMsgReadyCheckStatusR\n" +
	"readyCheck\x12D\n" +
	"\x1fcustom_game_disabled_until_date\x18? \x01(\rR\x1bcustomGameDisabledUntilDate\x12D\n" +
	"\x1fcustom_game_disabled_account_id\x18@ \x01(\rR\x1bcustomGameDisabledAccountId\x12,\n" +
	"\x12is_challenge_match\x18A \x01(\bR\x10isChallengeMatch\x12;\n" +
	"\x1aparty_search_beacon_active\x18B \x01(\bR\x17partySearchBeaconActive\x12+\n" +
	"\x11matchmaking_flags\x18C \x01(\rR\x10matchmakingFlags\x12i\n" +
	"\x13high_priority_state\x18D \x01(\x0e2\x1e.protocol.EHighPriorityMMState:\x19k_EHighPriorityMM_UnknownR\x11highPriorityState\x126\n" +
	"\x17lane_selections_enabled\x18E \x01(\bR\x15laneSelectionsEnabled\x12=\n" +
	"\x1bcustom_game_difficulty_mask\x18F \x01(\rR\x18customGameDifficultyMask\x12$\n" +
	"\x0eis_steam_china\x18G \x01(\bR\fisSteamChina\x12.\n" +
	"\x13bot_difficulty_mask\x18H \x01(\rR\x11botDifficultyMask\x121\n" +
	"\x15bot_script_index_mask\x18I \x01(\rR\x12botScriptIndexMask\x124\n" +
	"\x16restricted_from_ranked\x18J \x01(\bR\x14restrictedFromRanked\x12H\n" +
	"!restricted_from_ranked_account_id\x18K \x01(\rR\x1drestrictedFromRankedAccountId\x127\n" +
	"\x18rank_spread_likert_scale\x18L \x01(\rR\x15rankSpreadLikertScale\x12=\n" +
	"\x1bbehavior_score_likert_scale\x18M \x01(\rR\x18behaviorScoreLikertScale\"0\n" +
	"\x05State\x12\x06\n" +
	"\x02UI\x10\x00\x12\x11\n" +
	"\rFINDING_MATCH\x10\x01\x12\f\n" +
	"\bIN_MATCH\x10\x02\"\x93\x03\n" +
	"\x12CSODOTAPartyInvite\x12\x1f\n" +
	"\bgroup_id\x18\x01 \x01(\x04B\x04\x80\xa6\x1d\x01R\agroupId\x12\x1b\n" +
	"\tsender_id\x18\x02 \x01(\x06R\bsenderId\x12\x1f\n" +
	"\vsender_name\x18\x03 \x01(\tR\n" +
	"senderName\x12B\n" +
	"\amembers\x18\x04 \x03(\v2(.protocol.CSODOTAPartyInvite.PartyMemberR\amembers\x12\x17\n" +
	"\ateam_id\x18\x05 \x01(\rR\x06teamId\x12.\n" +
	"\x13low_priority_status\x18\x06 \x01(\bR\x11lowPriorityStatus\x12\x19\n" +
	"\bas_coach\x18\a \x01(\bR\aasCoach\x12\x1d\n" +
	"\n" +
	"invite_gid\x18\b \x01(\x06R\tinviteGid\x1aW\n" +
	"\vPartyMember\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x19\n" +
	"\bsteam_id\x18\x02 \x01(\x06R\asteamId\x12\x19\n" +
	"\bis_coach\x18\x04 \x01(\bR\aisCoach\"\xbe\x02\n" +
	"\x0fCMsgLeaverState\x12\x1f\n" +
	"\vlobby_state\x18\x01 \x01(\rR\n" +
	"lobbyState\x12R\n" +
	"\n" +
	"game_state\x18\x02 \x01(\x0e2\x18.protocol.DOTA_GameState:\x19DOTA_GAMERULES_STATE_INITR\tgameState\x12'\n" +
	"\x0fleaver_detected\x18\x03 \x01(\bR\x0eleaverDetected\x120\n" +
	"\x14first_blood_happened\x18\x04 \x01(\bR\x12firstBloodHappened\x122\n" +
	"\x15discard_match_results\x18\x05 \x01(\bR\x13discardMatchResults\x12'\n" +
	"\x0fmass_disconnect\x18\x06 \x01(\bR\x0emassDisconnect\"\xf9\x02\n" +
	"\x14CMsgReadyCheckStatus\x12'\n" +
	"\x0fstart_timestamp\x18\x01 \x01(\rR\x0estartTimestamp\x12)\n" +
	"\x10finish_timestamp\x18\x02 \x01(\rR\x0ffinishTimestamp\x120\n" +
	"\x14initiator_account_id\x18\x03 \x01(\rR\x12initiatorAccountId\x12O\n" +
	"\rready_members\x18\x04 \x03(\v2*.protocol.CMsgReadyCheckStatus.ReadyMemberR\freadyMembers\x1a\x89\x01\n" +
	"\vReadyMember\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\rR\taccountId\x12[\n" +
	"\fready_status\x18\x02 \x01(\x0e2\x1b.protocol.EReadyCheckStatus:\x1bk_EReadyCheckStatus_UnknownR\vreadyStatus\"\x1c\n" +
	"\x1aCMsgPartyReadyCheckRequest\"}\n" +
	"\x1bCMsgPartyReadyCheckResponse\x12^\n" +
	"\x06result\x18\x01 \x01(\x0e2\".protocol.EReadyCheckRequestResult:\"k_EReadyCheckRequestResult_SuccessR\x06result\"}\n" +
	"\x1eCMsgPartyReadyCheckAcknowledge\x12[\n" +
	"\fready_status\x18\x01 \x01(\x0e2\x1b.protocol.EReadyCheckStatus:\x1bk_EReadyCheckStatus_UnknownR\vreadyStatus\"4\n" +
	"\x19CMsgLobbyEventGameDetails\x12\x17\n" +
	"\akv_data\x18\x01 \x01(\fR\x06kvData\"\xfe\x01\n" +
	"\x19CMsgMatchMatchmakingStats\x12,\n" +
	"\x12average_queue_time\x18\x01 \x01(\rR\x10averageQueueTime\x12,\n" +
	"\x12maximum_queue_time\x18\x02 \x01(\rR\x10maximumQueueTime\x12\x84\x01\n" +
	"\x17behavior_score_variance\x18\x03 \x01(\x0e2%.protocol.EMatchBehaviorScoreVariance:%k_EMatchBehaviorScoreVariance_InvalidR\x15behaviorScoreVariance\"\xbao\n" +
	"\bCMvpData\x12/\n" +
	"\x04mvps\x18\x01 \x03(\v2\x1b.protocol.CMvpData.MvpDatumR\x04mvps\x12:\n" +
	"\n" +
	"event_mvps\x18\x02 \x03(\v2\x1b.protocol.CMvpData.MvpDatumR\teventMvps\x1a\xc0n\n" +
	"\bMvpDatum\x12\x1f\n" +
	"\vplayer_slot\x18\x01 \x01(\rR\n" +
	"playerSlot\x12E\n" +
	"\taccolades\x18\x02 \x03(\v2'.protocol.CMvpData.MvpDatum.MvpAccoladeR\taccolades\x1a\xcbm\n" +
	"\vMvpAccolade\x12R\n" +
	"\x04type\x18\x01 \x01(\x0e27.protocol.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType:\x05killsR\x04type\x12!\n" +
	"\fdetail_value\x18\x02 \x01(\x02R\vdetailValue\"\xc4l\n" +
	"\x0fMvpAccoladeType\x12\t\n" +
	"\x05kills\x10\x01\x12\n" +
	"\n" +
	"\x06deaths\x10\x02\x12\v\n" +
	"\aassists\x10\x03\x12\r\n" +
	"\tnet_worth\x10\x05\x12\x0e\n" +
	"\n" +
	"item_value\x10\x06\x12\x16\n" +
	"\x12support_gold_spent\x10\a\x12\x10\n" +
	"\fwards_placed\x10\b\x12\v\n" +
	"\adewards\x10\t\x12\x11\n" +
	"\rcamps_stacked\x10\n" +
	"\x12\r\n" +
	"\tlast_hits\x10\v\x12\n" +
	"\n" +
	"\x06denies\x10\f\x12\"\n" +
	"\x1ekKillEaterEvent_Killing_Sprees\x10\r\x12\x1b\n" +
	"\x17kKillEaterEvent_Godlike\x10\x0e\x12$\n" +
	" kKillEaterEvent_Towers_Destroyed\x10\x0f\x12.\n" +
	"*kKillEaterEventType_Invoker_SunstrikeKills\x10\x10\x12!\n" +
	"\x1dkKillEaterEventType_Axe_Culls\x10\x11\x12-\n" +
	")kKillEaterEventType_Axe_BattleHungerKills\x10\x12\x12&\n" +
	"\"kKillEaterEventType_LowHealthKills\x10\x13\x12,\n" +
	"(kKillEaterEventType_Invoker_TornadoKills\x10\x14\x12(\n" +
	"$kKillEaterEventType_Sven_DoubleStuns\x10\x15\x12*\n" +
	"&kKillEaterEventType_Sven_WarcryAssists\x10\x16\x12.\n" +
	"*kKillEaterEventType_Sven_CleaveDoubleKills\x10\x17\x12/\n" +
	"+kKillEaterEventType_Sven_TeleportInterrupts\x10\x18\x12,\n" +
	"(kKillEaterEventType_Faceless_MultiChrono\x10\x19\x12,\n" +
	"(kKillEaterEventType_Faceless_ChronoKills\x10\x1a\x12(\n" +
	"$kKillEaterEventType_Ursa_MultiShocks\x10\x1b\x12#\n" +
	"\x1fkKillEaterEventType_RoshanKills\x10\x1c\x12(\n" +
	"$kKillEaterEventType_Lion_FingerKills\x10\x1d\x12,\n" +
	"(kKillEaterEventType_Riki_SmokedHeroKills\x10 \x12.\n" +
	"*kKillEaterEventType_HeroesRevealedWithDust\x10!\x127\n" +
	"3kKillEaterEventType_SkeletonKing_ReincarnationKills\x10\"\x12+\n" +
	"'kKillEaterEventType_Skywrath_FlareKills\x10#\x12/\n" +
	"+kKillEaterEventType_Leshrac_SplitEarthStuns\x10$\x12,\n" +
	"(kKillEaterEventType_Mirana_MaxStunArrows\x10%\x128\n" +
	"4kKillEaterEventType_PhantomAssassin_CoupdeGraceCrits\x10&\x123\n" +
	"/kKillEaterEventType_PhantomAssassin_DaggerCrits\x10'\x12(\n" +
	"$kKillEaterEventType_Meepo_Earthbinds\x10(\x120\n" +
	",kKillEaterEventType_Bloodseeker_RuptureKills\x10)\x12,\n" +
	"(kKillEaterEventType_Slark_LeashedEnemies\x10*\x122\n" +
	".kKillEaterEventType_Disruptor_FountainGlimpses\x10+\x12+\n" +
	"'kKillEaterEventType_Rubick_SpellsStolen\x10,\x12.\n" +
	"*kKillEaterEventType_Rubick_UltimatesStolen\x10-\x12*\n" +
	"&kKillEaterEventType_Doom_EnemiesDoomed\x10.\x120\n" +
	",kKillEaterEventType_Omniknight_Purifications\x10/\x121\n" +
	"-kKillEaterEventType_Omniknight_AlliesRepelled\x100\x122\n" +
	".kKillEaterEventType_Omniknight_EnemiesRepelled\x101\x122\n" +
	".kKillEaterEventType_Warlock_FiveHeroFatalBonds\x102\x128\n" +
	"4kKillEaterEventType_CrystalMaiden_FrostbittenEnemies\x103\x122\n" +
	".kKillEaterEventType_CrystalMaiden_CrystalNovas\x104\x121\n" +
	"-kKillEaterEventType_Kunkka_DoubleHeroTorrents\x105\x123\n" +
	"/kKillEaterEventType_Kunkka_TripleHeroGhostShips\x106\x121\n" +
	"-kKillEaterEventType_NagaSiren_EnemiesEnsnared\x107\x124\n" +
	"0kKillEaterEventType_NagaSiren_TripleHeroRipTides\x108\x123\n" +
	"/kKillEaterEventType_Lycan_KillsDuringShapeshift\x109\x12,\n" +
	"(kKillEaterEventType_Pudge_DismemberKills\x10:\x12/\n" +
	"+kKillEaterEventType_Pudge_EnemyHeroesHooked\x10;\x12'\n" +
	"#kKillEaterEventType_Pudge_HookKills\x10<\x125\n" +
	"1kKillEaterEventType_Pudge_UnseenEnemyHeroesHooked\x10=\x122\n" +
	".kKillEaterEventType_DrowRanger_EnemiesSilenced\x10>\x124\n" +
	"0kKillEaterEventType_DrowRanger_MultiHeroSilences\x10?\x120\n" +
	",kKillEaterEventType_DrowRanger_SilencedKills\x10@\x122\n" +
	".kKillEaterEventType_DrowRanger_FrostArrowKills\x10A\x126\n" +
	"2kKillEaterEventType_DragonKnight_KillsInDragonForm\x10B\x125\n" +
	"1kKillEaterEventType_DragonKnight_BreatheFireKills\x10C\x120\n" +
	",kKillEaterEventType_DragonKnight_SplashKills\x10D\x12-\n" +
	")kKillEaterEventType_WitchDoctor_CaskStuns\x10E\x121\n" +
	"-kKillEaterEventType_WitchDoctor_MaledictKills\x10F\x126\n" +
	"2kKillEaterEventType_WitchDoctor_MultiHeroMaledicts\x10G\x122\n" +
	".kKillEaterEventType_WitchDoctor_DeathWardKills\x10H\x124\n" +
	"0kKillEaterEventType_Disruptor_ThunderStrikeKills\x10I\x120\n" +
	",kKillEaterEventType_Disruptor_HeroesGlimpsed\x10J\x128\n" +
	"4kKillEaterEventType_CrystalMaiden_FreezingFieldKills\x10K\x12/\n" +
	"+kKillEaterEventType_Medusa_EnemiesPetrified\x10M\x12/\n" +
	"+kKillEaterEventType_Warlock_FatalBondsKills\x10N\x12*\n" +
	"&kKillEaterEventType_Warlock_GolemKills\x10O\x12*\n" +
	"&kKillEaterEventType_Tusk_WalrusPunches\x10P\x12*\n" +
	"&kKillEaterEventType_Tusk_SnowballStuns\x10Q\x120\n" +
	",kKillEaterEventType_Earthshaker_FissureStuns\x10R\x122\n" +
	".kKillEaterEventType_Earthshaker_3HeroEchoslams\x10S\x122\n" +
	".kKillEaterEventType_SandKing_BurrowstrikeStuns\x10T\x12/\n" +
	"+kKillEaterEventType_SandKing_EpicenterKills\x10U\x125\n" +
	"1kKillEaterEventType_SkywrathMage_AncientSealKills\x10V\x128\n" +
	"4kKillEaterEventType_SkywrathMage_ConcussiveShotKills\x10W\x12,\n" +
	"(kKillEaterEventType_Luna_LucentBeamKills\x10X\x12)\n" +
	"%kKillEaterEventType_Luna_EclipseKills\x10Y\x128\n" +
	"4kKillEaterEventType_KeeperOfTheLight_IlluminateKills\x10Z\x126\n" +
	"2kKillEaterEventType_KeeperOfTheLight_ManaLeakStuns\x10[\x12:\n" +
	"6kKillEaterEventType_KeeperOfTheLight_TeammatesRecalled\x10\\\x120\n" +
	",kKillEaterEventType_LegionCommander_DuelsWon\x10]\x12-\n" +
	")kKillEaterEventType_Beastmaster_RoarKills\x10^\x122\n" +
	".kKillEaterEventType_Beastmaster_RoarMultiKills\x10_\x125\n" +
	"1kKillEaterEventType_Windrunner_FocusFireBuildings\x10`\x121\n" +
	"-kKillEaterEventType_Windrunner_PowershotKills\x10a\x126\n" +
	"2kKillEaterEventType_PhantomAssassin_DaggerLastHits\x10b\x12:\n" +
	"6kKillEaterEventType_PhantomAssassin_PhantomStrikeKills\x10c\x124\n" +
	"0kKillEaterEventType_DeathProphet_CryptSwarmKills\x10d\x12:\n" +
	"6kKillEaterEventType_DeathProphet_ExorcismBuildingKills\x10e\x12<\n" +
	"8kKillEaterEventType_DeathProphet_ExorcismSpiritsSummoned\x10f\x126\n" +
	"2kKillEaterEventType_DeathProphet_MultiHeroSilences\x10g\x12-\n" +
	")kKillEaterEventType_Abaddon_MistCoilKills\x10h\x12.\n" +
	"*kKillEaterEventType_Abaddon_MistCoilHealed\x10i\x122\n" +
	".kKillEaterEventType_Abaddon_AphoticShieldKills\x10j\x122\n" +
	".kKillEaterEventType_Lich_ChainFrostTripleKills\x10k\x121\n" +
	"-kKillEaterEventType_Lich_ChainFrostMultiKills\x10l\x12.\n" +
	"*kKillEaterEventType_Lich_ChainFrostBounces\x10m\x12)\n" +
	"%kKillEaterEventType_Ursa_EnragedKills\x10n\x12,\n" +
	"(kKillEaterEventType_Ursa_EarthshockKills\x10o\x12-\n" +
	")kKillEaterEventType_Lina_LagunaBladeKills\x10p\x12-\n" +
	")kKillEaterEventType_Lina_DragonSlaveKills\x10q\x122\n" +
	".kKillEaterEventType_Lina_LightStrikeArrayStuns\x10r\x12&\n" +
	"\"kKillEaterEvent_Barracks_Destroyed\x10s\x12-\n" +
	")kKillEaterEvent_TemplarAssassin_MeldKills\x10t\x120\n" +
	",kKillEaterEvent_TemplarAssassin_HeroesSlowed\x10u\x12-\n" +
	")kKillEaterEvent_Sniper_AssassinationKills\x10v\x12(\n" +
	"$kKillEaterEvent_Sniper_HeadshotStuns\x10w\x12*\n" +
	"&kKillEaterEvent_EarthSpirit_SmashStuns\x10x\x12,\n" +
	"(kKillEaterEvent_EarthSpirit_GripSilences\x10y\x12-\n" +
	")kKillEaterEvent_ShadowShaman_ShackleKills\x10z\x12)\n" +
	"%kKillEaterEvent_ShadowShaman_HexKills\x10{\x12*\n" +
	"&kKillEaterEvent_Centaur_EnemiesStomped\x10|\x12+\n" +
	"'kKillEaterEvent_Centaur_DoubleEdgeKills\x10}\x12'\n" +
	"#kKillEaterEvent_Centaur_ReturnKills\x10~\x12.\n" +
	"*kKillEaterEvent_EmberSpirit_EnemiesChained\x10\x7f\x128\n" +
	"3kKillEaterEvent_EmberSpirit_SleightOfFistMultiKills\x10\x80\x01\x12\"\n" +
	"\x1dkKillEaterEvent_Puck_OrbKills\x10\x81\x01\x122\n" +
	"-kKillEaterEvent_VengefulSpirit_EnemiesStunned\x10\x82\x01\x12*\n" +
	"%kKillEaterEvent_Lifestealer_RageKills\x10\x83\x01\x120\n" +
	"+kKillEaterEvent_Lifestealer_OpenWoundsKills\x10\x84\x01\x12,\n" +
	"'kKillEaterEvent_Lifestealer_InfestKills\x10\x85\x01\x12+\n" +
	"&kKillEaterEvent_ElderTitan_SpiritKills\x10\x86\x01\x12*\n" +
	"%kKillEaterEvent_ElderTitan_GoodStomps\x10\x87\x01\x12*\n" +
	"%kKillEaterEvent_Clockwerk_RocketKills\x10\x88\x01\x12/\n" +
	"*kKillEaterEvent_Clockwerk_BlindRocketKills\x10\x89\x01\x12*\n" +
	"%kKillEaterEvent_StormSpirit_BallKills\x10\x8a\x01\x123\n" +
	".kKillEaterEvent_StormSpirit_DoubleRemnantKills\x10\x8b\x01\x12,\n" +
	"'kKillEaterEvent_StormSpirit_VortexKills\x10\x8c\x01\x12.\n" +
	")kKillEaterEvent_Tinker_DoubleMissileKills\x10\x8d\x01\x12&\n" +
	"!kKillEaterEvent_Tinker_LaserKills\x10\x8e\x01\x12)\n" +
	"$kKillEaterEvent_Techies_SuicideKills\x10\x8f\x01\x12*\n" +
	"%kKillEaterEvent_Techies_LandMineKills\x10\x90\x01\x12,\n" +
	"'kKillEaterEvent_Techies_StatisTrapStuns\x10\x91\x01\x12,\n" +
	"'kKillEaterEvent_Techies_RemoteMineKills\x10\x92\x01\x120\n" +
	"+kKillEaterEvent_ShadowFiend_TripleRazeKills\x10\x93\x01\x122\n" +
	"-kKillEaterEvent_ShadowFiend_RequiemMultiKills\x10\x94\x01\x12+\n" +
	"&kKillEaterEvent_ShadowFiend_QRazeKills\x10\x95\x01\x12+\n" +
	"&kKillEaterEvent_ShadowFiend_WRazeKills\x10\x96\x01\x12+\n" +
	"&kKillEaterEvent_ShadowFiend_ERazeKills\x10\x97\x01\x12+\n" +
	"&kKillEaterEvent_Oracle_FatesEdictKills\x10\x98\x01\x12-\n" +
	"(kKillEaterEvent_Oracle_FalsePromiseSaves\x10\x99\x01\x12.\n" +
	")kKillEaterEvent_Juggernaut_OmnislashKills\x10\x9a\x01\x127\n" +
	"2kKillEaterEventType_SkeletonKing_SkeletonHeroKills\x10\x9d\x01\x12:\n" +
	"5kKillEaterEventType_DarkWillow_CursedCrownTripleStuns\x10\x9e\x01\x121\n" +
	",kKillEaterEventType_Dazzle_ShallowGraveSaves\x10\x9f\x01\x120\n" +
	"+kKillEaterEventType_Dazzle_PoisonTouchKills\x10\xa0\x01\x12%\n" +
	" kKillEaterEventType_ThreeManMeks\x10\xa1\x01\x120\n" +
	"+kKillEaterEventType_Viper_PoisonAttackKills\x10\xa2\x01\x121\n" +
	",kKillEaterEventType_Viper_CorrosiveSkinKills\x10\xa3\x01\x12'\n" +
	"\"kKillEaterEventType_ThreeHeroVeils\x10\xa4\x01\x125\n" +
	"0kKillEaterEventType_Viper_KillsDuringViperStrike\x10\xa5\x01\x12(\n" +
	"#kKillEaterEventType_SolarCrestKills\x10\xa6\x01\x12,\n" +
	"'kKillEaterEventType_Tiny_TreeThrowKills\x10\xa7\x01\x12+\n" +
	"&kKillEaterEventType_Riki_BackstabKills\x10\xa8\x01\x128\n" +
	"3kKillEaterEventType_Phoenix_ThreeHeroSupernovaStuns\x10\xa9\x01\x127\n" +
	"2kKillEaterEventType_Terrorblade_MetamorphosisKills\x10\xaa\x01\x12.\n" +
	")kKillEaterEventType_Lion_GreatFingerKills\x10\xab\x01\x12;\n" +
	"6kKillEaterEventType_Antimage_SpellsBlockedWithAghanims\x10\xac\x01\x123\n" +
	".kKillEaterEventType_Antimage_ThreeManManaVoids\x10\xad\x01\x125\n" +
	"0kKillEaterEventType_ArcWarden_TempestDoubleKills\x10\xae\x01\x123\n" +
	".kKillEaterEventType_ArcWarden_SparkWraithKills\x10\xaf\x01\x12+\n" +
	"&kKillEaterEventType_Bane_BrainSapKills\x10\xb0\x01\x12-\n" +
	"(kKillEaterEventType_Bane_FiendsGripKills\x10\xb1\x01\x127\n" +
	"2kKillEaterEventType_Batrider_TripleHeroFlamebreaks\x10\xb2\x01\x123\n" +
	".kKillEaterEventType_Batrider_DoubleHeroLassoes\x10\xb3\x01\x12:\n" +
	"5kKillEaterEventType_Brewmaster_KillsDuringPrimalSplit\x10\xb4\x01\x12>\n" +
	"9kKillEaterEventType_Bristleback_KillsUnderFourQuillStacks\x10\xb5\x01\x127\n" +
	"2kKillEaterEventType_Bristleback_TripleHeroNasalGoo\x10\xb6\x01\x128\n" +
	"3kKillEaterEventType_Broodmother_SpiderlingHeroKills\x10\xb7\x01\x123\n" +
	".kKillEaterEventType_Broodmother_KillsInsideWeb\x10\xb8\x01\x122\n" +
	"-kKillEaterEventType_Centaur_ThreeHeroStampede\x10\xb9\x01\x125\n" +
	"0kKillEaterEventType_ChaosKnight_RealityRiftKills\x10\xba\x01\x120\n" +
	"+kKillEaterEventType_Chen_KillsWithPenitence\x10\xbb\x01\x12:\n" +
	"5kKillEaterEventType_CrystalMaiden_TwoHeroCrystalNovas\x10\xbc\x01\x12>\n" +
	"9kKillEaterEventType_CrystalMaiden_ThreeHeroFreezingFields\x10\xbd\x01\x12/\n" +
	"*kKillEaterEventType_Dazzle_ShadowWaveKills\x10\xbe\x01\x121\n" +
	",kKillEaterEventType_DeathProphet_SiphonKills\x10\xbf\x01\x12=\n" +
	"8kKillEaterEventType_DeathProphet_ExorcismKillsDuringEuls\x10\xc0\x01\x12C\n" +
	">kKillEaterEventType_Disruptor_ThreeHeroKineticFieldStaticStorm\x10\xc1\x01\x124\n" +
	"/kKillEaterEventType_Doom_InfernalBladeBurnKills\x10\xc2\x01\x12@\n" +
	";kKillEaterEventType_DrowRanger_PrecisionAuraCreepTowerKills\x10\xc3\x01\x121\n" +
	",kKillEaterEventType_EmberSpirit_RemnantKills\x10\xc4\x01\x127\n" +
	"2kKillEaterEventType_EmberSpirit_SleightOfFistKills\x10\xc5\x01\x12<\n" +
	"7kKillEaterEventType_Enigma_MidnightPulseBlackHoleCombos\x10\xc6\x01\x122\n" +
	"-kKillEaterEventType_Enigma_ThreeManBlackHoles\x10\xc7\x01\x12;\n" +
	"6kKillEaterEventType_FacelessVoid_MultiHeroTimeDilation\x10\xc8\x01\x127\n" +
	"2kKillEaterEventType_Gyrocopter_ThreeHeroFlakCannon\x10\xc9\x01\x126\n" +
	"1kKillEaterEventType_Gyrocopter_HomingMissileKills\x10\xca\x01\x126\n" +
	"1kKillEaterEventType_Gyrocopter_RocketBarrageKills\x10\xcb\x01\x124\n" +
	"/kKillEaterEventType_Huskar_KillsDuringLifeBreak\x10\xcc\x01\x121\n" +
	",kKillEaterEventType_Huskar_BurningSpearKills\x10\xcd\x01\x121\n" +
	",kKillEaterEventType_Invoker_MultiHeroIceWall\x10\xce\x01\x12-\n" +
	"(kKillEaterEventType_Invoker_ThreeHeroEMP\x10\xcf\x01\x128\n" +
	"3kKillEaterEventType_Invoker_ThreeHeroDeafeningBlast\x10\xd0\x01\x125\n" +
	"0kKillEaterEventType_Invoker_MultiHeroChaosMeteor\x10\xd1\x01\x123\n" +
	".kKillEaterEventType_Jakiro_MultiHeroDualBreath\x10\xd2\x01\x126\n" +
	"1kKillEaterEventType_Jakiro_IcePathMacropyreCombos\x10\xd3\x01\x12/\n" +
	"*kKillEaterEventType_Leshrac_PulseNovaKills\x10\xd4\x01\x128\n" +
	"3kKillEaterEventType_Leshrac_ThreeHeroLightningStorm\x10\xd5\x01\x124\n" +
	"/kKillEaterEventType_Lion_ThreeHeroFingerOfDeath\x10\xd6\x01\x12(\n" +
	"#kKillEaterEventType_Meepo_PoofKills\x10\xd7\x01\x122\n" +
	"-kKillEaterEventType_Meepo_MultiHeroEarthbinds\x10\xd8\x01\x124\n" +
	"/kKillEaterEventType_NightStalker_NighttimeKills\x10\xd9\x01\x127\n" +
	"2kKillEaterEventType_Morphling_KillsDuringReplicate\x10\xda\x01\x120\n" +
	"+kKillEaterEventType_OgreMagi_FireblastKills\x10\xdb\x01\x12-\n" +
	"(kKillEaterEventType_OgreMagi_IgniteKills\x10\xdc\x01\x12.\n" +
	")kKillEaterEventType_DominatingKillStreaks\x10\xdd\x01\x12(\n" +
	"#kKillEaterEventType_MegaKillStreaks\x10\xde\x01\x120\n" +
	"+kKillEaterEventType_Alchemist_AghanimsGiven\x10\xdf\x01\x12,\n" +
	"'kKillEaterEventType_VeilsLeadingToKills\x10\xe0\x01\x12+\n" +
	"&kKillEaterEventType_DustLeadingToKills\x10\xe1\x01\x127\n" +
	"2kKillEaterEventType_WitchDoctor_MultiHeroCaskStuns\x10\xe2\x01\x12-\n" +
	"(kKillEaterEventType_Weaver_ShukuchiKills\x10\xe3\x01\x129\n" +
	"4kKillEaterEventType_Windrunner_ShackleFocusFireKills\x10\xe4\x01\x12B\n" +
	"=kKillEaterEventType_VengefulSpirit_VengeanceAuraIllusionKills\x10\xe5\x01\x12.\n" +
	")kKillEaterEventType_Tusk_WalrusPunchKills\x10\xe6\x01\x12/\n" +
	"*kKillEaterEventType_Tinker_MultiHeroLasers\x10\xe7\x01\x12;\n" +
	"6kKillEaterEventType_TemplarAssassin_MultiHeroPsiBlades\x10\xe8\x01\x125\n" +
	"0kKillEaterEventType_Sven_KillsDuringGodsStrength\x10\xe9\x01\x122\n" +
	"-kKillEaterEventType_Sniper_ThreeHeroShrapnels\x10\xea\x01\x125\n" +
	"0kKillEaterEventType_Slark_KillsDuringShadowDance\x10\xeb\x01\x12:\n" +
	"5kKillEaterEventType_ShadowShaman_MultiHeroEtherShocks\x10\xec\x01\x12=\n" +
	"8kKillEaterEventType_ShadowShaman_SerpentWardShackleKills\x10\xed\x01\x127\n" +
	"2kKillEaterEventType_Riki_ThreeHeroTricksOfTheTrade\x10\xee\x01\x121\n" +
	",kKillEaterEventType_Razor_EyeOfTheStormKills\x10\xef\x01\x12-\n" +
	"(kKillEaterEventType_Pugna_LifeDrainKills\x10\xf0\x01\x12>\n" +
	"9kKillEaterEventType_ObsidianDestroyer_SanitysEclipseKills\x10\xf1\x01\x124\n" +
	"/kKillEaterEventType_Oracle_MultiHeroFortunesEnd\x10\xf2\x01\x125\n" +
	"0kKillEaterEventType_Omniknight_PurificationKills\x10\xf3\x01\x12C\n" +
	">kKillEaterEventType_NightStalker_EnemyMissesUnderCripplingFear\x10\xf4\x01\x124\n" +
	"/kKillEaterEventType_Warlock_ThreeHeroFatalBonds\x10\xf5\x01\x123\n" +
	".kKillEaterEventType_Riki_TricksOfTheTradeKills\x10\xf6\x01\x125\n" +
	"0kKillEaterEventType_Earthshaker_AftershockHits10\x10\xf7\x01\x123\n" +
	".kKillEaterEventType_Earthshaker_5HeroEchoslams\x10\xf8\x01\x122\n" +
	"-kKillEaterEventType_Lina_LagunaBladeHeroKills\x10\xf9\x01\x122\n" +
	"-kKillEaterEventType_Lina_LightStrikeHeroStuns\x10\xfa\x01\x126\n" +
	"1kKillEaterEventType_Earthshaker_FissureMultiStuns\x10\xfb\x01\x12/\n" +
	"*kKillEaterEventType_Earthshaker_TotemKills\x10\xfc\x01\x123\n" +
	".kKillEaterEventType_Pangolier_SwashbuckleKills\x10\xfd\x01\x122\n" +
	"-kKillEaterEventType_Furion_EnemyHeroesTrapped\x10\xfe\x01\x124\n" +
	"/kKillEaterEventType_Pangolier_HeartpiercerKills\x10\xff\x01\x122\n" +
	"-kKillEaterEventType_Medusa_MultiHeroStoneGaze\x10\x80\x02\x12.\n" +
	")kKillEaterEventType_Medusa_SplitShotKills\x10\x81\x02\x122\n" +
	"-kKillEaterEventType_Mirana_MultiHeroStarstorm\x10\x82\x02\x128\n" +
	"3kKillEaterEventType_Mirana_KillsFromMoonlightShadow\x10\x83\x02\x120\n" +
	"+kKillEaterEventType_Magnus_MultiHeroSkewers\x10\x84\x02\x128\n" +
	"3kKillEaterEventType_Magnus_MultiHeroReversePolarity\x10\x85\x02\x129\n" +
	"4kKillEaterEventType_Magnus_HeroesSlowedWithShockwave\x10\x86\x02\x120\n" +
	"+kKillEaterEventType_NagaSiren_MultiHeroSong\x10\x87\x02\x125\n" +
	"0kKillEaterEventType_NagaSiren_AlliesHealedBySong\x10\x88\x02\x120\n" +
	"+kKillEaterEventType_LoneDruid_MultiHeroRoar\x10\x89\x02\x121\n" +
	",kKillEaterEventType_LoneDruid_BattleCryKills\x10\x8a\x02\x125\n" +
	"0kKillEaterEventType_WinterWyvern_ThreeHeroCurses\x10\x8b\x02\x12?\n" +
	":kKillEaterEventType_Antimage_SpellsBlockedWithCounterspell\x10\x8c\x02\x122\n" +
	"-kKillEaterEventType_Mars_EnemiesKilledInArena\x10\x8d\x02\x121\n" +
	",kKillEaterEventType_Mars_MultiHeroGodsRebuke\x10\x8e\x02\x12-\n" +
	"(kKillEaterEventType_Mars_GodsRebukeKills\x10\x8f\x02\x122\n" +
	"-kKillEaterEventType_Snapfire_LizardBlobsKills\x10\x90\x02\x124\n" +
	"/kKillEaterEventType_Snapfire_TwoHeroCookieStuns\x10\x91\x02\x12\x16\n" +
	"\x11Custom_KillStreak\x10\x92\x02\x12-\n" +
	"(kKillEaterEventType_Muerta_DeadShotKills\x10\x93\x02\x122\n" +
	"-kKillEaterEventType_Muerta_PierceTheVeilKills\x10\x94\x02\x121\n" +
	",kKillEaterEventType_Muerta_MultiHeroDeadShot\x10\x95\x02\x127\n" +
	"2kKillEaterEventType_Muerta_DeadShotsIntoTheCalling\x10\x96\x02\x127\n" +
	"2kKillEaterEventType_Ringmaster_LongRangeDaggerHits\x10\x97\x02\x122\n" +
	"-kKillEaterEventType_Ringmaster_MultiHeroWhips\x10\x98\x02\x127\n" +
	"2kKillEaterEventType_Ringmaster_MultiHeroMesmerizes\x10\x99\x02\x120\n" +
	"+kKillEaterEventType_Kez_ParryCounterAttacks\x10\x9a\x02\x12,\n" +
	"'kKillEaterEventType_Kez_RavensVeilKills\x10\x9b\x02\x12/\n" +
	"*kKillEaterEventType_Kez_RaptorDanceHealing\x10\x9c\x02\x122\n" +
	"-kKillEaterEventType_Kez_KillsDuringFalconRush\x10\x9d\x02\x121\n" +
	",kKillEaterEventType_Seasonal_PartyHatsStolen\x10\x9e\x02\x12,\n" +
	"'kKillEaterEventType_Seasonal_TallestHat\x10\x9f\x02*\xab\x01\n" +
	"\x0eELaneSelection\x12\x1d\n" +
	"\x19k_ELaneSelection_SAFELANE\x10\x00\x12\x1c\n" +
	"\x18k_ELaneSelection_OFFLANE\x10\x01\x12\x1c\n" +
	"\x18k_ELaneSelection_MIDLANE\x10\x02\x12\x1c\n" +
	"\x18k_ELaneSelection_SUPPORT\x10\x03\x12 \n" +
	"\x1ck_ELaneSelection_HARDSUPPORT\x10\x04*\xdb\x02\n" +
	"\x13ELaneSelectionFlags\x12\"\n" +
	"\x1ek_ELaneSelectionFlags_SAFELANE\x10\x01\x12!\n" +
	"\x1dk_ELaneSelectionFlags_OFFLANE\x10\x02\x12!\n" +
	"\x1dk_ELaneSelectionFlags_MIDLANE\x10\x04\x12!\n" +
	"\x1dk_ELaneSelectionFlags_SUPPORT\x10\b\x12%\n" +
	"!k_ELaneSelectionFlags_HARDSUPPORT\x10\x10\x12\"\n" +
	"\x1ek_ELaneSelectionFlagGroup_None\x10\x00\x12\"\n" +
	"\x1ek_ELaneSelectionFlagGroup_CORE\x10\a\x12%\n" +
	"!k_ELaneSelectionFlagGroup_SUPPORT\x10\x18\x12!\n" +
	"\x1dk_ELaneSelectionFlagGroup_ALL\x10\x1f*i\n" +
	"\x16EPartyMatchmakingFlags\x12!\n" +
	"\x1dk_EPartyMatchmakingFlags_None\x10\x00\x12,\n" +
	"(k_EPartyMatchmakingFlags_LargeRankSpread\x10\x01*\xdc\x02\n" +
	"\x14EHighPriorityMMState\x12\x1d\n" +
	"\x19k_EHighPriorityMM_Unknown\x10\x00\x12#\n" +
	"\x1fk_EHighPriorityMM_MissingMMData\x10\x01\x12%\n" +
	"!k_EHighPriorityMM_ResourceMissing\x10\x02\x12&\n" +
	"\"k_EHighPriorityMM_ManuallyDisabled\x10\x03\x12!\n" +
	"\x1dk_EHighPriorityMM_Min_Enabled\x10@\x12&\n" +
	"\"k_EHighPriorityMM_AllRolesSelected\x10A\x12#\n" +
	"\x1fk_EHighPriorityMM_UsingResource\x10B\x12\x1f\n" +
	"\x1bk_EHighPriorityMM_FiveStack\x10C\x12 \n" +
	"\x1ck_EHighPriorityMM_HighDemand\x10D*u\n" +
	"\x11EReadyCheckStatus\x12\x1f\n" +
	"\x1bk_EReadyCheckStatus_Unknown\x10\x00\x12 \n" +
	"\x1ck_EReadyCheckStatus_NotReady\x10\x01\x12\x1d\n" +
	"\x19k_EReadyCheckStatus_Ready\x10\x02*\xf6\x01\n" +
	"\x18EReadyCheckRequestResult\x12&\n" +
	"\"k_EReadyCheckRequestResult_Success\x10\x00\x120\n" +
	",k_EReadyCheckRequestResult_AlreadyInProgress\x10\x01\x12)\n" +
	"%k_EReadyCheckRequestResult_NotInParty\x10\x02\x12(\n" +
	"$k_EReadyCheckRequestResult_SendError\x10\x03\x12+\n" +
	"'k_EReadyCheckRequestResult_UnknownError\x10\x04*\xc1\x01\n" +
	"\x1bEMatchBehaviorScoreVariance\x12)\n" +
	"%k_EMatchBehaviorScoreVariance_Invalid\x10\x00\x12%\n" +
	"!k_EMatchBehaviorScoreVariance_Low\x10\x01\x12(\n" +
	"$k_EMatchBehaviorScoreVariance_Medium\x10\x02\x12&\n" +
	"\"k_EMatchBehaviorScoreVariance_High\x10\x03"

var (
	file_dota_gcmessages_common_match_management_proto_rawDescOnce sync.Once
	file_dota_gcmessages_common_match_management_proto_rawDescData []byte
)

func file_dota_gcmessages_common_match_management_proto_rawDescGZIP() []byte {
	file_dota_gcmessages_common_match_management_proto_rawDescOnce.Do(func() {
		file_dota_gcmessages_common_match_management_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dota_gcmessages_common_match_management_proto_rawDesc), len(file_dota_gcmessages_common_match_management_proto_rawDesc)))
	})
	return file_dota_gcmessages_common_match_management_proto_rawDescData
}

var file_dota_gcmessages_common_match_management_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_dota_gcmessages_common_match_management_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_dota_gcmessages_common_match_management_proto_goTypes = []any{
	(ELaneSelection)(0),                                // 0: protocol.ELaneSelection
	(ELaneSelectionFlags)(0),                           // 1: protocol.ELaneSelectionFlags
	(EPartyMatchmakingFlags)(0),                        // 2: protocol.EPartyMatchmakingFlags
	(EHighPriorityMMState)(0),                          // 3: protocol.EHighPriorityMMState
	(EReadyCheckStatus)(0),                             // 4: protocol.EReadyCheckStatus
	(EReadyCheckRequestResult)(0),                      // 5: protocol.EReadyCheckRequestResult
	(EMatchBehaviorScoreVariance)(0),                   // 6: protocol.EMatchBehaviorScoreVariance
	(CSODOTAParty_State)(0),                            // 7: protocol.CSODOTAParty.State
	(CMvpData_MvpDatum_MvpAccolade_MvpAccoladeType)(0), // 8: protocol.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType
	(*CSODOTAPartyMember)(nil),                         // 9: protocol.CSODOTAPartyMember
	(*CSODOTAParty)(nil),                               // 10: protocol.CSODOTAParty
	(*CSODOTAPartyInvite)(nil),                         // 11: protocol.CSODOTAPartyInvite
	(*CMsgLeaverState)(nil),                            // 12: protocol.CMsgLeaverState
	(*CMsgReadyCheckStatus)(nil),                       // 13: protocol.CMsgReadyCheckStatus
	(*CMsgPartyReadyCheckRequest)(nil),                 // 14: protocol.CMsgPartyReadyCheckRequest
	(*CMsgPartyReadyCheckResponse)(nil),                // 15: protocol.CMsgPartyReadyCheckResponse
	(*CMsgPartyReadyCheckAcknowledge)(nil),             // 16: protocol.CMsgPartyReadyCheckAcknowledge
	(*CMsgLobbyEventGameDetails)(nil),                  // 17: protocol.CMsgLobbyEventGameDetails
	(*CMsgMatchMatchmakingStats)(nil),                  // 18: protocol.CMsgMatchMatchmakingStats
	(*CMvpData)(nil),                                   // 19: protocol.CMvpData
	(*CSODOTAPartyInvite_PartyMember)(nil),             // 20: protocol.CSODOTAPartyInvite.PartyMember
	(*CMsgReadyCheckStatus_ReadyMember)(nil),           // 21: protocol.CMsgReadyCheckStatus.ReadyMember
	(*CMvpData_MvpDatum)(nil),                          // 22: protocol.CMvpData.MvpDatum
	(*CMvpData_MvpDatum_MvpAccolade)(nil),              // 23: protocol.CMvpData.MvpDatum.MvpAccolade
	(MatchType)(0),                                     // 24: protocol.MatchType
	(ETourneyQueueDeadlineState)(0),                    // 25: protocol.ETourneyQueueDeadlineState
	(DOTA_GameState)(0),                                // 26: protocol.DOTA_GameState
}
var file_dota_gcmessages_common_match_management_proto_depIdxs = []int32{
	7,  // 0: protocol.CSODOTAParty.state:type_name -> protocol.CSODOTAParty.State
	24, // 1: protocol.CSODOTAParty.match_type:type_name -> protocol.MatchType
	9,  // 2: protocol.CSODOTAParty.members:type_name -> protocol.CSODOTAPartyMember
	11, // 3: protocol.CSODOTAParty.sent_invites:type_name -> protocol.CSODOTAPartyInvite
	11, // 4: protocol.CSODOTAParty.recv_invites:type_name -> protocol.CSODOTAPartyInvite
	25, // 5: protocol.CSODOTAParty.tourney_queue_deadline_state:type_name -> protocol.ETourneyQueueDeadlineState
	13, // 6: protocol.CSODOTAParty.ready_check:type_name -> protocol.CMsgReadyCheckStatus
	3,  // 7: protocol.CSODOTAParty.high_priority_state:type_name -> protocol.EHighPriorityMMState
	20, // 8: protocol.CSODOTAPartyInvite.members:type_name -> protocol.CSODOTAPartyInvite.PartyMember
	26, // 9: protocol.CMsgLeaverState.game_state:type_name -> protocol.DOTA_GameState
	21, // 10: protocol.CMsgReadyCheckStatus.ready_members:type_name -> protocol.CMsgReadyCheckStatus.ReadyMember
	5,  // 11: protocol.CMsgPartyReadyCheckResponse.result:type_name -> protocol.EReadyCheckRequestResult
	4,  // 12: protocol.CMsgPartyReadyCheckAcknowledge.ready_status:type_name -> protocol.EReadyCheckStatus
	6,  // 13: protocol.CMsgMatchMatchmakingStats.behavior_score_variance:type_name -> protocol.EMatchBehaviorScoreVariance
	22, // 14: protocol.CMvpData.mvps:type_name -> protocol.CMvpData.MvpDatum
	22, // 15: protocol.CMvpData.event_mvps:type_name -> protocol.CMvpData.MvpDatum
	4,  // 16: protocol.CMsgReadyCheckStatus.ReadyMember.ready_status:type_name -> protocol.EReadyCheckStatus
	23, // 17: protocol.CMvpData.MvpDatum.accolades:type_name -> protocol.CMvpData.MvpDatum.MvpAccolade
	8,  // 18: protocol.CMvpData.MvpDatum.MvpAccolade.type:type_name -> protocol.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_dota_gcmessages_common_match_management_proto_init() }
func file_dota_gcmessages_common_match_management_proto_init() {
	if File_dota_gcmessages_common_match_management_proto != nil {
		return
	}
	file_steammessages_proto_init()
	file_gcsdk_gcmessages_proto_init()
	file_dota_shared_enums_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dota_gcmessages_common_match_management_proto_rawDesc), len(file_dota_gcmessages_common_match_management_proto_rawDesc)),
			NumEnums:      9,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dota_gcmessages_common_match_management_proto_goTypes,
		DependencyIndexes: file_dota_gcmessages_common_match_management_proto_depIdxs,
		EnumInfos:         file_dota_gcmessages_common_match_management_proto_enumTypes,
		MessageInfos:      file_dota_gcmessages_common_match_management_proto_msgTypes,
	}.Build()
	File_dota_gcmessages_common_match_management_proto = out.File
	file_dota_gcmessages_common_match_management_proto_goTypes = nil
	file_dota_gcmessages_common_match_management_proto_depIdxs = nil
}
