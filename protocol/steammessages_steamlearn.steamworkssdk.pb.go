// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: steammessages_steamlearn.steamworkssdk.proto

package protocol

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ESteamLearnDataType int32

const (
	ESteamLearnDataType_STEAMLEARN_DATATYPE_INVALID ESteamLearnDataType = 0
	ESteamLearnDataType_STEAMLEARN_DATATYPE_INT32   ESteamLearnDataType = 1
	ESteamLearnDataType_STEAMLEARN_DATATYPE_FLOAT32 ESteamLearnDataType = 2
	ESteamLearnDataType_STEAMLEARN_DATATYPE_BOOL    ESteamLearnDataType = 3
	ESteamLearnDataType_STEAMLEARN_DATATYPE_STRING  ESteamLearnDataType = 4
	ESteamLearnDataType_STEAMLEARN_DATATYPE_OBJECT  ESteamLearnDataType = 5
)

// Enum value maps for ESteamLearnDataType.
var (
	ESteamLearnDataType_name = map[int32]string{
		0: "STEAMLEARN_DATATYPE_INVALID",
		1: "STEAMLEARN_DATATYPE_INT32",
		2: "STEAMLEARN_DATATYPE_FLOAT32",
		3: "STEAMLEARN_DATATYPE_BOOL",
		4: "STEAMLEARN_DATATYPE_STRING",
		5: "STEAMLEARN_DATATYPE_OBJECT",
	}
	ESteamLearnDataType_value = map[string]int32{
		"STEAMLEARN_DATATYPE_INVALID": 0,
		"STEAMLEARN_DATATYPE_INT32":   1,
		"STEAMLEARN_DATATYPE_FLOAT32": 2,
		"STEAMLEARN_DATATYPE_BOOL":    3,
		"STEAMLEARN_DATATYPE_STRING":  4,
		"STEAMLEARN_DATATYPE_OBJECT":  5,
	}
)

func (x ESteamLearnDataType) Enum() *ESteamLearnDataType {
	p := new(ESteamLearnDataType)
	*p = x
	return p
}

func (x ESteamLearnDataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ESteamLearnDataType) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_steamlearn_steamworkssdk_proto_enumTypes[0].Descriptor()
}

func (ESteamLearnDataType) Type() protoreflect.EnumType {
	return &file_steammessages_steamlearn_steamworkssdk_proto_enumTypes[0]
}

func (x ESteamLearnDataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ESteamLearnDataType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ESteamLearnDataType(num)
	return nil
}

// Deprecated: Use ESteamLearnDataType.Descriptor instead.
func (ESteamLearnDataType) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{0}
}

type ESteammLearnRegisterDataSourceResult int32

const (
	ESteammLearnRegisterDataSourceResult_STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR                   ESteammLearnRegisterDataSourceResult = 0
	ESteammLearnRegisterDataSourceResult_STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_CREATED         ESteammLearnRegisterDataSourceResult = 1
	ESteammLearnRegisterDataSourceResult_STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_FOUND           ESteammLearnRegisterDataSourceResult = 2
	ESteammLearnRegisterDataSourceResult_STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_GENERIC           ESteammLearnRegisterDataSourceResult = 3
	ESteammLearnRegisterDataSourceResult_STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_NAME      ESteammLearnRegisterDataSourceResult = 4
	ESteammLearnRegisterDataSourceResult_STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_VERSION   ESteammLearnRegisterDataSourceResult = 5
	ESteammLearnRegisterDataSourceResult_STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_CHANGED      ESteammLearnRegisterDataSourceResult = 6
	ESteammLearnRegisterDataSourceResult_STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_INVALID      ESteammLearnRegisterDataSourceResult = 7
	ESteammLearnRegisterDataSourceResult_STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_FORBIDDEN         ESteammLearnRegisterDataSourceResult = 8
	ESteammLearnRegisterDataSourceResult_STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_TIMESTAMP ESteammLearnRegisterDataSourceResult = 9
	ESteammLearnRegisterDataSourceResult_STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_DISABLED                ESteammLearnRegisterDataSourceResult = 10
)

// Enum value maps for ESteammLearnRegisterDataSourceResult.
var (
	ESteammLearnRegisterDataSourceResult_name = map[int32]string{
		0:  "STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR",
		1:  "STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_CREATED",
		2:  "STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_FOUND",
		3:  "STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_GENERIC",
		4:  "STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_NAME",
		5:  "STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_VERSION",
		6:  "STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_CHANGED",
		7:  "STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_INVALID",
		8:  "STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_FORBIDDEN",
		9:  "STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_TIMESTAMP",
		10: "STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_DISABLED",
	}
	ESteammLearnRegisterDataSourceResult_value = map[string]int32{
		"STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR":                   0,
		"STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_CREATED":         1,
		"STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_FOUND":           2,
		"STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_GENERIC":           3,
		"STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_NAME":      4,
		"STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_VERSION":   5,
		"STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_CHANGED":      6,
		"STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_INVALID":      7,
		"STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_FORBIDDEN":         8,
		"STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_TIMESTAMP": 9,
		"STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_DISABLED":                10,
	}
)

func (x ESteammLearnRegisterDataSourceResult) Enum() *ESteammLearnRegisterDataSourceResult {
	p := new(ESteammLearnRegisterDataSourceResult)
	*p = x
	return p
}

func (x ESteammLearnRegisterDataSourceResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ESteammLearnRegisterDataSourceResult) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_steamlearn_steamworkssdk_proto_enumTypes[1].Descriptor()
}

func (ESteammLearnRegisterDataSourceResult) Type() protoreflect.EnumType {
	return &file_steammessages_steamlearn_steamworkssdk_proto_enumTypes[1]
}

func (x ESteammLearnRegisterDataSourceResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ESteammLearnRegisterDataSourceResult) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ESteammLearnRegisterDataSourceResult(num)
	return nil
}

// Deprecated: Use ESteammLearnRegisterDataSourceResult.Descriptor instead.
func (ESteammLearnRegisterDataSourceResult) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{1}
}

type ESteamLearnCacheDataResult int32

const (
	ESteamLearnCacheDataResult_STEAMLEARN_CACHE_DATA_ERROR                      ESteamLearnCacheDataResult = 0
	ESteamLearnCacheDataResult_STEAMLEARN_CACHE_DATA_SUCCESS                    ESteamLearnCacheDataResult = 1
	ESteamLearnCacheDataResult_STEAMLEARN_CACHE_DATA_ERROR_UNKNOWN_DATA_SOURCE  ESteamLearnCacheDataResult = 2
	ESteamLearnCacheDataResult_STEAMLEARN_CACHE_DATA_ERROR_UNCACHED_DATA_SOURCE ESteamLearnCacheDataResult = 3
	ESteamLearnCacheDataResult_STEAMLEARN_CACHE_DATA_ERROR_INVALID_KEYS         ESteamLearnCacheDataResult = 4
	ESteamLearnCacheDataResult_STEAMLEARN_CACHE_DATA_ERROR_FORBIDDEN            ESteamLearnCacheDataResult = 5
	ESteamLearnCacheDataResult_STEAMLEARN_CACHE_DATA_ERROR_INVALID_TIMESTAMP    ESteamLearnCacheDataResult = 6
	ESteamLearnCacheDataResult_STEAMLEARN_CACHE_DATA_DISABLED                   ESteamLearnCacheDataResult = 7
)

// Enum value maps for ESteamLearnCacheDataResult.
var (
	ESteamLearnCacheDataResult_name = map[int32]string{
		0: "STEAMLEARN_CACHE_DATA_ERROR",
		1: "STEAMLEARN_CACHE_DATA_SUCCESS",
		2: "STEAMLEARN_CACHE_DATA_ERROR_UNKNOWN_DATA_SOURCE",
		3: "STEAMLEARN_CACHE_DATA_ERROR_UNCACHED_DATA_SOURCE",
		4: "STEAMLEARN_CACHE_DATA_ERROR_INVALID_KEYS",
		5: "STEAMLEARN_CACHE_DATA_ERROR_FORBIDDEN",
		6: "STEAMLEARN_CACHE_DATA_ERROR_INVALID_TIMESTAMP",
		7: "STEAMLEARN_CACHE_DATA_DISABLED",
	}
	ESteamLearnCacheDataResult_value = map[string]int32{
		"STEAMLEARN_CACHE_DATA_ERROR":                      0,
		"STEAMLEARN_CACHE_DATA_SUCCESS":                    1,
		"STEAMLEARN_CACHE_DATA_ERROR_UNKNOWN_DATA_SOURCE":  2,
		"STEAMLEARN_CACHE_DATA_ERROR_UNCACHED_DATA_SOURCE": 3,
		"STEAMLEARN_CACHE_DATA_ERROR_INVALID_KEYS":         4,
		"STEAMLEARN_CACHE_DATA_ERROR_FORBIDDEN":            5,
		"STEAMLEARN_CACHE_DATA_ERROR_INVALID_TIMESTAMP":    6,
		"STEAMLEARN_CACHE_DATA_DISABLED":                   7,
	}
)

func (x ESteamLearnCacheDataResult) Enum() *ESteamLearnCacheDataResult {
	p := new(ESteamLearnCacheDataResult)
	*p = x
	return p
}

func (x ESteamLearnCacheDataResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ESteamLearnCacheDataResult) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_steamlearn_steamworkssdk_proto_enumTypes[2].Descriptor()
}

func (ESteamLearnCacheDataResult) Type() protoreflect.EnumType {
	return &file_steammessages_steamlearn_steamworkssdk_proto_enumTypes[2]
}

func (x ESteamLearnCacheDataResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ESteamLearnCacheDataResult) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ESteamLearnCacheDataResult(num)
	return nil
}

// Deprecated: Use ESteamLearnCacheDataResult.Descriptor instead.
func (ESteamLearnCacheDataResult) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{2}
}

type ESteamLearnSnapshotProjectResult int32

const (
	ESteamLearnSnapshotProjectResult_STEAMLEARN_SNAPSHOT_PROJECT_ERROR                            ESteamLearnSnapshotProjectResult = 0
	ESteamLearnSnapshotProjectResult_STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_STORED                   ESteamLearnSnapshotProjectResult = 1
	ESteamLearnSnapshotProjectResult_STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_QUEUED                   ESteamLearnSnapshotProjectResult = 2
	ESteamLearnSnapshotProjectResult_STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PROJECT_ID         ESteamLearnSnapshotProjectResult = 3
	ESteamLearnSnapshotProjectResult_STEAMLEARN_SNAPSHOT_PROJECT_ERROR_UNKNOWN_DATA_SOURCE        ESteamLearnSnapshotProjectResult = 4
	ESteamLearnSnapshotProjectResult_STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_DATA_SOURCE_KEY    ESteamLearnSnapshotProjectResult = 5
	ESteamLearnSnapshotProjectResult_STEAMLEARN_SNAPSHOT_PROJECT_ERROR_MISSING_CACHE_DURATION     ESteamLearnSnapshotProjectResult = 6
	ESteamLearnSnapshotProjectResult_STEAMLEARN_SNAPSHOT_PROJECT_ERROR_NO_PUBLISHED_CONFIG        ESteamLearnSnapshotProjectResult = 7
	ESteamLearnSnapshotProjectResult_STEAMLEARN_SNAPSHOT_PROJECT_ERROR_FORBIDDEN                  ESteamLearnSnapshotProjectResult = 8
	ESteamLearnSnapshotProjectResult_STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_TIMESTAMP          ESteamLearnSnapshotProjectResult = 9
	ESteamLearnSnapshotProjectResult_STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INTERNAL_DATA_SOURCE_ERROR ESteamLearnSnapshotProjectResult = 10
	ESteamLearnSnapshotProjectResult_STEAMLEARN_SNAPSHOT_PROJECT_DISABLED                         ESteamLearnSnapshotProjectResult = 11
	ESteamLearnSnapshotProjectResult_STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PUBLISHED_VERSION  ESteamLearnSnapshotProjectResult = 12
)

// Enum value maps for ESteamLearnSnapshotProjectResult.
var (
	ESteamLearnSnapshotProjectResult_name = map[int32]string{
		0:  "STEAMLEARN_SNAPSHOT_PROJECT_ERROR",
		1:  "STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_STORED",
		2:  "STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_QUEUED",
		3:  "STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PROJECT_ID",
		4:  "STEAMLEARN_SNAPSHOT_PROJECT_ERROR_UNKNOWN_DATA_SOURCE",
		5:  "STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_DATA_SOURCE_KEY",
		6:  "STEAMLEARN_SNAPSHOT_PROJECT_ERROR_MISSING_CACHE_DURATION",
		7:  "STEAMLEARN_SNAPSHOT_PROJECT_ERROR_NO_PUBLISHED_CONFIG",
		8:  "STEAMLEARN_SNAPSHOT_PROJECT_ERROR_FORBIDDEN",
		9:  "STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_TIMESTAMP",
		10: "STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INTERNAL_DATA_SOURCE_ERROR",
		11: "STEAMLEARN_SNAPSHOT_PROJECT_DISABLED",
		12: "STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PUBLISHED_VERSION",
	}
	ESteamLearnSnapshotProjectResult_value = map[string]int32{
		"STEAMLEARN_SNAPSHOT_PROJECT_ERROR":                            0,
		"STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_STORED":                   1,
		"STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_QUEUED":                   2,
		"STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PROJECT_ID":         3,
		"STEAMLEARN_SNAPSHOT_PROJECT_ERROR_UNKNOWN_DATA_SOURCE":        4,
		"STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_DATA_SOURCE_KEY":    5,
		"STEAMLEARN_SNAPSHOT_PROJECT_ERROR_MISSING_CACHE_DURATION":     6,
		"STEAMLEARN_SNAPSHOT_PROJECT_ERROR_NO_PUBLISHED_CONFIG":        7,
		"STEAMLEARN_SNAPSHOT_PROJECT_ERROR_FORBIDDEN":                  8,
		"STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_TIMESTAMP":          9,
		"STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INTERNAL_DATA_SOURCE_ERROR": 10,
		"STEAMLEARN_SNAPSHOT_PROJECT_DISABLED":                         11,
		"STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PUBLISHED_VERSION":  12,
	}
)

func (x ESteamLearnSnapshotProjectResult) Enum() *ESteamLearnSnapshotProjectResult {
	p := new(ESteamLearnSnapshotProjectResult)
	*p = x
	return p
}

func (x ESteamLearnSnapshotProjectResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ESteamLearnSnapshotProjectResult) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_steamlearn_steamworkssdk_proto_enumTypes[3].Descriptor()
}

func (ESteamLearnSnapshotProjectResult) Type() protoreflect.EnumType {
	return &file_steammessages_steamlearn_steamworkssdk_proto_enumTypes[3]
}

func (x ESteamLearnSnapshotProjectResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ESteamLearnSnapshotProjectResult) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ESteamLearnSnapshotProjectResult(num)
	return nil
}

// Deprecated: Use ESteamLearnSnapshotProjectResult.Descriptor instead.
func (ESteamLearnSnapshotProjectResult) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{3}
}

type ESteamLearnGetAccessTokensResult int32

const (
	ESteamLearnGetAccessTokensResult_STEAMLEARN_GET_ACCESS_TOKENS_ERROR   ESteamLearnGetAccessTokensResult = 0
	ESteamLearnGetAccessTokensResult_STEAMLEARN_GET_ACCESS_TOKENS_SUCCESS ESteamLearnGetAccessTokensResult = 1
)

// Enum value maps for ESteamLearnGetAccessTokensResult.
var (
	ESteamLearnGetAccessTokensResult_name = map[int32]string{
		0: "STEAMLEARN_GET_ACCESS_TOKENS_ERROR",
		1: "STEAMLEARN_GET_ACCESS_TOKENS_SUCCESS",
	}
	ESteamLearnGetAccessTokensResult_value = map[string]int32{
		"STEAMLEARN_GET_ACCESS_TOKENS_ERROR":   0,
		"STEAMLEARN_GET_ACCESS_TOKENS_SUCCESS": 1,
	}
)

func (x ESteamLearnGetAccessTokensResult) Enum() *ESteamLearnGetAccessTokensResult {
	p := new(ESteamLearnGetAccessTokensResult)
	*p = x
	return p
}

func (x ESteamLearnGetAccessTokensResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ESteamLearnGetAccessTokensResult) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_steamlearn_steamworkssdk_proto_enumTypes[4].Descriptor()
}

func (ESteamLearnGetAccessTokensResult) Type() protoreflect.EnumType {
	return &file_steammessages_steamlearn_steamworkssdk_proto_enumTypes[4]
}

func (x ESteamLearnGetAccessTokensResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ESteamLearnGetAccessTokensResult) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ESteamLearnGetAccessTokensResult(num)
	return nil
}

// Deprecated: Use ESteamLearnGetAccessTokensResult.Descriptor instead.
func (ESteamLearnGetAccessTokensResult) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{4}
}

type ESteamLearnInferenceResult int32

const (
	ESteamLearnInferenceResult_STEAMLEARN_INFERENCE_ERROR                            ESteamLearnInferenceResult = 0
	ESteamLearnInferenceResult_STEAMLEARN_INFERENCE_SUCCESS                          ESteamLearnInferenceResult = 1
	ESteamLearnInferenceResult_STEAMLEARN_INFERENCE_ERROR_INVALID_PROJECT_ID         ESteamLearnInferenceResult = 2
	ESteamLearnInferenceResult_STEAMLEARN_INFERENCE_ERROR_MISSING_CACHED_SCHEMA_DATA ESteamLearnInferenceResult = 3
	ESteamLearnInferenceResult_STEAMLEARN_INFERENCE_ERROR_NO_PUBLISHED_CONFIG        ESteamLearnInferenceResult = 4
	ESteamLearnInferenceResult_STEAMLEARN_INFERENCE_ERROR_FORBIDDEN                  ESteamLearnInferenceResult = 5
	ESteamLearnInferenceResult_STEAMLEARN_INFERENCE_ERROR_INVALID_TIMESTAMP          ESteamLearnInferenceResult = 6
	ESteamLearnInferenceResult_STEAMLEARN_INFERENCE_ERROR_INVALID_PUBLISHED_VERSION  ESteamLearnInferenceResult = 7
	ESteamLearnInferenceResult_STEAMLEARN_INFERENCE_ERROR_NO_FETCH_ID_FOUND          ESteamLearnInferenceResult = 8
	ESteamLearnInferenceResult_STEAMLEARN_INFERENCE_ERROR_TOO_BUSY                   ESteamLearnInferenceResult = 9
	ESteamLearnInferenceResult_STEAMLEARN_INFERENCE_ERROR_UNSUPPLIED_DATA_FAIL       ESteamLearnInferenceResult = 10
	ESteamLearnInferenceResult_STEAMLEARN_INFERENCE_ERROR_UNSUPPLIED_DATA_NO_KEYS    ESteamLearnInferenceResult = 11
	ESteamLearnInferenceResult_STEAMLEARN_INFERENCE_DISABLED                         ESteamLearnInferenceResult = 12
	ESteamLearnInferenceResult_STEAMLEARN_INFERENCE_ERROR_NO_OUTPUT                  ESteamLearnInferenceResult = 13
	ESteamLearnInferenceResult_STEAMLEARN_INFERENCE_ERROR_INVALID_NAMED_INFERENCE    ESteamLearnInferenceResult = 14
)

// Enum value maps for ESteamLearnInferenceResult.
var (
	ESteamLearnInferenceResult_name = map[int32]string{
		0:  "STEAMLEARN_INFERENCE_ERROR",
		1:  "STEAMLEARN_INFERENCE_SUCCESS",
		2:  "STEAMLEARN_INFERENCE_ERROR_INVALID_PROJECT_ID",
		3:  "STEAMLEARN_INFERENCE_ERROR_MISSING_CACHED_SCHEMA_DATA",
		4:  "STEAMLEARN_INFERENCE_ERROR_NO_PUBLISHED_CONFIG",
		5:  "STEAMLEARN_INFERENCE_ERROR_FORBIDDEN",
		6:  "STEAMLEARN_INFERENCE_ERROR_INVALID_TIMESTAMP",
		7:  "STEAMLEARN_INFERENCE_ERROR_INVALID_PUBLISHED_VERSION",
		8:  "STEAMLEARN_INFERENCE_ERROR_NO_FETCH_ID_FOUND",
		9:  "STEAMLEARN_INFERENCE_ERROR_TOO_BUSY",
		10: "STEAMLEARN_INFERENCE_ERROR_UNSUPPLIED_DATA_FAIL",
		11: "STEAMLEARN_INFERENCE_ERROR_UNSUPPLIED_DATA_NO_KEYS",
		12: "STEAMLEARN_INFERENCE_DISABLED",
		13: "STEAMLEARN_INFERENCE_ERROR_NO_OUTPUT",
		14: "STEAMLEARN_INFERENCE_ERROR_INVALID_NAMED_INFERENCE",
	}
	ESteamLearnInferenceResult_value = map[string]int32{
		"STEAMLEARN_INFERENCE_ERROR":                            0,
		"STEAMLEARN_INFERENCE_SUCCESS":                          1,
		"STEAMLEARN_INFERENCE_ERROR_INVALID_PROJECT_ID":         2,
		"STEAMLEARN_INFERENCE_ERROR_MISSING_CACHED_SCHEMA_DATA": 3,
		"STEAMLEARN_INFERENCE_ERROR_NO_PUBLISHED_CONFIG":        4,
		"STEAMLEARN_INFERENCE_ERROR_FORBIDDEN":                  5,
		"STEAMLEARN_INFERENCE_ERROR_INVALID_TIMESTAMP":          6,
		"STEAMLEARN_INFERENCE_ERROR_INVALID_PUBLISHED_VERSION":  7,
		"STEAMLEARN_INFERENCE_ERROR_NO_FETCH_ID_FOUND":          8,
		"STEAMLEARN_INFERENCE_ERROR_TOO_BUSY":                   9,
		"STEAMLEARN_INFERENCE_ERROR_UNSUPPLIED_DATA_FAIL":       10,
		"STEAMLEARN_INFERENCE_ERROR_UNSUPPLIED_DATA_NO_KEYS":    11,
		"STEAMLEARN_INFERENCE_DISABLED":                         12,
		"STEAMLEARN_INFERENCE_ERROR_NO_OUTPUT":                  13,
		"STEAMLEARN_INFERENCE_ERROR_INVALID_NAMED_INFERENCE":    14,
	}
)

func (x ESteamLearnInferenceResult) Enum() *ESteamLearnInferenceResult {
	p := new(ESteamLearnInferenceResult)
	*p = x
	return p
}

func (x ESteamLearnInferenceResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ESteamLearnInferenceResult) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_steamlearn_steamworkssdk_proto_enumTypes[5].Descriptor()
}

func (ESteamLearnInferenceResult) Type() protoreflect.EnumType {
	return &file_steammessages_steamlearn_steamworkssdk_proto_enumTypes[5]
}

func (x ESteamLearnInferenceResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ESteamLearnInferenceResult) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ESteamLearnInferenceResult(num)
	return nil
}

// Deprecated: Use ESteamLearnInferenceResult.Descriptor instead.
func (ESteamLearnInferenceResult) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{5}
}

type ESteamLearnInferenceMetadataResult int32

const (
	ESteamLearnInferenceMetadataResult_STEAMLEARN_INFERENCE_METADATA_ERROR                           ESteamLearnInferenceMetadataResult = 0
	ESteamLearnInferenceMetadataResult_STEAMLEARN_INFERENCE_METADATA_SUCCESS                         ESteamLearnInferenceMetadataResult = 1
	ESteamLearnInferenceMetadataResult_STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PROJECT_ID        ESteamLearnInferenceMetadataResult = 2
	ESteamLearnInferenceMetadataResult_STEAMLEARN_INFERENCE_METADATA_ERROR_NO_PUBLISHED_CONFIG       ESteamLearnInferenceMetadataResult = 3
	ESteamLearnInferenceMetadataResult_STEAMLEARN_INFERENCE_METADATA_ERROR_FORBIDDEN                 ESteamLearnInferenceMetadataResult = 4
	ESteamLearnInferenceMetadataResult_STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_TIMESTAMP         ESteamLearnInferenceMetadataResult = 5
	ESteamLearnInferenceMetadataResult_STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PUBLISHED_VERSION ESteamLearnInferenceMetadataResult = 6
	ESteamLearnInferenceMetadataResult_STEAMLEARN_INFERENCE_METADATA_ERROR_NO_FETCH_ID_FOUND         ESteamLearnInferenceMetadataResult = 7
)

// Enum value maps for ESteamLearnInferenceMetadataResult.
var (
	ESteamLearnInferenceMetadataResult_name = map[int32]string{
		0: "STEAMLEARN_INFERENCE_METADATA_ERROR",
		1: "STEAMLEARN_INFERENCE_METADATA_SUCCESS",
		2: "STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PROJECT_ID",
		3: "STEAMLEARN_INFERENCE_METADATA_ERROR_NO_PUBLISHED_CONFIG",
		4: "STEAMLEARN_INFERENCE_METADATA_ERROR_FORBIDDEN",
		5: "STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_TIMESTAMP",
		6: "STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PUBLISHED_VERSION",
		7: "STEAMLEARN_INFERENCE_METADATA_ERROR_NO_FETCH_ID_FOUND",
	}
	ESteamLearnInferenceMetadataResult_value = map[string]int32{
		"STEAMLEARN_INFERENCE_METADATA_ERROR":                           0,
		"STEAMLEARN_INFERENCE_METADATA_SUCCESS":                         1,
		"STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PROJECT_ID":        2,
		"STEAMLEARN_INFERENCE_METADATA_ERROR_NO_PUBLISHED_CONFIG":       3,
		"STEAMLEARN_INFERENCE_METADATA_ERROR_FORBIDDEN":                 4,
		"STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_TIMESTAMP":         5,
		"STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PUBLISHED_VERSION": 6,
		"STEAMLEARN_INFERENCE_METADATA_ERROR_NO_FETCH_ID_FOUND":         7,
	}
)

func (x ESteamLearnInferenceMetadataResult) Enum() *ESteamLearnInferenceMetadataResult {
	p := new(ESteamLearnInferenceMetadataResult)
	*p = x
	return p
}

func (x ESteamLearnInferenceMetadataResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ESteamLearnInferenceMetadataResult) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_steamlearn_steamworkssdk_proto_enumTypes[6].Descriptor()
}

func (ESteamLearnInferenceMetadataResult) Type() protoreflect.EnumType {
	return &file_steammessages_steamlearn_steamworkssdk_proto_enumTypes[6]
}

func (x ESteamLearnInferenceMetadataResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ESteamLearnInferenceMetadataResult) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ESteamLearnInferenceMetadataResult(num)
	return nil
}

// Deprecated: Use ESteamLearnInferenceMetadataResult.Descriptor instead.
func (ESteamLearnInferenceMetadataResult) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{6}
}

type CMsgSteamLearnDataSourceDescObject struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Elements      []*CMsgSteamLearnDataSourceDescElement `protobuf:"bytes,1,rep,name=elements" json:"elements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearnDataSourceDescObject) Reset() {
	*x = CMsgSteamLearnDataSourceDescObject{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearnDataSourceDescObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearnDataSourceDescObject) ProtoMessage() {}

func (x *CMsgSteamLearnDataSourceDescObject) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearnDataSourceDescObject.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearnDataSourceDescObject) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgSteamLearnDataSourceDescObject) GetElements() []*CMsgSteamLearnDataSourceDescElement {
	if x != nil {
		return x.Elements
	}
	return nil
}

type CMsgSteamLearnDataSourceDescElement struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Name          *string                             `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	DataType      *ESteamLearnDataType                `protobuf:"varint,2,opt,name=data_type,json=dataType,enum=protocol.ESteamLearnDataType,def=0" json:"data_type,omitempty"`
	Object        *CMsgSteamLearnDataSourceDescObject `protobuf:"bytes,3,opt,name=object" json:"object,omitempty"`
	Count         *uint32                             `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgSteamLearnDataSourceDescElement fields.
const (
	Default_CMsgSteamLearnDataSourceDescElement_DataType = ESteamLearnDataType_STEAMLEARN_DATATYPE_INVALID
)

func (x *CMsgSteamLearnDataSourceDescElement) Reset() {
	*x = CMsgSteamLearnDataSourceDescElement{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearnDataSourceDescElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearnDataSourceDescElement) ProtoMessage() {}

func (x *CMsgSteamLearnDataSourceDescElement) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearnDataSourceDescElement.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearnDataSourceDescElement) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgSteamLearnDataSourceDescElement) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgSteamLearnDataSourceDescElement) GetDataType() ESteamLearnDataType {
	if x != nil && x.DataType != nil {
		return *x.DataType
	}
	return Default_CMsgSteamLearnDataSourceDescElement_DataType
}

func (x *CMsgSteamLearnDataSourceDescElement) GetObject() *CMsgSteamLearnDataSourceDescObject {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *CMsgSteamLearnDataSourceDescElement) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type CMsgSteamLearnDataSource struct {
	state                protoimpl.MessageState              `protogen:"open.v1"`
	Id                   *uint32                             `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name                 *string                             `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Version              *uint32                             `protobuf:"varint,3,opt,name=version" json:"version,omitempty"`
	SourceDescription    *string                             `protobuf:"bytes,4,opt,name=source_description,json=sourceDescription" json:"source_description,omitempty"`
	Structure            *CMsgSteamLearnDataSourceDescObject `protobuf:"bytes,5,opt,name=structure" json:"structure,omitempty"`
	StructureCrc         *uint32                             `protobuf:"varint,6,opt,name=structure_crc,json=structureCrc" json:"structure_crc,omitempty"`
	CacheDurationSeconds *uint32                             `protobuf:"varint,7,opt,name=cache_duration_seconds,json=cacheDurationSeconds" json:"cache_duration_seconds,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CMsgSteamLearnDataSource) Reset() {
	*x = CMsgSteamLearnDataSource{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearnDataSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearnDataSource) ProtoMessage() {}

func (x *CMsgSteamLearnDataSource) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearnDataSource.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearnDataSource) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgSteamLearnDataSource) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *CMsgSteamLearnDataSource) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgSteamLearnDataSource) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSteamLearnDataSource) GetSourceDescription() string {
	if x != nil && x.SourceDescription != nil {
		return *x.SourceDescription
	}
	return ""
}

func (x *CMsgSteamLearnDataSource) GetStructure() *CMsgSteamLearnDataSourceDescObject {
	if x != nil {
		return x.Structure
	}
	return nil
}

func (x *CMsgSteamLearnDataSource) GetStructureCrc() uint32 {
	if x != nil && x.StructureCrc != nil {
		return *x.StructureCrc
	}
	return 0
}

func (x *CMsgSteamLearnDataSource) GetCacheDurationSeconds() uint32 {
	if x != nil && x.CacheDurationSeconds != nil {
		return *x.CacheDurationSeconds
	}
	return 0
}

type CMsgSteamLearnDataObject struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Elements      []*CMsgSteamLearnDataElement `protobuf:"bytes,1,rep,name=elements" json:"elements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearnDataObject) Reset() {
	*x = CMsgSteamLearnDataObject{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearnDataObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearnDataObject) ProtoMessage() {}

func (x *CMsgSteamLearnDataObject) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearnDataObject.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearnDataObject) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgSteamLearnDataObject) GetElements() []*CMsgSteamLearnDataElement {
	if x != nil {
		return x.Elements
	}
	return nil
}

type CMsgSteamLearnDataElement struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Name          *string                     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	DataInt32S    []int32                     `protobuf:"varint,20,rep,name=data_int32s,json=dataInt32s" json:"data_int32s,omitempty"`
	DataFloats    []float32                   `protobuf:"fixed32,21,rep,name=data_floats,json=dataFloats" json:"data_floats,omitempty"`
	DataBools     []bool                      `protobuf:"varint,22,rep,name=data_bools,json=dataBools" json:"data_bools,omitempty"`
	DataStrings   []string                    `protobuf:"bytes,23,rep,name=data_strings,json=dataStrings" json:"data_strings,omitempty"`
	DataObjects   []*CMsgSteamLearnDataObject `protobuf:"bytes,24,rep,name=data_objects,json=dataObjects" json:"data_objects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearnDataElement) Reset() {
	*x = CMsgSteamLearnDataElement{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearnDataElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearnDataElement) ProtoMessage() {}

func (x *CMsgSteamLearnDataElement) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearnDataElement.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearnDataElement) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgSteamLearnDataElement) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgSteamLearnDataElement) GetDataInt32S() []int32 {
	if x != nil {
		return x.DataInt32S
	}
	return nil
}

func (x *CMsgSteamLearnDataElement) GetDataFloats() []float32 {
	if x != nil {
		return x.DataFloats
	}
	return nil
}

func (x *CMsgSteamLearnDataElement) GetDataBools() []bool {
	if x != nil {
		return x.DataBools
	}
	return nil
}

func (x *CMsgSteamLearnDataElement) GetDataStrings() []string {
	if x != nil {
		return x.DataStrings
	}
	return nil
}

func (x *CMsgSteamLearnDataElement) GetDataObjects() []*CMsgSteamLearnDataObject {
	if x != nil {
		return x.DataObjects
	}
	return nil
}

type CMsgSteamLearnData struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	DataSourceId  *uint32                   `protobuf:"varint,1,opt,name=data_source_id,json=dataSourceId" json:"data_source_id,omitempty"`
	Keys          []uint64                  `protobuf:"varint,2,rep,name=keys" json:"keys,omitempty"`
	DataObject    *CMsgSteamLearnDataObject `protobuf:"bytes,3,opt,name=data_object,json=dataObject" json:"data_object,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearnData) Reset() {
	*x = CMsgSteamLearnData{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearnData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearnData) ProtoMessage() {}

func (x *CMsgSteamLearnData) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearnData.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearnData) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgSteamLearnData) GetDataSourceId() uint32 {
	if x != nil && x.DataSourceId != nil {
		return *x.DataSourceId
	}
	return 0
}

func (x *CMsgSteamLearnData) GetKeys() []uint64 {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *CMsgSteamLearnData) GetDataObject() *CMsgSteamLearnDataObject {
	if x != nil {
		return x.DataObject
	}
	return nil
}

type CMsgSteamLearnDataList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*CMsgSteamLearnData  `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearnDataList) Reset() {
	*x = CMsgSteamLearnDataList{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearnDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearnDataList) ProtoMessage() {}

func (x *CMsgSteamLearnDataList) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearnDataList.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearnDataList) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgSteamLearnDataList) GetData() []*CMsgSteamLearnData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CMsgSteamLearn_RegisterDataSource_Request struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	AccessToken   *string                   `protobuf:"bytes,1,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	DataSource    *CMsgSteamLearnDataSource `protobuf:"bytes,3,opt,name=data_source,json=dataSource" json:"data_source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_RegisterDataSource_Request) Reset() {
	*x = CMsgSteamLearn_RegisterDataSource_Request{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_RegisterDataSource_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_RegisterDataSource_Request) ProtoMessage() {}

func (x *CMsgSteamLearn_RegisterDataSource_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_RegisterDataSource_Request.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_RegisterDataSource_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgSteamLearn_RegisterDataSource_Request) GetAccessToken() string {
	if x != nil && x.AccessToken != nil {
		return *x.AccessToken
	}
	return ""
}

func (x *CMsgSteamLearn_RegisterDataSource_Request) GetDataSource() *CMsgSteamLearnDataSource {
	if x != nil {
		return x.DataSource
	}
	return nil
}

type CMsgSteamLearn_RegisterDataSource_Response struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Result        *ESteammLearnRegisterDataSourceResult `protobuf:"varint,1,opt,name=result,enum=protocol.ESteammLearnRegisterDataSourceResult,def=0" json:"result,omitempty"`
	DataSource    *CMsgSteamLearnDataSource             `protobuf:"bytes,2,opt,name=data_source,json=dataSource" json:"data_source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgSteamLearn_RegisterDataSource_Response fields.
const (
	Default_CMsgSteamLearn_RegisterDataSource_Response_Result = ESteammLearnRegisterDataSourceResult_STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR
)

func (x *CMsgSteamLearn_RegisterDataSource_Response) Reset() {
	*x = CMsgSteamLearn_RegisterDataSource_Response{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_RegisterDataSource_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_RegisterDataSource_Response) ProtoMessage() {}

func (x *CMsgSteamLearn_RegisterDataSource_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_RegisterDataSource_Response.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_RegisterDataSource_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgSteamLearn_RegisterDataSource_Response) GetResult() ESteammLearnRegisterDataSourceResult {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgSteamLearn_RegisterDataSource_Response_Result
}

func (x *CMsgSteamLearn_RegisterDataSource_Response) GetDataSource() *CMsgSteamLearnDataSource {
	if x != nil {
		return x.DataSource
	}
	return nil
}

type CMsgSteamLearn_CacheData_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessToken   *string                `protobuf:"bytes,1,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	Data          *CMsgSteamLearnData    `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_CacheData_Request) Reset() {
	*x = CMsgSteamLearn_CacheData_Request{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_CacheData_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_CacheData_Request) ProtoMessage() {}

func (x *CMsgSteamLearn_CacheData_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_CacheData_Request.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_CacheData_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgSteamLearn_CacheData_Request) GetAccessToken() string {
	if x != nil && x.AccessToken != nil {
		return *x.AccessToken
	}
	return ""
}

func (x *CMsgSteamLearn_CacheData_Request) GetData() *CMsgSteamLearnData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CMsgSteamLearn_CacheData_Response struct {
	state           protoimpl.MessageState      `protogen:"open.v1"`
	CacheDataResult *ESteamLearnCacheDataResult `protobuf:"varint,1,opt,name=cache_data_result,json=cacheDataResult,enum=protocol.ESteamLearnCacheDataResult,def=0" json:"cache_data_result,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

// Default values for CMsgSteamLearn_CacheData_Response fields.
const (
	Default_CMsgSteamLearn_CacheData_Response_CacheDataResult = ESteamLearnCacheDataResult_STEAMLEARN_CACHE_DATA_ERROR
)

func (x *CMsgSteamLearn_CacheData_Response) Reset() {
	*x = CMsgSteamLearn_CacheData_Response{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_CacheData_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_CacheData_Response) ProtoMessage() {}

func (x *CMsgSteamLearn_CacheData_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_CacheData_Response.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_CacheData_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{10}
}

func (x *CMsgSteamLearn_CacheData_Response) GetCacheDataResult() ESteamLearnCacheDataResult {
	if x != nil && x.CacheDataResult != nil {
		return *x.CacheDataResult
	}
	return Default_CMsgSteamLearn_CacheData_Response_CacheDataResult
}

type CMsgSteamLearn_SnapshotProject_Request struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	AccessToken             *string                `protobuf:"bytes,1,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	ProjectId               *uint32                `protobuf:"varint,3,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	PublishedVersion        *uint32                `protobuf:"varint,7,opt,name=published_version,json=publishedVersion" json:"published_version,omitempty"`
	Keys                    []uint64               `protobuf:"varint,4,rep,name=keys" json:"keys,omitempty"`
	Data                    []*CMsgSteamLearnData  `protobuf:"bytes,5,rep,name=data" json:"data,omitempty"`
	PendingDataLimitSeconds *uint32                `protobuf:"varint,6,opt,name=pending_data_limit_seconds,json=pendingDataLimitSeconds" json:"pending_data_limit_seconds,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CMsgSteamLearn_SnapshotProject_Request) Reset() {
	*x = CMsgSteamLearn_SnapshotProject_Request{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_SnapshotProject_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_SnapshotProject_Request) ProtoMessage() {}

func (x *CMsgSteamLearn_SnapshotProject_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_SnapshotProject_Request.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_SnapshotProject_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{11}
}

func (x *CMsgSteamLearn_SnapshotProject_Request) GetAccessToken() string {
	if x != nil && x.AccessToken != nil {
		return *x.AccessToken
	}
	return ""
}

func (x *CMsgSteamLearn_SnapshotProject_Request) GetProjectId() uint32 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *CMsgSteamLearn_SnapshotProject_Request) GetPublishedVersion() uint32 {
	if x != nil && x.PublishedVersion != nil {
		return *x.PublishedVersion
	}
	return 0
}

func (x *CMsgSteamLearn_SnapshotProject_Request) GetKeys() []uint64 {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *CMsgSteamLearn_SnapshotProject_Request) GetData() []*CMsgSteamLearnData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CMsgSteamLearn_SnapshotProject_Request) GetPendingDataLimitSeconds() uint32 {
	if x != nil && x.PendingDataLimitSeconds != nil {
		return *x.PendingDataLimitSeconds
	}
	return 0
}

type CMsgSteamLearn_SnapshotProject_Response struct {
	state          protoimpl.MessageState            `protogen:"open.v1"`
	SnapshotResult *ESteamLearnSnapshotProjectResult `protobuf:"varint,1,opt,name=snapshot_result,json=snapshotResult,enum=protocol.ESteamLearnSnapshotProjectResult,def=0" json:"snapshot_result,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

// Default values for CMsgSteamLearn_SnapshotProject_Response fields.
const (
	Default_CMsgSteamLearn_SnapshotProject_Response_SnapshotResult = ESteamLearnSnapshotProjectResult_STEAMLEARN_SNAPSHOT_PROJECT_ERROR
)

func (x *CMsgSteamLearn_SnapshotProject_Response) Reset() {
	*x = CMsgSteamLearn_SnapshotProject_Response{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_SnapshotProject_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_SnapshotProject_Response) ProtoMessage() {}

func (x *CMsgSteamLearn_SnapshotProject_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_SnapshotProject_Response.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_SnapshotProject_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{12}
}

func (x *CMsgSteamLearn_SnapshotProject_Response) GetSnapshotResult() ESteamLearnSnapshotProjectResult {
	if x != nil && x.SnapshotResult != nil {
		return *x.SnapshotResult
	}
	return Default_CMsgSteamLearn_SnapshotProject_Response_SnapshotResult
}

type CMsgSteamLearn_BatchOperation_Request struct {
	state             protoimpl.MessageState                    `protogen:"open.v1"`
	CacheDataRequests []*CMsgSteamLearn_CacheData_Request       `protobuf:"bytes,1,rep,name=cache_data_requests,json=cacheDataRequests" json:"cache_data_requests,omitempty"`
	SnapshotRequests  []*CMsgSteamLearn_SnapshotProject_Request `protobuf:"bytes,2,rep,name=snapshot_requests,json=snapshotRequests" json:"snapshot_requests,omitempty"`
	InferenceRequests []*CMsgSteamLearn_Inference_Request       `protobuf:"bytes,3,rep,name=inference_requests,json=inferenceRequests" json:"inference_requests,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CMsgSteamLearn_BatchOperation_Request) Reset() {
	*x = CMsgSteamLearn_BatchOperation_Request{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_BatchOperation_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_BatchOperation_Request) ProtoMessage() {}

func (x *CMsgSteamLearn_BatchOperation_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_BatchOperation_Request.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_BatchOperation_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{13}
}

func (x *CMsgSteamLearn_BatchOperation_Request) GetCacheDataRequests() []*CMsgSteamLearn_CacheData_Request {
	if x != nil {
		return x.CacheDataRequests
	}
	return nil
}

func (x *CMsgSteamLearn_BatchOperation_Request) GetSnapshotRequests() []*CMsgSteamLearn_SnapshotProject_Request {
	if x != nil {
		return x.SnapshotRequests
	}
	return nil
}

func (x *CMsgSteamLearn_BatchOperation_Request) GetInferenceRequests() []*CMsgSteamLearn_Inference_Request {
	if x != nil {
		return x.InferenceRequests
	}
	return nil
}

type CMsgSteamLearn_BatchOperation_Response struct {
	state              protoimpl.MessageState                     `protogen:"open.v1"`
	CacheDataResponses []*CMsgSteamLearn_CacheData_Response       `protobuf:"bytes,1,rep,name=cache_data_responses,json=cacheDataResponses" json:"cache_data_responses,omitempty"`
	SnapshotResponses  []*CMsgSteamLearn_SnapshotProject_Response `protobuf:"bytes,2,rep,name=snapshot_responses,json=snapshotResponses" json:"snapshot_responses,omitempty"`
	InferenceResponses []*CMsgSteamLearn_Inference_Response       `protobuf:"bytes,3,rep,name=inference_responses,json=inferenceResponses" json:"inference_responses,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CMsgSteamLearn_BatchOperation_Response) Reset() {
	*x = CMsgSteamLearn_BatchOperation_Response{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_BatchOperation_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_BatchOperation_Response) ProtoMessage() {}

func (x *CMsgSteamLearn_BatchOperation_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_BatchOperation_Response.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_BatchOperation_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{14}
}

func (x *CMsgSteamLearn_BatchOperation_Response) GetCacheDataResponses() []*CMsgSteamLearn_CacheData_Response {
	if x != nil {
		return x.CacheDataResponses
	}
	return nil
}

func (x *CMsgSteamLearn_BatchOperation_Response) GetSnapshotResponses() []*CMsgSteamLearn_SnapshotProject_Response {
	if x != nil {
		return x.SnapshotResponses
	}
	return nil
}

func (x *CMsgSteamLearn_BatchOperation_Response) GetInferenceResponses() []*CMsgSteamLearn_Inference_Response {
	if x != nil {
		return x.InferenceResponses
	}
	return nil
}

type CMsgSteamLearnAccessTokens struct {
	state                         protoimpl.MessageState                                   `protogen:"open.v1"`
	RegisterDataSourceAccessToken *string                                                  `protobuf:"bytes,1,opt,name=register_data_source_access_token,json=registerDataSourceAccessToken" json:"register_data_source_access_token,omitempty"`
	CacheDataAccessTokens         []*CMsgSteamLearnAccessTokens_CacheDataAccessToken       `protobuf:"bytes,2,rep,name=cache_data_access_tokens,json=cacheDataAccessTokens" json:"cache_data_access_tokens,omitempty"`
	SnapshotProjectAccessTokens   []*CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken `protobuf:"bytes,3,rep,name=snapshot_project_access_tokens,json=snapshotProjectAccessTokens" json:"snapshot_project_access_tokens,omitempty"`
	InferenceAccessTokens         []*CMsgSteamLearnAccessTokens_InferenceAccessToken       `protobuf:"bytes,4,rep,name=inference_access_tokens,json=inferenceAccessTokens" json:"inference_access_tokens,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *CMsgSteamLearnAccessTokens) Reset() {
	*x = CMsgSteamLearnAccessTokens{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearnAccessTokens) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearnAccessTokens) ProtoMessage() {}

func (x *CMsgSteamLearnAccessTokens) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearnAccessTokens.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearnAccessTokens) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{15}
}

func (x *CMsgSteamLearnAccessTokens) GetRegisterDataSourceAccessToken() string {
	if x != nil && x.RegisterDataSourceAccessToken != nil {
		return *x.RegisterDataSourceAccessToken
	}
	return ""
}

func (x *CMsgSteamLearnAccessTokens) GetCacheDataAccessTokens() []*CMsgSteamLearnAccessTokens_CacheDataAccessToken {
	if x != nil {
		return x.CacheDataAccessTokens
	}
	return nil
}

func (x *CMsgSteamLearnAccessTokens) GetSnapshotProjectAccessTokens() []*CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken {
	if x != nil {
		return x.SnapshotProjectAccessTokens
	}
	return nil
}

func (x *CMsgSteamLearnAccessTokens) GetInferenceAccessTokens() []*CMsgSteamLearnAccessTokens_InferenceAccessToken {
	if x != nil {
		return x.InferenceAccessTokens
	}
	return nil
}

type CMsgSteamLearn_GetAccessTokens_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_GetAccessTokens_Request) Reset() {
	*x = CMsgSteamLearn_GetAccessTokens_Request{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_GetAccessTokens_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_GetAccessTokens_Request) ProtoMessage() {}

func (x *CMsgSteamLearn_GetAccessTokens_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_GetAccessTokens_Request.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_GetAccessTokens_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{16}
}

func (x *CMsgSteamLearn_GetAccessTokens_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

type CMsgSteamLearn_GetAccessTokens_Response struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Result        *ESteamLearnGetAccessTokensResult `protobuf:"varint,1,opt,name=result,enum=protocol.ESteamLearnGetAccessTokensResult,def=0" json:"result,omitempty"`
	AccessTokens  *CMsgSteamLearnAccessTokens       `protobuf:"bytes,2,opt,name=access_tokens,json=accessTokens" json:"access_tokens,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgSteamLearn_GetAccessTokens_Response fields.
const (
	Default_CMsgSteamLearn_GetAccessTokens_Response_Result = ESteamLearnGetAccessTokensResult_STEAMLEARN_GET_ACCESS_TOKENS_ERROR
)

func (x *CMsgSteamLearn_GetAccessTokens_Response) Reset() {
	*x = CMsgSteamLearn_GetAccessTokens_Response{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_GetAccessTokens_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_GetAccessTokens_Response) ProtoMessage() {}

func (x *CMsgSteamLearn_GetAccessTokens_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_GetAccessTokens_Response.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_GetAccessTokens_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{17}
}

func (x *CMsgSteamLearn_GetAccessTokens_Response) GetResult() ESteamLearnGetAccessTokensResult {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgSteamLearn_GetAccessTokens_Response_Result
}

func (x *CMsgSteamLearn_GetAccessTokens_Response) GetAccessTokens() *CMsgSteamLearnAccessTokens {
	if x != nil {
		return x.AccessTokens
	}
	return nil
}

type CMsgInferenceIterateBeamSearch struct {
	state                    protoimpl.MessageState                             `protogen:"open.v1"`
	BeamLength               *uint32                                            `protobuf:"varint,1,opt,name=beam_length,json=beamLength" json:"beam_length,omitempty"`
	BeamWidth                *uint32                                            `protobuf:"varint,2,opt,name=beam_width,json=beamWidth" json:"beam_width,omitempty"`
	ItemDecay                *float32                                           `protobuf:"fixed32,3,opt,name=item_decay,json=itemDecay" json:"item_decay,omitempty"`
	NextItemCount            *uint32                                            `protobuf:"varint,4,opt,name=next_item_count,json=nextItemCount" json:"next_item_count,omitempty"`
	ItemScalars              []*CMsgInferenceIterateBeamSearch_CustomItemScalar `protobuf:"bytes,5,rep,name=item_scalars,json=itemScalars" json:"item_scalars,omitempty"`
	ItemSequenceEnd          *uint32                                            `protobuf:"varint,7,opt,name=item_sequence_end,json=itemSequenceEnd" json:"item_sequence_end,omitempty"`
	ItemSequenceEndThreshold *float32                                           `protobuf:"fixed32,8,opt,name=item_sequence_end_threshold,json=itemSequenceEndThreshold" json:"item_sequence_end_threshold,omitempty"`
	RepeatMultiplier         *float32                                           `protobuf:"fixed32,9,opt,name=repeat_multiplier,json=repeatMultiplier" json:"repeat_multiplier,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *CMsgInferenceIterateBeamSearch) Reset() {
	*x = CMsgInferenceIterateBeamSearch{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgInferenceIterateBeamSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgInferenceIterateBeamSearch) ProtoMessage() {}

func (x *CMsgInferenceIterateBeamSearch) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgInferenceIterateBeamSearch.ProtoReflect.Descriptor instead.
func (*CMsgInferenceIterateBeamSearch) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{18}
}

func (x *CMsgInferenceIterateBeamSearch) GetBeamLength() uint32 {
	if x != nil && x.BeamLength != nil {
		return *x.BeamLength
	}
	return 0
}

func (x *CMsgInferenceIterateBeamSearch) GetBeamWidth() uint32 {
	if x != nil && x.BeamWidth != nil {
		return *x.BeamWidth
	}
	return 0
}

func (x *CMsgInferenceIterateBeamSearch) GetItemDecay() float32 {
	if x != nil && x.ItemDecay != nil {
		return *x.ItemDecay
	}
	return 0
}

func (x *CMsgInferenceIterateBeamSearch) GetNextItemCount() uint32 {
	if x != nil && x.NextItemCount != nil {
		return *x.NextItemCount
	}
	return 0
}

func (x *CMsgInferenceIterateBeamSearch) GetItemScalars() []*CMsgInferenceIterateBeamSearch_CustomItemScalar {
	if x != nil {
		return x.ItemScalars
	}
	return nil
}

func (x *CMsgInferenceIterateBeamSearch) GetItemSequenceEnd() uint32 {
	if x != nil && x.ItemSequenceEnd != nil {
		return *x.ItemSequenceEnd
	}
	return 0
}

func (x *CMsgInferenceIterateBeamSearch) GetItemSequenceEndThreshold() float32 {
	if x != nil && x.ItemSequenceEndThreshold != nil {
		return *x.ItemSequenceEndThreshold
	}
	return 0
}

func (x *CMsgInferenceIterateBeamSearch) GetRepeatMultiplier() float32 {
	if x != nil && x.RepeatMultiplier != nil {
		return *x.RepeatMultiplier
	}
	return 0
}

type CMsgSteamLearn_Inference_Request struct {
	state             protoimpl.MessageState          `protogen:"open.v1"`
	AccessToken       *string                         `protobuf:"bytes,1,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	ProjectId         *uint32                         `protobuf:"varint,3,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	PublishedVersion  *uint32                         `protobuf:"varint,4,opt,name=published_version,json=publishedVersion" json:"published_version,omitempty"`
	OverrideTrainId   *uint32                         `protobuf:"varint,5,opt,name=override_train_id,json=overrideTrainId" json:"override_train_id,omitempty"`
	Data              *CMsgSteamLearnDataList         `protobuf:"bytes,6,opt,name=data" json:"data,omitempty"`
	AdditionalData    []float32                       `protobuf:"fixed32,7,rep,name=additional_data,json=additionalData" json:"additional_data,omitempty"`
	Keys              []uint64                        `protobuf:"varint,8,rep,name=keys" json:"keys,omitempty"`
	NamedInference    *string                         `protobuf:"bytes,9,opt,name=named_inference,json=namedInference" json:"named_inference,omitempty"`
	IterateBeamSearch *CMsgInferenceIterateBeamSearch `protobuf:"bytes,13,opt,name=iterate_beam_search,json=iterateBeamSearch" json:"iterate_beam_search,omitempty"`
	DebugSpew         *uint32                         `protobuf:"varint,14,opt,name=debug_spew,json=debugSpew" json:"debug_spew,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CMsgSteamLearn_Inference_Request) Reset() {
	*x = CMsgSteamLearn_Inference_Request{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_Inference_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_Inference_Request) ProtoMessage() {}

func (x *CMsgSteamLearn_Inference_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_Inference_Request.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_Inference_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{19}
}

func (x *CMsgSteamLearn_Inference_Request) GetAccessToken() string {
	if x != nil && x.AccessToken != nil {
		return *x.AccessToken
	}
	return ""
}

func (x *CMsgSteamLearn_Inference_Request) GetProjectId() uint32 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *CMsgSteamLearn_Inference_Request) GetPublishedVersion() uint32 {
	if x != nil && x.PublishedVersion != nil {
		return *x.PublishedVersion
	}
	return 0
}

func (x *CMsgSteamLearn_Inference_Request) GetOverrideTrainId() uint32 {
	if x != nil && x.OverrideTrainId != nil {
		return *x.OverrideTrainId
	}
	return 0
}

func (x *CMsgSteamLearn_Inference_Request) GetData() *CMsgSteamLearnDataList {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CMsgSteamLearn_Inference_Request) GetAdditionalData() []float32 {
	if x != nil {
		return x.AdditionalData
	}
	return nil
}

func (x *CMsgSteamLearn_Inference_Request) GetKeys() []uint64 {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *CMsgSteamLearn_Inference_Request) GetNamedInference() string {
	if x != nil && x.NamedInference != nil {
		return *x.NamedInference
	}
	return ""
}

func (x *CMsgSteamLearn_Inference_Request) GetIterateBeamSearch() *CMsgInferenceIterateBeamSearch {
	if x != nil {
		return x.IterateBeamSearch
	}
	return nil
}

func (x *CMsgSteamLearn_Inference_Request) GetDebugSpew() uint32 {
	if x != nil && x.DebugSpew != nil {
		return *x.DebugSpew
	}
	return 0
}

type CMsgSteamLearn_InferenceMetadata_Request struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	AccessToken      *string                `protobuf:"bytes,1,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	ProjectId        *uint32                `protobuf:"varint,3,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	PublishedVersion *uint32                `protobuf:"varint,4,opt,name=published_version,json=publishedVersion" json:"published_version,omitempty"`
	OverrideTrainId  *uint32                `protobuf:"varint,5,opt,name=override_train_id,json=overrideTrainId" json:"override_train_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceMetadata_Request) Reset() {
	*x = CMsgSteamLearn_InferenceMetadata_Request{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceMetadata_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceMetadata_Request) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceMetadata_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceMetadata_Request.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceMetadata_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{20}
}

func (x *CMsgSteamLearn_InferenceMetadata_Request) GetAccessToken() string {
	if x != nil && x.AccessToken != nil {
		return *x.AccessToken
	}
	return ""
}

func (x *CMsgSteamLearn_InferenceMetadata_Request) GetProjectId() uint32 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *CMsgSteamLearn_InferenceMetadata_Request) GetPublishedVersion() uint32 {
	if x != nil && x.PublishedVersion != nil {
		return *x.PublishedVersion
	}
	return 0
}

func (x *CMsgSteamLearn_InferenceMetadata_Request) GetOverrideTrainId() uint32 {
	if x != nil && x.OverrideTrainId != nil {
		return *x.OverrideTrainId
	}
	return 0
}

type CMsgSteamLearn_InferenceMetadataBackend_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     *uint32                `protobuf:"varint,1,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	FetchId       *uint32                `protobuf:"varint,2,opt,name=fetch_id,json=fetchId" json:"fetch_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceMetadataBackend_Request) Reset() {
	*x = CMsgSteamLearn_InferenceMetadataBackend_Request{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceMetadataBackend_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceMetadataBackend_Request) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceMetadataBackend_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceMetadataBackend_Request.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceMetadataBackend_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{21}
}

func (x *CMsgSteamLearn_InferenceMetadataBackend_Request) GetProjectId() uint32 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *CMsgSteamLearn_InferenceMetadataBackend_Request) GetFetchId() uint32 {
	if x != nil && x.FetchId != nil {
		return *x.FetchId
	}
	return 0
}

type CMsgSteamLearn_InferenceMetadata_Response struct {
	state                   protoimpl.MessageState                                       `protogen:"open.v1"`
	InferenceMetadataResult *ESteamLearnInferenceMetadataResult                          `protobuf:"varint,1,opt,name=inference_metadata_result,json=inferenceMetadataResult,enum=protocol.ESteamLearnInferenceMetadataResult,def=0" json:"inference_metadata_result,omitempty"`
	RowRange                *CMsgSteamLearn_InferenceMetadata_Response_RowRange          `protobuf:"bytes,2,opt,name=row_range,json=rowRange" json:"row_range,omitempty"`
	Ranges                  []*CMsgSteamLearn_InferenceMetadata_Response_Range           `protobuf:"bytes,3,rep,name=ranges" json:"ranges,omitempty"`
	StdDevs                 []*CMsgSteamLearn_InferenceMetadata_Response_StdDev          `protobuf:"bytes,4,rep,name=std_devs,json=stdDevs" json:"std_devs,omitempty"`
	CompactTables           []*CMsgSteamLearn_InferenceMetadata_Response_CompactTable    `protobuf:"bytes,5,rep,name=compact_tables,json=compactTables" json:"compact_tables,omitempty"`
	SequenceTables          []*CMsgSteamLearn_InferenceMetadata_Response_SequenceTable   `protobuf:"bytes,9,rep,name=sequence_tables,json=sequenceTables" json:"sequence_tables,omitempty"`
	Kmeans                  []*CMsgSteamLearn_InferenceMetadata_Response_KMeans          `protobuf:"bytes,6,rep,name=kmeans" json:"kmeans,omitempty"`
	AppInfo                 []*CMsgSteamLearn_InferenceMetadata_Response_AppInfoEntry    `protobuf:"bytes,8,rep,name=app_info,json=appInfo" json:"app_info,omitempty"`
	SnapshotHistogram       *CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram `protobuf:"bytes,7,opt,name=snapshot_histogram,json=snapshotHistogram" json:"snapshot_histogram,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

// Default values for CMsgSteamLearn_InferenceMetadata_Response fields.
const (
	Default_CMsgSteamLearn_InferenceMetadata_Response_InferenceMetadataResult = ESteamLearnInferenceMetadataResult_STEAMLEARN_INFERENCE_METADATA_ERROR
)

func (x *CMsgSteamLearn_InferenceMetadata_Response) Reset() {
	*x = CMsgSteamLearn_InferenceMetadata_Response{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceMetadata_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceMetadata_Response) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceMetadata_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceMetadata_Response.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceMetadata_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{22}
}

func (x *CMsgSteamLearn_InferenceMetadata_Response) GetInferenceMetadataResult() ESteamLearnInferenceMetadataResult {
	if x != nil && x.InferenceMetadataResult != nil {
		return *x.InferenceMetadataResult
	}
	return Default_CMsgSteamLearn_InferenceMetadata_Response_InferenceMetadataResult
}

func (x *CMsgSteamLearn_InferenceMetadata_Response) GetRowRange() *CMsgSteamLearn_InferenceMetadata_Response_RowRange {
	if x != nil {
		return x.RowRange
	}
	return nil
}

func (x *CMsgSteamLearn_InferenceMetadata_Response) GetRanges() []*CMsgSteamLearn_InferenceMetadata_Response_Range {
	if x != nil {
		return x.Ranges
	}
	return nil
}

func (x *CMsgSteamLearn_InferenceMetadata_Response) GetStdDevs() []*CMsgSteamLearn_InferenceMetadata_Response_StdDev {
	if x != nil {
		return x.StdDevs
	}
	return nil
}

func (x *CMsgSteamLearn_InferenceMetadata_Response) GetCompactTables() []*CMsgSteamLearn_InferenceMetadata_Response_CompactTable {
	if x != nil {
		return x.CompactTables
	}
	return nil
}

func (x *CMsgSteamLearn_InferenceMetadata_Response) GetSequenceTables() []*CMsgSteamLearn_InferenceMetadata_Response_SequenceTable {
	if x != nil {
		return x.SequenceTables
	}
	return nil
}

func (x *CMsgSteamLearn_InferenceMetadata_Response) GetKmeans() []*CMsgSteamLearn_InferenceMetadata_Response_KMeans {
	if x != nil {
		return x.Kmeans
	}
	return nil
}

func (x *CMsgSteamLearn_InferenceMetadata_Response) GetAppInfo() []*CMsgSteamLearn_InferenceMetadata_Response_AppInfoEntry {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

func (x *CMsgSteamLearn_InferenceMetadata_Response) GetSnapshotHistogram() *CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram {
	if x != nil {
		return x.SnapshotHistogram
	}
	return nil
}

type CMsgSteamLearn_InferenceBackend_Response struct {
	state         protoimpl.MessageState                             `protogen:"open.v1"`
	Outputs       []*CMsgSteamLearn_InferenceBackend_Response_Output `protobuf:"bytes,1,rep,name=outputs" json:"outputs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceBackend_Response) Reset() {
	*x = CMsgSteamLearn_InferenceBackend_Response{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceBackend_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceBackend_Response) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceBackend_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceBackend_Response.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceBackend_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{23}
}

func (x *CMsgSteamLearn_InferenceBackend_Response) GetOutputs() []*CMsgSteamLearn_InferenceBackend_Response_Output {
	if x != nil {
		return x.Outputs
	}
	return nil
}

type CMsgSteamLearn_Inference_Response struct {
	state           protoimpl.MessageState                    `protogen:"open.v1"`
	InferenceResult *ESteamLearnInferenceResult               `protobuf:"varint,1,opt,name=inference_result,json=inferenceResult,enum=protocol.ESteamLearnInferenceResult,def=0" json:"inference_result,omitempty"`
	BackendResponse *CMsgSteamLearn_InferenceBackend_Response `protobuf:"bytes,2,opt,name=backend_response,json=backendResponse" json:"backend_response,omitempty"`
	Keys            []uint64                                  `protobuf:"varint,3,rep,name=keys" json:"keys,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

// Default values for CMsgSteamLearn_Inference_Response fields.
const (
	Default_CMsgSteamLearn_Inference_Response_InferenceResult = ESteamLearnInferenceResult_STEAMLEARN_INFERENCE_ERROR
)

func (x *CMsgSteamLearn_Inference_Response) Reset() {
	*x = CMsgSteamLearn_Inference_Response{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_Inference_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_Inference_Response) ProtoMessage() {}

func (x *CMsgSteamLearn_Inference_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_Inference_Response.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_Inference_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{24}
}

func (x *CMsgSteamLearn_Inference_Response) GetInferenceResult() ESteamLearnInferenceResult {
	if x != nil && x.InferenceResult != nil {
		return *x.InferenceResult
	}
	return Default_CMsgSteamLearn_Inference_Response_InferenceResult
}

func (x *CMsgSteamLearn_Inference_Response) GetBackendResponse() *CMsgSteamLearn_InferenceBackend_Response {
	if x != nil {
		return x.BackendResponse
	}
	return nil
}

func (x *CMsgSteamLearn_Inference_Response) GetKeys() []uint64 {
	if x != nil {
		return x.Keys
	}
	return nil
}

type CMsgSteamLearnAccessTokens_CacheDataAccessToken struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataSourceId  *uint32                `protobuf:"varint,1,opt,name=data_source_id,json=dataSourceId" json:"data_source_id,omitempty"`
	AccessToken   *string                `protobuf:"bytes,2,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearnAccessTokens_CacheDataAccessToken) Reset() {
	*x = CMsgSteamLearnAccessTokens_CacheDataAccessToken{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearnAccessTokens_CacheDataAccessToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearnAccessTokens_CacheDataAccessToken) ProtoMessage() {}

func (x *CMsgSteamLearnAccessTokens_CacheDataAccessToken) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearnAccessTokens_CacheDataAccessToken.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearnAccessTokens_CacheDataAccessToken) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{15, 0}
}

func (x *CMsgSteamLearnAccessTokens_CacheDataAccessToken) GetDataSourceId() uint32 {
	if x != nil && x.DataSourceId != nil {
		return *x.DataSourceId
	}
	return 0
}

func (x *CMsgSteamLearnAccessTokens_CacheDataAccessToken) GetAccessToken() string {
	if x != nil && x.AccessToken != nil {
		return *x.AccessToken
	}
	return ""
}

type CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     *uint32                `protobuf:"varint,1,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	AccessToken   *string                `protobuf:"bytes,2,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken) Reset() {
	*x = CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken) ProtoMessage() {}

func (x *CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{15, 1}
}

func (x *CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken) GetProjectId() uint32 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken) GetAccessToken() string {
	if x != nil && x.AccessToken != nil {
		return *x.AccessToken
	}
	return ""
}

type CMsgSteamLearnAccessTokens_InferenceAccessToken struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     *uint32                `protobuf:"varint,1,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	AccessToken   *string                `protobuf:"bytes,2,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearnAccessTokens_InferenceAccessToken) Reset() {
	*x = CMsgSteamLearnAccessTokens_InferenceAccessToken{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearnAccessTokens_InferenceAccessToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearnAccessTokens_InferenceAccessToken) ProtoMessage() {}

func (x *CMsgSteamLearnAccessTokens_InferenceAccessToken) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearnAccessTokens_InferenceAccessToken.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearnAccessTokens_InferenceAccessToken) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{15, 2}
}

func (x *CMsgSteamLearnAccessTokens_InferenceAccessToken) GetProjectId() uint32 {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return 0
}

func (x *CMsgSteamLearnAccessTokens_InferenceAccessToken) GetAccessToken() string {
	if x != nil && x.AccessToken != nil {
		return *x.AccessToken
	}
	return ""
}

type CMsgInferenceIterateBeamSearch_CustomItemScalar struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *uint32                `protobuf:"varint,1,opt,name=item" json:"item,omitempty"`
	Scale         *float32               `protobuf:"fixed32,2,opt,name=scale" json:"scale,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgInferenceIterateBeamSearch_CustomItemScalar) Reset() {
	*x = CMsgInferenceIterateBeamSearch_CustomItemScalar{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgInferenceIterateBeamSearch_CustomItemScalar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgInferenceIterateBeamSearch_CustomItemScalar) ProtoMessage() {}

func (x *CMsgInferenceIterateBeamSearch_CustomItemScalar) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgInferenceIterateBeamSearch_CustomItemScalar.ProtoReflect.Descriptor instead.
func (*CMsgInferenceIterateBeamSearch_CustomItemScalar) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{18, 0}
}

func (x *CMsgInferenceIterateBeamSearch_CustomItemScalar) GetItem() uint32 {
	if x != nil && x.Item != nil {
		return *x.Item
	}
	return 0
}

func (x *CMsgInferenceIterateBeamSearch_CustomItemScalar) GetScale() float32 {
	if x != nil && x.Scale != nil {
		return *x.Scale
	}
	return 0
}

type CMsgSteamLearn_InferenceMetadata_Response_RowRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MinRow        *uint64                `protobuf:"varint,1,opt,name=min_row,json=minRow" json:"min_row,omitempty"`
	MaxRow        *uint64                `protobuf:"varint,2,opt,name=max_row,json=maxRow" json:"max_row,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_RowRange) Reset() {
	*x = CMsgSteamLearn_InferenceMetadata_Response_RowRange{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_RowRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceMetadata_Response_RowRange) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceMetadata_Response_RowRange) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceMetadata_Response_RowRange.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceMetadata_Response_RowRange) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{22, 0}
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_RowRange) GetMinRow() uint64 {
	if x != nil && x.MinRow != nil {
		return *x.MinRow
	}
	return 0
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_RowRange) GetMaxRow() uint64 {
	if x != nil && x.MaxRow != nil {
		return *x.MaxRow
	}
	return 0
}

type CMsgSteamLearn_InferenceMetadata_Response_Range struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DataElementPath *string                `protobuf:"bytes,1,opt,name=data_element_path,json=dataElementPath" json:"data_element_path,omitempty"`
	MinValue        *float32               `protobuf:"fixed32,2,opt,name=min_value,json=minValue" json:"min_value,omitempty"`
	MaxValue        *float32               `protobuf:"fixed32,3,opt,name=max_value,json=maxValue" json:"max_value,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_Range) Reset() {
	*x = CMsgSteamLearn_InferenceMetadata_Response_Range{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceMetadata_Response_Range) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceMetadata_Response_Range) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceMetadata_Response_Range.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceMetadata_Response_Range) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{22, 1}
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_Range) GetDataElementPath() string {
	if x != nil && x.DataElementPath != nil {
		return *x.DataElementPath
	}
	return ""
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_Range) GetMinValue() float32 {
	if x != nil && x.MinValue != nil {
		return *x.MinValue
	}
	return 0
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_Range) GetMaxValue() float32 {
	if x != nil && x.MaxValue != nil {
		return *x.MaxValue
	}
	return 0
}

type CMsgSteamLearn_InferenceMetadata_Response_StdDev struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DataElementPath *string                `protobuf:"bytes,1,opt,name=data_element_path,json=dataElementPath" json:"data_element_path,omitempty"`
	Mean            *float32               `protobuf:"fixed32,2,opt,name=mean" json:"mean,omitempty"`
	StdDev          *float32               `protobuf:"fixed32,3,opt,name=std_dev,json=stdDev" json:"std_dev,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_StdDev) Reset() {
	*x = CMsgSteamLearn_InferenceMetadata_Response_StdDev{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_StdDev) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceMetadata_Response_StdDev) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceMetadata_Response_StdDev) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceMetadata_Response_StdDev.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceMetadata_Response_StdDev) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{22, 2}
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_StdDev) GetDataElementPath() string {
	if x != nil && x.DataElementPath != nil {
		return *x.DataElementPath
	}
	return ""
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_StdDev) GetMean() float32 {
	if x != nil && x.Mean != nil {
		return *x.Mean
	}
	return 0
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_StdDev) GetStdDev() float32 {
	if x != nil && x.StdDev != nil {
		return *x.StdDev
	}
	return 0
}

type CMsgSteamLearn_InferenceMetadata_Response_CompactTable struct {
	state         protoimpl.MessageState                                                     `protogen:"open.v1"`
	Name          *string                                                                    `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	MapValues     []*CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry   `protobuf:"bytes,2,rep,name=map_values,json=mapValues" json:"map_values,omitempty"`
	MapMappings   []*CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry `protobuf:"bytes,3,rep,name=map_mappings,json=mapMappings" json:"map_mappings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_CompactTable) Reset() {
	*x = CMsgSteamLearn_InferenceMetadata_Response_CompactTable{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_CompactTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceMetadata_Response_CompactTable) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceMetadata_Response_CompactTable) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceMetadata_Response_CompactTable.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceMetadata_Response_CompactTable) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{22, 3}
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_CompactTable) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_CompactTable) GetMapValues() []*CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry {
	if x != nil {
		return x.MapValues
	}
	return nil
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_CompactTable) GetMapMappings() []*CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry {
	if x != nil {
		return x.MapMappings
	}
	return nil
}

type CMsgSteamLearn_InferenceMetadata_Response_SequenceTable struct {
	state         protoimpl.MessageState                                                      `protogen:"open.v1"`
	Name          *string                                                                     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	MapValues     []*CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapValuesEntry   `protobuf:"bytes,2,rep,name=map_values,json=mapValues" json:"map_values,omitempty"`
	MapMappings   []*CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapMappingsEntry `protobuf:"bytes,3,rep,name=map_mappings,json=mapMappings" json:"map_mappings,omitempty"`
	TotalCount    *uint64                                                                     `protobuf:"varint,4,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable) Reset() {
	*x = CMsgSteamLearn_InferenceMetadata_Response_SequenceTable{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceMetadata_Response_SequenceTable) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceMetadata_Response_SequenceTable.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceMetadata_Response_SequenceTable) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{22, 4}
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable) GetMapValues() []*CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapValuesEntry {
	if x != nil {
		return x.MapValues
	}
	return nil
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable) GetMapMappings() []*CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapMappingsEntry {
	if x != nil {
		return x.MapMappings
	}
	return nil
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable) GetTotalCount() uint64 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

type CMsgSteamLearn_InferenceMetadata_Response_KMeans struct {
	state         protoimpl.MessageState                                      `protogen:"open.v1"`
	Name          *string                                                     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Clusters      []*CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster `protobuf:"bytes,2,rep,name=clusters" json:"clusters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_KMeans) Reset() {
	*x = CMsgSteamLearn_InferenceMetadata_Response_KMeans{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_KMeans) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceMetadata_Response_KMeans) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceMetadata_Response_KMeans) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceMetadata_Response_KMeans.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceMetadata_Response_KMeans) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{22, 5}
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_KMeans) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_KMeans) GetClusters() []*CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

type CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MinValue      *float32               `protobuf:"fixed32,1,opt,name=min_value,json=minValue" json:"min_value,omitempty"`
	MaxValue      *float32               `protobuf:"fixed32,2,opt,name=max_value,json=maxValue" json:"max_value,omitempty"`
	NumBuckets    *uint32                `protobuf:"varint,3,opt,name=num_buckets,json=numBuckets" json:"num_buckets,omitempty"`
	BucketCounts  []uint32               `protobuf:"varint,4,rep,name=bucket_counts,json=bucketCounts" json:"bucket_counts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram) Reset() {
	*x = CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{22, 6}
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram) GetMinValue() float32 {
	if x != nil && x.MinValue != nil {
		return *x.MinValue
	}
	return 0
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram) GetMaxValue() float32 {
	if x != nil && x.MaxValue != nil {
		return *x.MaxValue
	}
	return 0
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram) GetNumBuckets() uint32 {
	if x != nil && x.NumBuckets != nil {
		return *x.NumBuckets
	}
	return 0
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram) GetBucketCounts() []uint32 {
	if x != nil {
		return x.BucketCounts
	}
	return nil
}

type CMsgSteamLearn_InferenceMetadata_Response_AppInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CountryAllow  *string                `protobuf:"bytes,1,opt,name=country_allow,json=countryAllow" json:"country_allow,omitempty"`
	CountryDeny   *string                `protobuf:"bytes,2,opt,name=country_deny,json=countryDeny" json:"country_deny,omitempty"`
	PlatformWin   *bool                  `protobuf:"varint,3,opt,name=platform_win,json=platformWin" json:"platform_win,omitempty"`
	PlatformMac   *bool                  `protobuf:"varint,4,opt,name=platform_mac,json=platformMac" json:"platform_mac,omitempty"`
	PlatformLinux *bool                  `protobuf:"varint,5,opt,name=platform_linux,json=platformLinux" json:"platform_linux,omitempty"`
	AdultViolence *bool                  `protobuf:"varint,6,opt,name=adult_violence,json=adultViolence" json:"adult_violence,omitempty"`
	AdultSex      *bool                  `protobuf:"varint,7,opt,name=adult_sex,json=adultSex" json:"adult_sex,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_AppInfo) Reset() {
	*x = CMsgSteamLearn_InferenceMetadata_Response_AppInfo{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_AppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceMetadata_Response_AppInfo) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceMetadata_Response_AppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceMetadata_Response_AppInfo.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceMetadata_Response_AppInfo) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{22, 7}
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_AppInfo) GetCountryAllow() string {
	if x != nil && x.CountryAllow != nil {
		return *x.CountryAllow
	}
	return ""
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_AppInfo) GetCountryDeny() string {
	if x != nil && x.CountryDeny != nil {
		return *x.CountryDeny
	}
	return ""
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_AppInfo) GetPlatformWin() bool {
	if x != nil && x.PlatformWin != nil {
		return *x.PlatformWin
	}
	return false
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_AppInfo) GetPlatformMac() bool {
	if x != nil && x.PlatformMac != nil {
		return *x.PlatformMac
	}
	return false
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_AppInfo) GetPlatformLinux() bool {
	if x != nil && x.PlatformLinux != nil {
		return *x.PlatformLinux
	}
	return false
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_AppInfo) GetAdultViolence() bool {
	if x != nil && x.AdultViolence != nil {
		return *x.AdultViolence
	}
	return false
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_AppInfo) GetAdultSex() bool {
	if x != nil && x.AdultSex != nil {
		return *x.AdultSex
	}
	return false
}

type CMsgSteamLearn_InferenceMetadata_Response_AppInfoEntry struct {
	state         protoimpl.MessageState                             `protogen:"open.v1"`
	Key           *uint32                                            `protobuf:"varint,1,opt,name=key" json:"key,omitempty"`
	Value         *CMsgSteamLearn_InferenceMetadata_Response_AppInfo `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_AppInfoEntry) Reset() {
	*x = CMsgSteamLearn_InferenceMetadata_Response_AppInfoEntry{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_AppInfoEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceMetadata_Response_AppInfoEntry) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceMetadata_Response_AppInfoEntry) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceMetadata_Response_AppInfoEntry.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceMetadata_Response_AppInfoEntry) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{22, 8}
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_AppInfoEntry) GetKey() uint32 {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return 0
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_AppInfoEntry) GetValue() *CMsgSteamLearn_InferenceMetadata_Response_AppInfo {
	if x != nil {
		return x.Value
	}
	return nil
}

type CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         *uint32                `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	Mapping       *uint32                `protobuf:"varint,2,opt,name=mapping" json:"mapping,omitempty"`
	Count         *uint64                `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry) Reset() {
	*x = CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{22, 3, 0}
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry) GetValue() uint32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry) GetMapping() uint32 {
	if x != nil && x.Mapping != nil {
		return *x.Mapping
	}
	return 0
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry) GetCount() uint64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry struct {
	state         protoimpl.MessageState                                        `protogen:"open.v1"`
	Key           *uint32                                                       `protobuf:"varint,1,opt,name=key" json:"key,omitempty"`
	Value         *CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry) Reset() {
	*x = CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{22, 3, 1}
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry) GetKey() uint32 {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return 0
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry) GetValue() *CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry {
	if x != nil {
		return x.Value
	}
	return nil
}

type CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry struct {
	state         protoimpl.MessageState                                        `protogen:"open.v1"`
	Key           *uint32                                                       `protobuf:"varint,1,opt,name=key" json:"key,omitempty"`
	Value         *CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry) Reset() {
	*x = CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{22, 3, 2}
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry) GetKey() uint32 {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return 0
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry) GetValue() *CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry {
	if x != nil {
		return x.Value
	}
	return nil
}

type CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_Entry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []uint32               `protobuf:"varint,1,rep,name=values" json:"values,omitempty"`
	Crc           *uint32                `protobuf:"varint,2,opt,name=crc" json:"crc,omitempty"`
	Count         *uint32                `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_Entry) Reset() {
	*x = CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_Entry{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_Entry) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_Entry.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_Entry) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{22, 4, 0}
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_Entry) GetValues() []uint32 {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_Entry) GetCrc() uint32 {
	if x != nil && x.Crc != nil {
		return *x.Crc
	}
	return 0
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_Entry) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapValuesEntry struct {
	state         protoimpl.MessageState                                         `protogen:"open.v1"`
	Key           *uint32                                                        `protobuf:"varint,1,opt,name=key" json:"key,omitempty"`
	Value         *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_Entry `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapValuesEntry) Reset() {
	*x = CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapValuesEntry{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapValuesEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapValuesEntry) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapValuesEntry) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapValuesEntry.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapValuesEntry) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{22, 4, 1}
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapValuesEntry) GetKey() uint32 {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return 0
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapValuesEntry) GetValue() *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_Entry {
	if x != nil {
		return x.Value
	}
	return nil
}

type CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapMappingsEntry struct {
	state         protoimpl.MessageState                                         `protogen:"open.v1"`
	Key           *string                                                        `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value         *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_Entry `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapMappingsEntry) Reset() {
	*x = CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapMappingsEntry{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapMappingsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapMappingsEntry) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapMappingsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapMappingsEntry.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapMappingsEntry) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{22, 4, 2}
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapMappingsEntry) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapMappingsEntry) GetValue() *CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_Entry {
	if x != nil {
		return x.Value
	}
	return nil
}

type CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             *float32               `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y             *float32               `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
	Radius        *float32               `protobuf:"fixed32,3,opt,name=radius" json:"radius,omitempty"`
	Radius_75Pct  *float32               `protobuf:"fixed32,4,opt,name=radius_75pct,json=radius75pct" json:"radius_75pct,omitempty"`
	Radius_50Pct  *float32               `protobuf:"fixed32,5,opt,name=radius_50pct,json=radius50pct" json:"radius_50pct,omitempty"`
	Radius_25Pct  *float32               `protobuf:"fixed32,6,opt,name=radius_25pct,json=radius25pct" json:"radius_25pct,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster) Reset() {
	*x = CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{22, 5, 0}
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster) GetX() float32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster) GetY() float32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster) GetRadius() float32 {
	if x != nil && x.Radius != nil {
		return *x.Radius
	}
	return 0
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster) GetRadius_75Pct() float32 {
	if x != nil && x.Radius_75Pct != nil {
		return *x.Radius_75Pct
	}
	return 0
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster) GetRadius_50Pct() float32 {
	if x != nil && x.Radius_50Pct != nil {
		return *x.Radius_50Pct
	}
	return 0
}

func (x *CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster) GetRadius_25Pct() float32 {
	if x != nil && x.Radius_25Pct != nil {
		return *x.Radius_25Pct
	}
	return 0
}

type CMsgSteamLearn_InferenceBackend_Response_Sequence struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []float32              `protobuf:"fixed32,1,rep,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceBackend_Response_Sequence) Reset() {
	*x = CMsgSteamLearn_InferenceBackend_Response_Sequence{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceBackend_Response_Sequence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceBackend_Response_Sequence) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceBackend_Response_Sequence) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceBackend_Response_Sequence.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceBackend_Response_Sequence) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{23, 0}
}

func (x *CMsgSteamLearn_InferenceBackend_Response_Sequence) GetValue() []float32 {
	if x != nil {
		return x.Value
	}
	return nil
}

type CMsgSteamLearn_InferenceBackend_Response_RegressionOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         *float32               `protobuf:"fixed32,2,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceBackend_Response_RegressionOutput) Reset() {
	*x = CMsgSteamLearn_InferenceBackend_Response_RegressionOutput{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceBackend_Response_RegressionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceBackend_Response_RegressionOutput) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceBackend_Response_RegressionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceBackend_Response_RegressionOutput.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceBackend_Response_RegressionOutput) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{23, 1}
}

func (x *CMsgSteamLearn_InferenceBackend_Response_RegressionOutput) GetValue() float32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type CMsgSteamLearn_InferenceBackend_Response_NamedInferenceOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []float32              `protobuf:"fixed32,3,rep,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceBackend_Response_NamedInferenceOutput) Reset() {
	*x = CMsgSteamLearn_InferenceBackend_Response_NamedInferenceOutput{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceBackend_Response_NamedInferenceOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceBackend_Response_NamedInferenceOutput) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceBackend_Response_NamedInferenceOutput) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceBackend_Response_NamedInferenceOutput.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceBackend_Response_NamedInferenceOutput) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{23, 2}
}

func (x *CMsgSteamLearn_InferenceBackend_Response_NamedInferenceOutput) GetValue() []float32 {
	if x != nil {
		return x.Value
	}
	return nil
}

type CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         *float32               `protobuf:"fixed32,1,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput) Reset() {
	*x = CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{23, 3}
}

func (x *CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput) GetValue() float32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput struct {
	state         protoimpl.MessageState                               `protogen:"open.v1"`
	Weight        []float32                                            `protobuf:"fixed32,1,rep,name=weight" json:"weight,omitempty"`
	Value         []float32                                            `protobuf:"fixed32,2,rep,name=value" json:"value,omitempty"`
	ValueSequence []*CMsgSteamLearn_InferenceBackend_Response_Sequence `protobuf:"bytes,3,rep,name=value_sequence,json=valueSequence" json:"value_sequence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput) Reset() {
	*x = CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{23, 4}
}

func (x *CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput) GetWeight() []float32 {
	if x != nil {
		return x.Weight
	}
	return nil
}

func (x *CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput) GetValue() []float32 {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput) GetValueSequence() []*CMsgSteamLearn_InferenceBackend_Response_Sequence {
	if x != nil {
		return x.ValueSequence
	}
	return nil
}

type CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput struct {
	state         protoimpl.MessageState                               `protogen:"open.v1"`
	Weight        []float32                                            `protobuf:"fixed32,1,rep,name=weight" json:"weight,omitempty"`
	Value         []float32                                            `protobuf:"fixed32,2,rep,name=value" json:"value,omitempty"`
	ValueSequence []*CMsgSteamLearn_InferenceBackend_Response_Sequence `protobuf:"bytes,3,rep,name=value_sequence,json=valueSequence" json:"value_sequence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput) Reset() {
	*x = CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{23, 5}
}

func (x *CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput) GetWeight() []float32 {
	if x != nil {
		return x.Weight
	}
	return nil
}

func (x *CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput) GetValue() []float32 {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput) GetValueSequence() []*CMsgSteamLearn_InferenceBackend_Response_Sequence {
	if x != nil {
		return x.ValueSequence
	}
	return nil
}

type CMsgSteamLearn_InferenceBackend_Response_Output struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to ResponseType:
	//
	//	*CMsgSteamLearn_InferenceBackend_Response_Output_BinaryCrossentropy
	//	*CMsgSteamLearn_InferenceBackend_Response_Output_CategoricalCrossentropy
	//	*CMsgSteamLearn_InferenceBackend_Response_Output_MultiBinaryCrossentropy
	//	*CMsgSteamLearn_InferenceBackend_Response_Output_Regression
	//	*CMsgSteamLearn_InferenceBackend_Response_Output_NamedInference
	ResponseType  isCMsgSteamLearn_InferenceBackend_Response_Output_ResponseType `protobuf_oneof:"ResponseType"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamLearn_InferenceBackend_Response_Output) Reset() {
	*x = CMsgSteamLearn_InferenceBackend_Response_Output{}
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamLearn_InferenceBackend_Response_Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamLearn_InferenceBackend_Response_Output) ProtoMessage() {}

func (x *CMsgSteamLearn_InferenceBackend_Response_Output) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamLearn_InferenceBackend_Response_Output.ProtoReflect.Descriptor instead.
func (*CMsgSteamLearn_InferenceBackend_Response_Output) Descriptor() ([]byte, []int) {
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP(), []int{23, 6}
}

func (x *CMsgSteamLearn_InferenceBackend_Response_Output) GetResponseType() isCMsgSteamLearn_InferenceBackend_Response_Output_ResponseType {
	if x != nil {
		return x.ResponseType
	}
	return nil
}

func (x *CMsgSteamLearn_InferenceBackend_Response_Output) GetBinaryCrossentropy() *CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput {
	if x != nil {
		if x, ok := x.ResponseType.(*CMsgSteamLearn_InferenceBackend_Response_Output_BinaryCrossentropy); ok {
			return x.BinaryCrossentropy
		}
	}
	return nil
}

func (x *CMsgSteamLearn_InferenceBackend_Response_Output) GetCategoricalCrossentropy() *CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput {
	if x != nil {
		if x, ok := x.ResponseType.(*CMsgSteamLearn_InferenceBackend_Response_Output_CategoricalCrossentropy); ok {
			return x.CategoricalCrossentropy
		}
	}
	return nil
}

func (x *CMsgSteamLearn_InferenceBackend_Response_Output) GetMultiBinaryCrossentropy() *CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput {
	if x != nil {
		if x, ok := x.ResponseType.(*CMsgSteamLearn_InferenceBackend_Response_Output_MultiBinaryCrossentropy); ok {
			return x.MultiBinaryCrossentropy
		}
	}
	return nil
}

func (x *CMsgSteamLearn_InferenceBackend_Response_Output) GetRegression() *CMsgSteamLearn_InferenceBackend_Response_RegressionOutput {
	if x != nil {
		if x, ok := x.ResponseType.(*CMsgSteamLearn_InferenceBackend_Response_Output_Regression); ok {
			return x.Regression
		}
	}
	return nil
}

func (x *CMsgSteamLearn_InferenceBackend_Response_Output) GetNamedInference() *CMsgSteamLearn_InferenceBackend_Response_NamedInferenceOutput {
	if x != nil {
		if x, ok := x.ResponseType.(*CMsgSteamLearn_InferenceBackend_Response_Output_NamedInference); ok {
			return x.NamedInference
		}
	}
	return nil
}

type isCMsgSteamLearn_InferenceBackend_Response_Output_ResponseType interface {
	isCMsgSteamLearn_InferenceBackend_Response_Output_ResponseType()
}

type CMsgSteamLearn_InferenceBackend_Response_Output_BinaryCrossentropy struct {
	BinaryCrossentropy *CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput `protobuf:"bytes,1,opt,name=binary_crossentropy,json=binaryCrossentropy,oneof"`
}

type CMsgSteamLearn_InferenceBackend_Response_Output_CategoricalCrossentropy struct {
	CategoricalCrossentropy *CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput `protobuf:"bytes,2,opt,name=categorical_crossentropy,json=categoricalCrossentropy,oneof"`
}

type CMsgSteamLearn_InferenceBackend_Response_Output_MultiBinaryCrossentropy struct {
	MultiBinaryCrossentropy *CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput `protobuf:"bytes,3,opt,name=multi_binary_crossentropy,json=multiBinaryCrossentropy,oneof"`
}

type CMsgSteamLearn_InferenceBackend_Response_Output_Regression struct {
	Regression *CMsgSteamLearn_InferenceBackend_Response_RegressionOutput `protobuf:"bytes,4,opt,name=regression,oneof"`
}

type CMsgSteamLearn_InferenceBackend_Response_Output_NamedInference struct {
	NamedInference *CMsgSteamLearn_InferenceBackend_Response_NamedInferenceOutput `protobuf:"bytes,5,opt,name=named_inference,json=namedInference,oneof"`
}

func (*CMsgSteamLearn_InferenceBackend_Response_Output_BinaryCrossentropy) isCMsgSteamLearn_InferenceBackend_Response_Output_ResponseType() {
}

func (*CMsgSteamLearn_InferenceBackend_Response_Output_CategoricalCrossentropy) isCMsgSteamLearn_InferenceBackend_Response_Output_ResponseType() {
}

func (*CMsgSteamLearn_InferenceBackend_Response_Output_MultiBinaryCrossentropy) isCMsgSteamLearn_InferenceBackend_Response_Output_ResponseType() {
}

func (*CMsgSteamLearn_InferenceBackend_Response_Output_Regression) isCMsgSteamLearn_InferenceBackend_Response_Output_ResponseType() {
}

func (*CMsgSteamLearn_InferenceBackend_Response_Output_NamedInference) isCMsgSteamLearn_InferenceBackend_Response_Output_ResponseType() {
}

var File_steammessages_steamlearn_steamworkssdk_proto protoreflect.FileDescriptor

const file_steammessages_steamlearn_steamworkssdk_proto_rawDesc = "" +
	"\n" +
	",steammessages_steamlearn.steamworkssdk.proto\x12\bprotocol\x1a.steammessages_unified_base.steamworkssdk.proto\"o\n" +
	"\"CMsgSteamLearnDataSourceDescObject\x12I\n" +
	"\belements\x18\x01 \x03(\v2-.protocol.CMsgSteamLearnDataSourceDescElementR\belements\"\xee\x01\n" +
	"#CMsgSteamLearnDataSourceDescElement\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12W\n" +
	"\tdata_type\x18\x02 \x01(\x0e2\x1d.protocol.ESteamLearnDataType:\x1bSTEAMLEARN_DATATYPE_INVALIDR\bdataType\x12D\n" +
	"\x06object\x18\x03 \x01(\v2,.protocol.CMsgSteamLearnDataSourceDescObjectR\x06object\x12\x14\n" +
	"\x05count\x18\x04 \x01(\rR\x05count\"\xae\x02\n" +
	"\x18CMsgSteamLearnDataSource\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x03 \x01(\rR\aversion\x12-\n" +
	"\x12source_description\x18\x04 \x01(\tR\x11sourceDescription\x12J\n" +
	"\tstructure\x18\x05 \x01(\v2,.protocol.CMsgSteamLearnDataSourceDescObjectR\tstructure\x12#\n" +
	"\rstructure_crc\x18\x06 \x01(\rR\fstructureCrc\x124\n" +
	"\x16cache_duration_seconds\x18\a \x01(\rR\x14cacheDurationSeconds\"[\n" +
	"\x18CMsgSteamLearnDataObject\x12?\n" +
	"\belements\x18\x01 \x03(\v2#.protocol.CMsgSteamLearnDataElementR\belements\"\xfa\x01\n" +
	"\x19CMsgSteamLearnDataElement\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n" +
	"\vdata_int32s\x18\x14 \x03(\x05R\n" +
	"dataInt32s\x12\x1f\n" +
	"\vdata_floats\x18\x15 \x03(\x02R\n" +
	"dataFloats\x12\x1d\n" +
	"\n" +
	"data_bools\x18\x16 \x03(\bR\tdataBools\x12!\n" +
	"\fdata_strings\x18\x17 \x03(\tR\vdataStrings\x12E\n" +
	"\fdata_objects\x18\x18 \x03(\v2\".protocol.CMsgSteamLearnDataObjectR\vdataObjects\"\x93\x01\n" +
	"\x12CMsgSteamLearnData\x12$\n" +
	"\x0edata_source_id\x18\x01 \x01(\rR\fdataSourceId\x12\x12\n" +
	"\x04keys\x18\x02 \x03(\x04R\x04keys\x12C\n" +
	"\vdata_object\x18\x03 \x01(\v2\".protocol.CMsgSteamLearnDataObjectR\n" +
	"dataObject\"J\n" +
	"\x16CMsgSteamLearnDataList\x120\n" +
	"\x04data\x18\x01 \x03(\v2\x1c.protocol.CMsgSteamLearnDataR\x04data\"\x93\x01\n" +
	")CMsgSteamLearn_RegisterDataSource_Request\x12!\n" +
	"\faccess_token\x18\x01 \x01(\tR\vaccessToken\x12C\n" +
	"\vdata_source\x18\x03 \x01(\v2\".protocol.CMsgSteamLearnDataSourceR\n" +
	"dataSource\"\xe7\x01\n" +
	"*CMsgSteamLearn_RegisterDataSource_Response\x12t\n" +
	"\x06result\x18\x01 \x01(\x0e2..protocol.ESteammLearnRegisterDataSourceResult:,STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERRORR\x06result\x12C\n" +
	"\vdata_source\x18\x02 \x01(\v2\".protocol.CMsgSteamLearnDataSourceR\n" +
	"dataSource\"w\n" +
	" CMsgSteamLearn_CacheData_Request\x12!\n" +
	"\faccess_token\x18\x01 \x01(\tR\vaccessToken\x120\n" +
	"\x04data\x18\x03 \x01(\v2\x1c.protocol.CMsgSteamLearnDataR\x04data\"\x92\x01\n" +
	"!CMsgSteamLearn_CacheData_Response\x12m\n" +
	"\x11cache_data_result\x18\x01 \x01(\x0e2$.protocol.ESteamLearnCacheDataResult:\x1bSTEAMLEARN_CACHE_DATA_ERRORR\x0fcacheDataResult\"\x9a\x02\n" +
	"&CMsgSteamLearn_SnapshotProject_Request\x12!\n" +
	"\faccess_token\x18\x01 \x01(\tR\vaccessToken\x12\x1d\n" +
	"\n" +
	"project_id\x18\x03 \x01(\rR\tprojectId\x12+\n" +
	"\x11published_version\x18\a \x01(\rR\x10publishedVersion\x12\x12\n" +
	"\x04keys\x18\x04 \x03(\x04R\x04keys\x120\n" +
	"\x04data\x18\x05 \x03(\v2\x1c.protocol.CMsgSteamLearnDataR\x04data\x12;\n" +
	"\x1apending_data_limit_seconds\x18\x06 \x01(\rR\x17pendingDataLimitSeconds\"\xa1\x01\n" +
	"'CMsgSteamLearn_SnapshotProject_Response\x12v\n" +
	"\x0fsnapshot_result\x18\x01 \x01(\x0e2*.protocol.ESteamLearnSnapshotProjectResult:!STEAMLEARN_SNAPSHOT_PROJECT_ERRORR\x0esnapshotResult\"\xbd\x02\n" +
	"%CMsgSteamLearn_BatchOperation_Request\x12Z\n" +
	"\x13cache_data_requests\x18\x01 \x03(\v2*.protocol.CMsgSteamLearn_CacheData_RequestR\x11cacheDataRequests\x12]\n" +
	"\x11snapshot_requests\x18\x02 \x03(\v20.protocol.CMsgSteamLearn_SnapshotProject_RequestR\x10snapshotRequests\x12Y\n" +
	"\x12inference_requests\x18\x03 \x03(\v2*.protocol.CMsgSteamLearn_Inference_RequestR\x11inferenceRequests\"\xc7\x02\n" +
	"&CMsgSteamLearn_BatchOperation_Response\x12]\n" +
	"\x14cache_data_responses\x18\x01 \x03(\v2+.protocol.CMsgSteamLearn_CacheData_ResponseR\x12cacheDataResponses\x12`\n" +
	"\x12snapshot_responses\x18\x02 \x03(\v21.protocol.CMsgSteamLearn_SnapshotProject_ResponseR\x11snapshotResponses\x12\\\n" +
	"\x13inference_responses\x18\x03 \x03(\v2+.protocol.CMsgSteamLearn_Inference_ResponseR\x12inferenceResponses\"\xef\x05\n" +
	"\x1aCMsgSteamLearnAccessTokens\x12H\n" +
	"!register_data_source_access_token\x18\x01 \x01(\tR\x1dregisterDataSourceAccessToken\x12r\n" +
	"\x18cache_data_access_tokens\x18\x02 \x03(\v29.protocol.CMsgSteamLearnAccessTokens.CacheDataAccessTokenR\x15cacheDataAccessTokens\x12\x84\x01\n" +
	"\x1esnapshot_project_access_tokens\x18\x03 \x03(\v2?.protocol.CMsgSteamLearnAccessTokens.SnapshotProjectAccessTokenR\x1bsnapshotProjectAccessTokens\x12q\n" +
	"\x17inference_access_tokens\x18\x04 \x03(\v29.protocol.CMsgSteamLearnAccessTokens.InferenceAccessTokenR\x15inferenceAccessTokens\x1a_\n" +
	"\x14CacheDataAccessToken\x12$\n" +
	"\x0edata_source_id\x18\x01 \x01(\rR\fdataSourceId\x12!\n" +
	"\faccess_token\x18\x02 \x01(\tR\vaccessToken\x1a^\n" +
	"\x1aSnapshotProjectAccessToken\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\rR\tprojectId\x12!\n" +
	"\faccess_token\x18\x02 \x01(\tR\vaccessToken\x1aX\n" +
	"\x14InferenceAccessToken\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\rR\tprojectId\x12!\n" +
	"\faccess_token\x18\x02 \x01(\tR\vaccessToken\">\n" +
	"&CMsgSteamLearn_GetAccessTokens_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\"\xdc\x01\n" +
	"'CMsgSteamLearn_GetAccessTokens_Response\x12f\n" +
	"\x06result\x18\x01 \x01(\x0e2*.protocol.ESteamLearnGetAccessTokensResult:\"STEAMLEARN_GET_ACCESS_TOKENS_ERRORR\x06result\x12I\n" +
	"\raccess_tokens\x18\x02 \x01(\v2$.protocol.CMsgSteamLearnAccessTokensR\faccessTokens\"\xdb\x03\n" +
	"\x1eCMsgInferenceIterateBeamSearch\x12\x1f\n" +
	"\vbeam_length\x18\x01 \x01(\rR\n" +
	"beamLength\x12\x1d\n" +
	"\n" +
	"beam_width\x18\x02 \x01(\rR\tbeamWidth\x12\x1d\n" +
	"\n" +
	"item_decay\x18\x03 \x01(\x02R\titemDecay\x12&\n" +
	"\x0fnext_item_count\x18\x04 \x01(\rR\rnextItemCount\x12\\\n" +
	"\fitem_scalars\x18\x05 \x03(\v29.protocol.CMsgInferenceIterateBeamSearch.CustomItemScalarR\vitemScalars\x12*\n" +
	"\x11item_sequence_end\x18\a \x01(\rR\x0fitemSequenceEnd\x12=\n" +
	"\x1bitem_sequence_end_threshold\x18\b \x01(\x02R\x18itemSequenceEndThreshold\x12+\n" +
	"\x11repeat_multiplier\x18\t \x01(\x02R\x10repeatMultiplier\x1a<\n" +
	"\x10CustomItemScalar\x12\x12\n" +
	"\x04item\x18\x01 \x01(\rR\x04item\x12\x14\n" +
	"\x05scale\x18\x02 \x01(\x02R\x05scale\"\xd2\x03\n" +
	" CMsgSteamLearn_Inference_Request\x12!\n" +
	"\faccess_token\x18\x01 \x01(\tR\vaccessToken\x12\x1d\n" +
	"\n" +
	"project_id\x18\x03 \x01(\rR\tprojectId\x12+\n" +
	"\x11published_version\x18\x04 \x01(\rR\x10publishedVersion\x12*\n" +
	"\x11override_train_id\x18\x05 \x01(\rR\x0foverrideTrainId\x124\n" +
	"\x04data\x18\x06 \x01(\v2 .protocol.CMsgSteamLearnDataListR\x04data\x12'\n" +
	"\x0fadditional_data\x18\a \x03(\x02R\x0eadditionalData\x12\x12\n" +
	"\x04keys\x18\b \x03(\x04R\x04keys\x12'\n" +
	"\x0fnamed_inference\x18\t \x01(\tR\x0enamedInference\x12X\n" +
	"\x13iterate_beam_search\x18\r \x01(\v2(.protocol.CMsgInferenceIterateBeamSearchR\x11iterateBeamSearch\x12\x1d\n" +
	"\n" +
	"debug_spew\x18\x0e \x01(\rR\tdebugSpew\"\xc5\x01\n" +
	"(CMsgSteamLearn_InferenceMetadata_Request\x12!\n" +
	"\faccess_token\x18\x01 \x01(\tR\vaccessToken\x12\x1d\n" +
	"\n" +
	"project_id\x18\x03 \x01(\rR\tprojectId\x12+\n" +
	"\x11published_version\x18\x04 \x01(\rR\x10publishedVersion\x12*\n" +
	"\x11override_train_id\x18\x05 \x01(\rR\x0foverrideTrainId\"k\n" +
	"/CMsgSteamLearn_InferenceMetadataBackend_Request\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\rR\tprojectId\x12\x19\n" +
	"\bfetch_id\x18\x02 \x01(\rR\afetchId\"\xe8\x19\n" +
	")CMsgSteamLearn_InferenceMetadata_Response\x12\x8d\x01\n" +
	"\x19inference_metadata_result\x18\x01 \x01(\x0e2,.protocol.ESteamLearnInferenceMetadataResult:#STEAMLEARN_INFERENCE_METADATA_ERRORR\x17inferenceMetadataResult\x12Y\n" +
	"\trow_range\x18\x02 \x01(\v2<.protocol.CMsgSteamLearn_InferenceMetadata_Response.RowRangeR\browRange\x12Q\n" +
	"\x06ranges\x18\x03 \x03(\v29.protocol.CMsgSteamLearn_InferenceMetadata_Response.RangeR\x06ranges\x12U\n" +
	"\bstd_devs\x18\x04 \x03(\v2:.protocol.CMsgSteamLearn_InferenceMetadata_Response.StdDevR\astdDevs\x12g\n" +
	"\x0ecompact_tables\x18\x05 \x03(\v2@.protocol.CMsgSteamLearn_InferenceMetadata_Response.CompactTableR\rcompactTables\x12j\n" +
	"\x0fsequence_tables\x18\t \x03(\v2A.protocol.CMsgSteamLearn_InferenceMetadata_Response.SequenceTableR\x0esequenceTables\x12R\n" +
	"\x06kmeans\x18\x06 \x03(\v2:.protocol.CMsgSteamLearn_InferenceMetadata_Response.KMeansR\x06kmeans\x12[\n" +
	"\bapp_info\x18\b \x03(\v2@.protocol.CMsgSteamLearn_InferenceMetadata_Response.AppInfoEntryR\aappInfo\x12t\n" +
	"\x12snapshot_histogram\x18\a \x01(\v2E.protocol.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogramR\x11snapshotHistogram\x1a<\n" +
	"\bRowRange\x12\x17\n" +
	"\amin_row\x18\x01 \x01(\x04R\x06minRow\x12\x17\n" +
	"\amax_row\x18\x02 \x01(\x04R\x06maxRow\x1am\n" +
	"\x05Range\x12*\n" +
	"\x11data_element_path\x18\x01 \x01(\tR\x0fdataElementPath\x12\x1b\n" +
	"\tmin_value\x18\x02 \x01(\x02R\bminValue\x12\x1b\n" +
	"\tmax_value\x18\x03 \x01(\x02R\bmaxValue\x1aa\n" +
	"\x06StdDev\x12*\n" +
	"\x11data_element_path\x18\x01 \x01(\tR\x0fdataElementPath\x12\x12\n" +
	"\x04mean\x18\x02 \x01(\x02R\x04mean\x12\x17\n" +
	"\astd_dev\x18\x03 \x01(\x02R\x06stdDev\x1a\xdf\x04\n" +
	"\fCompactTable\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12n\n" +
	"\n" +
	"map_values\x18\x02 \x03(\v2O.protocol.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntryR\tmapValues\x12t\n" +
	"\fmap_mappings\x18\x03 \x03(\v2Q.protocol.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntryR\vmapMappings\x1aM\n" +
	"\x05Entry\x12\x14\n" +
	"\x05value\x18\x01 \x01(\rR\x05value\x12\x18\n" +
	"\amapping\x18\x02 \x01(\rR\amapping\x12\x14\n" +
	"\x05count\x18\x03 \x01(\x04R\x05count\x1a\x80\x01\n" +
	"\x0eMapValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\\\n" +
	"\x05value\x18\x02 \x01(\v2F.protocol.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.EntryR\x05value\x1a\x82\x01\n" +
	"\x10MapMappingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\\\n" +
	"\x05value\x18\x02 \x01(\v2F.protocol.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.EntryR\x05value\x1a\xff\x04\n" +
	"\rSequenceTable\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12o\n" +
	"\n" +
	"map_values\x18\x02 \x03(\v2P.protocol.CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.MapValuesEntryR\tmapValues\x12u\n" +
	"\fmap_mappings\x18\x03 \x03(\v2R.protocol.CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.MapMappingsEntryR\vmapMappings\x12\x1f\n" +
	"\vtotal_count\x18\x04 \x01(\x04R\n" +
	"totalCount\x1aG\n" +
	"\x05Entry\x12\x16\n" +
	"\x06values\x18\x01 \x03(\rR\x06values\x12\x10\n" +
	"\x03crc\x18\x02 \x01(\rR\x03crc\x12\x14\n" +
	"\x05count\x18\x03 \x01(\rR\x05count\x1a\x81\x01\n" +
	"\x0eMapValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12]\n" +
	"\x05value\x18\x02 \x01(\v2G.protocol.CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.EntryR\x05value\x1a\x83\x01\n" +
	"\x10MapMappingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12]\n" +
	"\x05value\x18\x02 \x01(\v2G.protocol.CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.EntryR\x05value\x1a\xa5\x02\n" +
	"\x06KMeans\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12^\n" +
	"\bclusters\x18\x02 \x03(\v2B.protocol.CMsgSteamLearn_InferenceMetadata_Response.KMeans.ClusterR\bclusters\x1a\xa6\x01\n" +
	"\aCluster\x12\f\n" +
	"\x01x\x18\x01 \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x02R\x01y\x12\x16\n" +
	"\x06radius\x18\x03 \x01(\x02R\x06radius\x12!\n" +
	"\fradius_75pct\x18\x04 \x01(\x02R\vradius75pct\x12!\n" +
	"\fradius_50pct\x18\x05 \x01(\x02R\vradius50pct\x12!\n" +
	"\fradius_25pct\x18\x06 \x01(\x02R\vradius25pct\x1a\x93\x01\n" +
	"\x11SnapshotHistogram\x12\x1b\n" +
	"\tmin_value\x18\x01 \x01(\x02R\bminValue\x12\x1b\n" +
	"\tmax_value\x18\x02 \x01(\x02R\bmaxValue\x12\x1f\n" +
	"\vnum_buckets\x18\x03 \x01(\rR\n" +
	"numBuckets\x12#\n" +
	"\rbucket_counts\x18\x04 \x03(\rR\fbucketCounts\x1a\x82\x02\n" +
	"\aAppInfo\x12#\n" +
	"\rcountry_allow\x18\x01 \x01(\tR\fcountryAllow\x12!\n" +
	"\fcountry_deny\x18\x02 \x01(\tR\vcountryDeny\x12!\n" +
	"\fplatform_win\x18\x03 \x01(\bR\vplatformWin\x12!\n" +
	"\fplatform_mac\x18\x04 \x01(\bR\vplatformMac\x12%\n" +
	"\x0eplatform_linux\x18\x05 \x01(\bR\rplatformLinux\x12%\n" +
	"\x0eadult_violence\x18\x06 \x01(\bR\radultViolence\x12\x1b\n" +
	"\tadult_sex\x18\a \x01(\bR\badultSex\x1as\n" +
	"\fAppInfoEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12Q\n" +
	"\x05value\x18\x02 \x01(\v2;.protocol.CMsgSteamLearn_InferenceMetadata_Response.AppInfoR\x05value\"\xaa\n" +
	"\n" +
	"(CMsgSteamLearn_InferenceBackend_Response\x12S\n" +
	"\aoutputs\x18\x01 \x03(\v29.protocol.CMsgSteamLearn_InferenceBackend_Response.OutputR\aoutputs\x1a \n" +
	"\bSequence\x12\x14\n" +
	"\x05value\x18\x01 \x03(\x02R\x05value\x1a(\n" +
	"\x10RegressionOutput\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value\x1a,\n" +
	"\x14NamedInferenceOutput\x12\x14\n" +
	"\x05value\x18\x03 \x03(\x02R\x05value\x1a0\n" +
	"\x18BinaryCrossEntropyOutput\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x02R\x05value\x1a\xb1\x01\n" +
	"\x1dMutliBinaryCrossEntropyOutput\x12\x16\n" +
	"\x06weight\x18\x01 \x03(\x02R\x06weight\x12\x14\n" +
	"\x05value\x18\x02 \x03(\x02R\x05value\x12b\n" +
	"\x0evalue_sequence\x18\x03 \x03(\v2;.protocol.CMsgSteamLearn_InferenceBackend_Response.SequenceR\rvalueSequence\x1a\xb1\x01\n" +
	"\x1dCategoricalCrossEntropyOutput\x12\x16\n" +
	"\x06weight\x18\x01 \x03(\x02R\x06weight\x12\x14\n" +
	"\x05value\x18\x02 \x03(\x02R\x05value\x12b\n" +
	"\x0evalue_sequence\x18\x03 \x03(\v2;.protocol.CMsgSteamLearn_InferenceBackend_Response.SequenceR\rvalueSequence\x1a\x94\x05\n" +
	"\x06Output\x12~\n" +
	"\x13binary_crossentropy\x18\x01 \x01(\v2K.protocol.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutputH\x00R\x12binaryCrossentropy\x12\x8d\x01\n" +
	"\x18categorical_crossentropy\x18\x02 \x01(\v2P.protocol.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutputH\x00R\x17categoricalCrossentropy\x12\x8e\x01\n" +
	"\x19multi_binary_crossentropy\x18\x03 \x01(\v2P.protocol.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutputH\x00R\x17multiBinaryCrossentropy\x12e\n" +
	"\n" +
	"regression\x18\x04 \x01(\v2C.protocol.CMsgSteamLearn_InferenceBackend_Response.RegressionOutputH\x00R\n" +
	"regression\x12r\n" +
	"\x0fnamed_inference\x18\x05 \x01(\v2G.protocol.CMsgSteamLearn_InferenceBackend_Response.NamedInferenceOutputH\x00R\x0enamedInferenceB\x0e\n" +
	"\fResponseType\"\x83\x02\n" +
	"!CMsgSteamLearn_Inference_Response\x12k\n" +
	"\x10inference_result\x18\x01 \x01(\x0e2$.protocol.ESteamLearnInferenceResult:\x1aSTEAMLEARN_INFERENCE_ERRORR\x0finferenceResult\x12]\n" +
	"\x10backend_response\x18\x02 \x01(\v22.protocol.CMsgSteamLearn_InferenceBackend_ResponseR\x0fbackendResponse\x12\x12\n" +
	"\x04keys\x18\x03 \x03(\x04R\x04keys*\xd4\x01\n" +
	"\x13ESteamLearnDataType\x12\x1f\n" +
	"\x1bSTEAMLEARN_DATATYPE_INVALID\x10\x00\x12\x1d\n" +
	"\x19STEAMLEARN_DATATYPE_INT32\x10\x01\x12\x1f\n" +
	"\x1bSTEAMLEARN_DATATYPE_FLOAT32\x10\x02\x12\x1c\n" +
	"\x18STEAMLEARN_DATATYPE_BOOL\x10\x03\x12\x1e\n" +
	"\x1aSTEAMLEARN_DATATYPE_STRING\x10\x04\x12\x1e\n" +
	"\x1aSTEAMLEARN_DATATYPE_OBJECT\x10\x05*\xbc\x05\n" +
	"$ESteammLearnRegisterDataSourceResult\x120\n" +
	",STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR\x10\x00\x12:\n" +
	"6STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_CREATED\x10\x01\x128\n" +
	"4STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_SUCCESS_FOUND\x10\x02\x128\n" +
	"4STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_GENERIC\x10\x03\x12=\n" +
	"9STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_NAME\x10\x04\x12@\n" +
	"<STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_VERSION\x10\x05\x12=\n" +
	"9STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_CHANGED\x10\x06\x12=\n" +
	"9STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_DATA_INVALID\x10\a\x12:\n" +
	"6STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_FORBIDDEN\x10\b\x12B\n" +
	">STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_ERROR_INVALID_TIMESTAMP\x10\t\x123\n" +
	"/STEAMLEARN_REGISTER_DATA_SOURCE_RESULT_DISABLED\x10\n" +
	"*\xfb\x02\n" +
	"\x1aESteamLearnCacheDataResult\x12\x1f\n" +
	"\x1bSTEAMLEARN_CACHE_DATA_ERROR\x10\x00\x12!\n" +
	"\x1dSTEAMLEARN_CACHE_DATA_SUCCESS\x10\x01\x123\n" +
	"/STEAMLEARN_CACHE_DATA_ERROR_UNKNOWN_DATA_SOURCE\x10\x02\x124\n" +
	"0STEAMLEARN_CACHE_DATA_ERROR_UNCACHED_DATA_SOURCE\x10\x03\x12,\n" +
	"(STEAMLEARN_CACHE_DATA_ERROR_INVALID_KEYS\x10\x04\x12)\n" +
	"%STEAMLEARN_CACHE_DATA_ERROR_FORBIDDEN\x10\x05\x121\n" +
	"-STEAMLEARN_CACHE_DATA_ERROR_INVALID_TIMESTAMP\x10\x06\x12\"\n" +
	"\x1eSTEAMLEARN_CACHE_DATA_DISABLED\x10\a*\xed\x05\n" +
	" ESteamLearnSnapshotProjectResult\x12%\n" +
	"!STEAMLEARN_SNAPSHOT_PROJECT_ERROR\x10\x00\x12.\n" +
	"*STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_STORED\x10\x01\x12.\n" +
	"*STEAMLEARN_SNAPSHOT_PROJECT_SUCCESS_QUEUED\x10\x02\x128\n" +
	"4STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PROJECT_ID\x10\x03\x129\n" +
	"5STEAMLEARN_SNAPSHOT_PROJECT_ERROR_UNKNOWN_DATA_SOURCE\x10\x04\x12=\n" +
	"9STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_DATA_SOURCE_KEY\x10\x05\x12<\n" +
	"8STEAMLEARN_SNAPSHOT_PROJECT_ERROR_MISSING_CACHE_DURATION\x10\x06\x129\n" +
	"5STEAMLEARN_SNAPSHOT_PROJECT_ERROR_NO_PUBLISHED_CONFIG\x10\a\x12/\n" +
	"+STEAMLEARN_SNAPSHOT_PROJECT_ERROR_FORBIDDEN\x10\b\x127\n" +
	"3STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_TIMESTAMP\x10\t\x12@\n" +
	"<STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INTERNAL_DATA_SOURCE_ERROR\x10\n" +
	"\x12(\n" +
	"$STEAMLEARN_SNAPSHOT_PROJECT_DISABLED\x10\v\x12?\n" +
	";STEAMLEARN_SNAPSHOT_PROJECT_ERROR_INVALID_PUBLISHED_VERSION\x10\f*t\n" +
	" ESteamLearnGetAccessTokensResult\x12&\n" +
	"\"STEAMLEARN_GET_ACCESS_TOKENS_ERROR\x10\x00\x12(\n" +
	"$STEAMLEARN_GET_ACCESS_TOKENS_SUCCESS\x10\x01*\xe3\x05\n" +
	"\x1aESteamLearnInferenceResult\x12\x1e\n" +
	"\x1aSTEAMLEARN_INFERENCE_ERROR\x10\x00\x12 \n" +
	"\x1cSTEAMLEARN_INFERENCE_SUCCESS\x10\x01\x121\n" +
	"-STEAMLEARN_INFERENCE_ERROR_INVALID_PROJECT_ID\x10\x02\x129\n" +
	"5STEAMLEARN_INFERENCE_ERROR_MISSING_CACHED_SCHEMA_DATA\x10\x03\x122\n" +
	".STEAMLEARN_INFERENCE_ERROR_NO_PUBLISHED_CONFIG\x10\x04\x12(\n" +
	"$STEAMLEARN_INFERENCE_ERROR_FORBIDDEN\x10\x05\x120\n" +
	",STEAMLEARN_INFERENCE_ERROR_INVALID_TIMESTAMP\x10\x06\x128\n" +
	"4STEAMLEARN_INFERENCE_ERROR_INVALID_PUBLISHED_VERSION\x10\a\x120\n" +
	",STEAMLEARN_INFERENCE_ERROR_NO_FETCH_ID_FOUND\x10\b\x12'\n" +
	"#STEAMLEARN_INFERENCE_ERROR_TOO_BUSY\x10\t\x123\n" +
	"/STEAMLEARN_INFERENCE_ERROR_UNSUPPLIED_DATA_FAIL\x10\n" +
	"\x126\n" +
	"2STEAMLEARN_INFERENCE_ERROR_UNSUPPLIED_DATA_NO_KEYS\x10\v\x12!\n" +
	"\x1dSTEAMLEARN_INFERENCE_DISABLED\x10\f\x12(\n" +
	"$STEAMLEARN_INFERENCE_ERROR_NO_OUTPUT\x10\r\x126\n" +
	"2STEAMLEARN_INFERENCE_ERROR_INVALID_NAMED_INFERENCE\x10\x0e*\xdd\x03\n" +
	"\"ESteamLearnInferenceMetadataResult\x12'\n" +
	"#STEAMLEARN_INFERENCE_METADATA_ERROR\x10\x00\x12)\n" +
	"%STEAMLEARN_INFERENCE_METADATA_SUCCESS\x10\x01\x12:\n" +
	"6STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PROJECT_ID\x10\x02\x12;\n" +
	"7STEAMLEARN_INFERENCE_METADATA_ERROR_NO_PUBLISHED_CONFIG\x10\x03\x121\n" +
	"-STEAMLEARN_INFERENCE_METADATA_ERROR_FORBIDDEN\x10\x04\x129\n" +
	"5STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_TIMESTAMP\x10\x05\x12A\n" +
	"=STEAMLEARN_INFERENCE_METADATA_ERROR_INVALID_PUBLISHED_VERSION\x10\x06\x129\n" +
	"5STEAMLEARN_INFERENCE_METADATA_ERROR_NO_FETCH_ID_FOUND\x10\a2\x92\v\n" +
	"\n" +
	"SteamLearn\x12\xcd\x01\n" +
	"\x12RegisterDataSource\x123.protocol.CMsgSteamLearn_RegisterDataSource_Request\x1a4.protocol.CMsgSteamLearn_RegisterDataSource_Response\"L\x82\xb5\x18HRegisters a data desc (or finds a data desc if it's already registered).\x12\x86\x01\n" +
	"\tCacheData\x12*.protocol.CMsgSteamLearn_CacheData_Request\x1a+.protocol.CMsgSteamLearn_CacheData_Response\" \x82\xb5\x18\x1cUpdates a cached data entry.\x12\xa5\x01\n" +
	"\x0fSnapshotProject\x120.protocol.CMsgSteamLearn_SnapshotProject_Request\x1a1.protocol.CMsgSteamLearn_SnapshotProject_Response\"-\x82\xb5\x18)Snapshots the current data for a project.\x12\xcc\x01\n" +
	"\x0eBatchOperation\x12/.protocol.CMsgSteamLearn_BatchOperation_Request\x1a0.protocol.CMsgSteamLearn_BatchOperation_Response\"W\x82\xb5\x18SBatches multiple data updates, snapshots, and inference requests into a single call\x12\xea\x01\n" +
	"\x0fGetAccessTokens\x120.protocol.CMsgSteamLearn_GetAccessTokens_Request\x1a1.protocol.CMsgSteamLearn_GetAccessTokens_Response\"r\x82\xb5\x18nGets the access tokens needed for registering data sources, submitting data to them, and snapshotting projects\x12\xb4\x01\n" +
	"\tInference\x12*.protocol.CMsgSteamLearn_Inference_Request\x1a+.protocol.CMsgSteamLearn_Inference_Response\"N\x82\xb5\x18JInferences using supplied data, or data associated with the specified key.\x12\xc2\x01\n" +
	"\x11InferenceMetadata\x122.protocol.CMsgSteamLearn_InferenceMetadata_Request\x1a3.protocol.CMsgSteamLearn_InferenceMetadata_Response\"D\x82\xb5\x18@Requests the metadata that was generated from a specified fetch.\x1aK\x82\xb5\x18GService for submitting data, training, and inferencing with SteamLearn."

var (
	file_steammessages_steamlearn_steamworkssdk_proto_rawDescOnce sync.Once
	file_steammessages_steamlearn_steamworkssdk_proto_rawDescData []byte
)

func file_steammessages_steamlearn_steamworkssdk_proto_rawDescGZIP() []byte {
	file_steammessages_steamlearn_steamworkssdk_proto_rawDescOnce.Do(func() {
		file_steammessages_steamlearn_steamworkssdk_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_steammessages_steamlearn_steamworkssdk_proto_rawDesc), len(file_steammessages_steamlearn_steamworkssdk_proto_rawDesc)))
	})
	return file_steammessages_steamlearn_steamworkssdk_proto_rawDescData
}

var file_steammessages_steamlearn_steamworkssdk_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_steammessages_steamlearn_steamworkssdk_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_steammessages_steamlearn_steamworkssdk_proto_goTypes = []any{
	(ESteamLearnDataType)(0),                                                         // 0: protocol.ESteamLearnDataType
	(ESteammLearnRegisterDataSourceResult)(0),                                        // 1: protocol.ESteammLearnRegisterDataSourceResult
	(ESteamLearnCacheDataResult)(0),                                                  // 2: protocol.ESteamLearnCacheDataResult
	(ESteamLearnSnapshotProjectResult)(0),                                            // 3: protocol.ESteamLearnSnapshotProjectResult
	(ESteamLearnGetAccessTokensResult)(0),                                            // 4: protocol.ESteamLearnGetAccessTokensResult
	(ESteamLearnInferenceResult)(0),                                                  // 5: protocol.ESteamLearnInferenceResult
	(ESteamLearnInferenceMetadataResult)(0),                                          // 6: protocol.ESteamLearnInferenceMetadataResult
	(*CMsgSteamLearnDataSourceDescObject)(nil),                                       // 7: protocol.CMsgSteamLearnDataSourceDescObject
	(*CMsgSteamLearnDataSourceDescElement)(nil),                                      // 8: protocol.CMsgSteamLearnDataSourceDescElement
	(*CMsgSteamLearnDataSource)(nil),                                                 // 9: protocol.CMsgSteamLearnDataSource
	(*CMsgSteamLearnDataObject)(nil),                                                 // 10: protocol.CMsgSteamLearnDataObject
	(*CMsgSteamLearnDataElement)(nil),                                                // 11: protocol.CMsgSteamLearnDataElement
	(*CMsgSteamLearnData)(nil),                                                       // 12: protocol.CMsgSteamLearnData
	(*CMsgSteamLearnDataList)(nil),                                                   // 13: protocol.CMsgSteamLearnDataList
	(*CMsgSteamLearn_RegisterDataSource_Request)(nil),                                // 14: protocol.CMsgSteamLearn_RegisterDataSource_Request
	(*CMsgSteamLearn_RegisterDataSource_Response)(nil),                               // 15: protocol.CMsgSteamLearn_RegisterDataSource_Response
	(*CMsgSteamLearn_CacheData_Request)(nil),                                         // 16: protocol.CMsgSteamLearn_CacheData_Request
	(*CMsgSteamLearn_CacheData_Response)(nil),                                        // 17: protocol.CMsgSteamLearn_CacheData_Response
	(*CMsgSteamLearn_SnapshotProject_Request)(nil),                                   // 18: protocol.CMsgSteamLearn_SnapshotProject_Request
	(*CMsgSteamLearn_SnapshotProject_Response)(nil),                                  // 19: protocol.CMsgSteamLearn_SnapshotProject_Response
	(*CMsgSteamLearn_BatchOperation_Request)(nil),                                    // 20: protocol.CMsgSteamLearn_BatchOperation_Request
	(*CMsgSteamLearn_BatchOperation_Response)(nil),                                   // 21: protocol.CMsgSteamLearn_BatchOperation_Response
	(*CMsgSteamLearnAccessTokens)(nil),                                               // 22: protocol.CMsgSteamLearnAccessTokens
	(*CMsgSteamLearn_GetAccessTokens_Request)(nil),                                   // 23: protocol.CMsgSteamLearn_GetAccessTokens_Request
	(*CMsgSteamLearn_GetAccessTokens_Response)(nil),                                  // 24: protocol.CMsgSteamLearn_GetAccessTokens_Response
	(*CMsgInferenceIterateBeamSearch)(nil),                                           // 25: protocol.CMsgInferenceIterateBeamSearch
	(*CMsgSteamLearn_Inference_Request)(nil),                                         // 26: protocol.CMsgSteamLearn_Inference_Request
	(*CMsgSteamLearn_InferenceMetadata_Request)(nil),                                 // 27: protocol.CMsgSteamLearn_InferenceMetadata_Request
	(*CMsgSteamLearn_InferenceMetadataBackend_Request)(nil),                          // 28: protocol.CMsgSteamLearn_InferenceMetadataBackend_Request
	(*CMsgSteamLearn_InferenceMetadata_Response)(nil),                                // 29: protocol.CMsgSteamLearn_InferenceMetadata_Response
	(*CMsgSteamLearn_InferenceBackend_Response)(nil),                                 // 30: protocol.CMsgSteamLearn_InferenceBackend_Response
	(*CMsgSteamLearn_Inference_Response)(nil),                                        // 31: protocol.CMsgSteamLearn_Inference_Response
	(*CMsgSteamLearnAccessTokens_CacheDataAccessToken)(nil),                          // 32: protocol.CMsgSteamLearnAccessTokens.CacheDataAccessToken
	(*CMsgSteamLearnAccessTokens_SnapshotProjectAccessToken)(nil),                    // 33: protocol.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken
	(*CMsgSteamLearnAccessTokens_InferenceAccessToken)(nil),                          // 34: protocol.CMsgSteamLearnAccessTokens.InferenceAccessToken
	(*CMsgInferenceIterateBeamSearch_CustomItemScalar)(nil),                          // 35: protocol.CMsgInferenceIterateBeamSearch.CustomItemScalar
	(*CMsgSteamLearn_InferenceMetadata_Response_RowRange)(nil),                       // 36: protocol.CMsgSteamLearn_InferenceMetadata_Response.RowRange
	(*CMsgSteamLearn_InferenceMetadata_Response_Range)(nil),                          // 37: protocol.CMsgSteamLearn_InferenceMetadata_Response.Range
	(*CMsgSteamLearn_InferenceMetadata_Response_StdDev)(nil),                         // 38: protocol.CMsgSteamLearn_InferenceMetadata_Response.StdDev
	(*CMsgSteamLearn_InferenceMetadata_Response_CompactTable)(nil),                   // 39: protocol.CMsgSteamLearn_InferenceMetadata_Response.CompactTable
	(*CMsgSteamLearn_InferenceMetadata_Response_SequenceTable)(nil),                  // 40: protocol.CMsgSteamLearn_InferenceMetadata_Response.SequenceTable
	(*CMsgSteamLearn_InferenceMetadata_Response_KMeans)(nil),                         // 41: protocol.CMsgSteamLearn_InferenceMetadata_Response.KMeans
	(*CMsgSteamLearn_InferenceMetadata_Response_SnapshotHistogram)(nil),              // 42: protocol.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram
	(*CMsgSteamLearn_InferenceMetadata_Response_AppInfo)(nil),                        // 43: protocol.CMsgSteamLearn_InferenceMetadata_Response.AppInfo
	(*CMsgSteamLearn_InferenceMetadata_Response_AppInfoEntry)(nil),                   // 44: protocol.CMsgSteamLearn_InferenceMetadata_Response.AppInfoEntry
	(*CMsgSteamLearn_InferenceMetadata_Response_CompactTable_Entry)(nil),             // 45: protocol.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry
	(*CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapValuesEntry)(nil),    // 46: protocol.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry
	(*CMsgSteamLearn_InferenceMetadata_Response_CompactTable_MapMappingsEntry)(nil),  // 47: protocol.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry
	(*CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_Entry)(nil),            // 48: protocol.CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.Entry
	(*CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapValuesEntry)(nil),   // 49: protocol.CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.MapValuesEntry
	(*CMsgSteamLearn_InferenceMetadata_Response_SequenceTable_MapMappingsEntry)(nil), // 50: protocol.CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.MapMappingsEntry
	(*CMsgSteamLearn_InferenceMetadata_Response_KMeans_Cluster)(nil),                 // 51: protocol.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster
	(*CMsgSteamLearn_InferenceBackend_Response_Sequence)(nil),                        // 52: protocol.CMsgSteamLearn_InferenceBackend_Response.Sequence
	(*CMsgSteamLearn_InferenceBackend_Response_RegressionOutput)(nil),                // 53: protocol.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput
	(*CMsgSteamLearn_InferenceBackend_Response_NamedInferenceOutput)(nil),            // 54: protocol.CMsgSteamLearn_InferenceBackend_Response.NamedInferenceOutput
	(*CMsgSteamLearn_InferenceBackend_Response_BinaryCrossEntropyOutput)(nil),        // 55: protocol.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput
	(*CMsgSteamLearn_InferenceBackend_Response_MutliBinaryCrossEntropyOutput)(nil),   // 56: protocol.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput
	(*CMsgSteamLearn_InferenceBackend_Response_CategoricalCrossEntropyOutput)(nil),   // 57: protocol.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput
	(*CMsgSteamLearn_InferenceBackend_Response_Output)(nil),                          // 58: protocol.CMsgSteamLearn_InferenceBackend_Response.Output
}
var file_steammessages_steamlearn_steamworkssdk_proto_depIdxs = []int32{
	8,  // 0: protocol.CMsgSteamLearnDataSourceDescObject.elements:type_name -> protocol.CMsgSteamLearnDataSourceDescElement
	0,  // 1: protocol.CMsgSteamLearnDataSourceDescElement.data_type:type_name -> protocol.ESteamLearnDataType
	7,  // 2: protocol.CMsgSteamLearnDataSourceDescElement.object:type_name -> protocol.CMsgSteamLearnDataSourceDescObject
	7,  // 3: protocol.CMsgSteamLearnDataSource.structure:type_name -> protocol.CMsgSteamLearnDataSourceDescObject
	11, // 4: protocol.CMsgSteamLearnDataObject.elements:type_name -> protocol.CMsgSteamLearnDataElement
	10, // 5: protocol.CMsgSteamLearnDataElement.data_objects:type_name -> protocol.CMsgSteamLearnDataObject
	10, // 6: protocol.CMsgSteamLearnData.data_object:type_name -> protocol.CMsgSteamLearnDataObject
	12, // 7: protocol.CMsgSteamLearnDataList.data:type_name -> protocol.CMsgSteamLearnData
	9,  // 8: protocol.CMsgSteamLearn_RegisterDataSource_Request.data_source:type_name -> protocol.CMsgSteamLearnDataSource
	1,  // 9: protocol.CMsgSteamLearn_RegisterDataSource_Response.result:type_name -> protocol.ESteammLearnRegisterDataSourceResult
	9,  // 10: protocol.CMsgSteamLearn_RegisterDataSource_Response.data_source:type_name -> protocol.CMsgSteamLearnDataSource
	12, // 11: protocol.CMsgSteamLearn_CacheData_Request.data:type_name -> protocol.CMsgSteamLearnData
	2,  // 12: protocol.CMsgSteamLearn_CacheData_Response.cache_data_result:type_name -> protocol.ESteamLearnCacheDataResult
	12, // 13: protocol.CMsgSteamLearn_SnapshotProject_Request.data:type_name -> protocol.CMsgSteamLearnData
	3,  // 14: protocol.CMsgSteamLearn_SnapshotProject_Response.snapshot_result:type_name -> protocol.ESteamLearnSnapshotProjectResult
	16, // 15: protocol.CMsgSteamLearn_BatchOperation_Request.cache_data_requests:type_name -> protocol.CMsgSteamLearn_CacheData_Request
	18, // 16: protocol.CMsgSteamLearn_BatchOperation_Request.snapshot_requests:type_name -> protocol.CMsgSteamLearn_SnapshotProject_Request
	26, // 17: protocol.CMsgSteamLearn_BatchOperation_Request.inference_requests:type_name -> protocol.CMsgSteamLearn_Inference_Request
	17, // 18: protocol.CMsgSteamLearn_BatchOperation_Response.cache_data_responses:type_name -> protocol.CMsgSteamLearn_CacheData_Response
	19, // 19: protocol.CMsgSteamLearn_BatchOperation_Response.snapshot_responses:type_name -> protocol.CMsgSteamLearn_SnapshotProject_Response
	31, // 20: protocol.CMsgSteamLearn_BatchOperation_Response.inference_responses:type_name -> protocol.CMsgSteamLearn_Inference_Response
	32, // 21: protocol.CMsgSteamLearnAccessTokens.cache_data_access_tokens:type_name -> protocol.CMsgSteamLearnAccessTokens.CacheDataAccessToken
	33, // 22: protocol.CMsgSteamLearnAccessTokens.snapshot_project_access_tokens:type_name -> protocol.CMsgSteamLearnAccessTokens.SnapshotProjectAccessToken
	34, // 23: protocol.CMsgSteamLearnAccessTokens.inference_access_tokens:type_name -> protocol.CMsgSteamLearnAccessTokens.InferenceAccessToken
	4,  // 24: protocol.CMsgSteamLearn_GetAccessTokens_Response.result:type_name -> protocol.ESteamLearnGetAccessTokensResult
	22, // 25: protocol.CMsgSteamLearn_GetAccessTokens_Response.access_tokens:type_name -> protocol.CMsgSteamLearnAccessTokens
	35, // 26: protocol.CMsgInferenceIterateBeamSearch.item_scalars:type_name -> protocol.CMsgInferenceIterateBeamSearch.CustomItemScalar
	13, // 27: protocol.CMsgSteamLearn_Inference_Request.data:type_name -> protocol.CMsgSteamLearnDataList
	25, // 28: protocol.CMsgSteamLearn_Inference_Request.iterate_beam_search:type_name -> protocol.CMsgInferenceIterateBeamSearch
	6,  // 29: protocol.CMsgSteamLearn_InferenceMetadata_Response.inference_metadata_result:type_name -> protocol.ESteamLearnInferenceMetadataResult
	36, // 30: protocol.CMsgSteamLearn_InferenceMetadata_Response.row_range:type_name -> protocol.CMsgSteamLearn_InferenceMetadata_Response.RowRange
	37, // 31: protocol.CMsgSteamLearn_InferenceMetadata_Response.ranges:type_name -> protocol.CMsgSteamLearn_InferenceMetadata_Response.Range
	38, // 32: protocol.CMsgSteamLearn_InferenceMetadata_Response.std_devs:type_name -> protocol.CMsgSteamLearn_InferenceMetadata_Response.StdDev
	39, // 33: protocol.CMsgSteamLearn_InferenceMetadata_Response.compact_tables:type_name -> protocol.CMsgSteamLearn_InferenceMetadata_Response.CompactTable
	40, // 34: protocol.CMsgSteamLearn_InferenceMetadata_Response.sequence_tables:type_name -> protocol.CMsgSteamLearn_InferenceMetadata_Response.SequenceTable
	41, // 35: protocol.CMsgSteamLearn_InferenceMetadata_Response.kmeans:type_name -> protocol.CMsgSteamLearn_InferenceMetadata_Response.KMeans
	44, // 36: protocol.CMsgSteamLearn_InferenceMetadata_Response.app_info:type_name -> protocol.CMsgSteamLearn_InferenceMetadata_Response.AppInfoEntry
	42, // 37: protocol.CMsgSteamLearn_InferenceMetadata_Response.snapshot_histogram:type_name -> protocol.CMsgSteamLearn_InferenceMetadata_Response.SnapshotHistogram
	58, // 38: protocol.CMsgSteamLearn_InferenceBackend_Response.outputs:type_name -> protocol.CMsgSteamLearn_InferenceBackend_Response.Output
	5,  // 39: protocol.CMsgSteamLearn_Inference_Response.inference_result:type_name -> protocol.ESteamLearnInferenceResult
	30, // 40: protocol.CMsgSteamLearn_Inference_Response.backend_response:type_name -> protocol.CMsgSteamLearn_InferenceBackend_Response
	46, // 41: protocol.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.map_values:type_name -> protocol.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry
	47, // 42: protocol.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.map_mappings:type_name -> protocol.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry
	49, // 43: protocol.CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.map_values:type_name -> protocol.CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.MapValuesEntry
	50, // 44: protocol.CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.map_mappings:type_name -> protocol.CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.MapMappingsEntry
	51, // 45: protocol.CMsgSteamLearn_InferenceMetadata_Response.KMeans.clusters:type_name -> protocol.CMsgSteamLearn_InferenceMetadata_Response.KMeans.Cluster
	43, // 46: protocol.CMsgSteamLearn_InferenceMetadata_Response.AppInfoEntry.value:type_name -> protocol.CMsgSteamLearn_InferenceMetadata_Response.AppInfo
	45, // 47: protocol.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapValuesEntry.value:type_name -> protocol.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry
	45, // 48: protocol.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.MapMappingsEntry.value:type_name -> protocol.CMsgSteamLearn_InferenceMetadata_Response.CompactTable.Entry
	48, // 49: protocol.CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.MapValuesEntry.value:type_name -> protocol.CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.Entry
	48, // 50: protocol.CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.MapMappingsEntry.value:type_name -> protocol.CMsgSteamLearn_InferenceMetadata_Response.SequenceTable.Entry
	52, // 51: protocol.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput.value_sequence:type_name -> protocol.CMsgSteamLearn_InferenceBackend_Response.Sequence
	52, // 52: protocol.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput.value_sequence:type_name -> protocol.CMsgSteamLearn_InferenceBackend_Response.Sequence
	55, // 53: protocol.CMsgSteamLearn_InferenceBackend_Response.Output.binary_crossentropy:type_name -> protocol.CMsgSteamLearn_InferenceBackend_Response.BinaryCrossEntropyOutput
	57, // 54: protocol.CMsgSteamLearn_InferenceBackend_Response.Output.categorical_crossentropy:type_name -> protocol.CMsgSteamLearn_InferenceBackend_Response.CategoricalCrossEntropyOutput
	56, // 55: protocol.CMsgSteamLearn_InferenceBackend_Response.Output.multi_binary_crossentropy:type_name -> protocol.CMsgSteamLearn_InferenceBackend_Response.MutliBinaryCrossEntropyOutput
	53, // 56: protocol.CMsgSteamLearn_InferenceBackend_Response.Output.regression:type_name -> protocol.CMsgSteamLearn_InferenceBackend_Response.RegressionOutput
	54, // 57: protocol.CMsgSteamLearn_InferenceBackend_Response.Output.named_inference:type_name -> protocol.CMsgSteamLearn_InferenceBackend_Response.NamedInferenceOutput
	14, // 58: protocol.SteamLearn.RegisterDataSource:input_type -> protocol.CMsgSteamLearn_RegisterDataSource_Request
	16, // 59: protocol.SteamLearn.CacheData:input_type -> protocol.CMsgSteamLearn_CacheData_Request
	18, // 60: protocol.SteamLearn.SnapshotProject:input_type -> protocol.CMsgSteamLearn_SnapshotProject_Request
	20, // 61: protocol.SteamLearn.BatchOperation:input_type -> protocol.CMsgSteamLearn_BatchOperation_Request
	23, // 62: protocol.SteamLearn.GetAccessTokens:input_type -> protocol.CMsgSteamLearn_GetAccessTokens_Request
	26, // 63: protocol.SteamLearn.Inference:input_type -> protocol.CMsgSteamLearn_Inference_Request
	27, // 64: protocol.SteamLearn.InferenceMetadata:input_type -> protocol.CMsgSteamLearn_InferenceMetadata_Request
	15, // 65: protocol.SteamLearn.RegisterDataSource:output_type -> protocol.CMsgSteamLearn_RegisterDataSource_Response
	17, // 66: protocol.SteamLearn.CacheData:output_type -> protocol.CMsgSteamLearn_CacheData_Response
	19, // 67: protocol.SteamLearn.SnapshotProject:output_type -> protocol.CMsgSteamLearn_SnapshotProject_Response
	21, // 68: protocol.SteamLearn.BatchOperation:output_type -> protocol.CMsgSteamLearn_BatchOperation_Response
	24, // 69: protocol.SteamLearn.GetAccessTokens:output_type -> protocol.CMsgSteamLearn_GetAccessTokens_Response
	31, // 70: protocol.SteamLearn.Inference:output_type -> protocol.CMsgSteamLearn_Inference_Response
	29, // 71: protocol.SteamLearn.InferenceMetadata:output_type -> protocol.CMsgSteamLearn_InferenceMetadata_Response
	65, // [65:72] is the sub-list for method output_type
	58, // [58:65] is the sub-list for method input_type
	58, // [58:58] is the sub-list for extension type_name
	58, // [58:58] is the sub-list for extension extendee
	0,  // [0:58] is the sub-list for field type_name
}

func init() { file_steammessages_steamlearn_steamworkssdk_proto_init() }
func file_steammessages_steamlearn_steamworkssdk_proto_init() {
	if File_steammessages_steamlearn_steamworkssdk_proto != nil {
		return
	}
	file_steammessages_unified_base_steamworkssdk_proto_init()
	file_steammessages_steamlearn_steamworkssdk_proto_msgTypes[51].OneofWrappers = []any{
		(*CMsgSteamLearn_InferenceBackend_Response_Output_BinaryCrossentropy)(nil),
		(*CMsgSteamLearn_InferenceBackend_Response_Output_CategoricalCrossentropy)(nil),
		(*CMsgSteamLearn_InferenceBackend_Response_Output_MultiBinaryCrossentropy)(nil),
		(*CMsgSteamLearn_InferenceBackend_Response_Output_Regression)(nil),
		(*CMsgSteamLearn_InferenceBackend_Response_Output_NamedInference)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_steammessages_steamlearn_steamworkssdk_proto_rawDesc), len(file_steammessages_steamlearn_steamworkssdk_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_steammessages_steamlearn_steamworkssdk_proto_goTypes,
		DependencyIndexes: file_steammessages_steamlearn_steamworkssdk_proto_depIdxs,
		EnumInfos:         file_steammessages_steamlearn_steamworkssdk_proto_enumTypes,
		MessageInfos:      file_steammessages_steamlearn_steamworkssdk_proto_msgTypes,
	}.Build()
	File_steammessages_steamlearn_steamworkssdk_proto = out.File
	file_steammessages_steamlearn_steamworkssdk_proto_goTypes = nil
	file_steammessages_steamlearn_steamworkssdk_proto_depIdxs = nil
}
